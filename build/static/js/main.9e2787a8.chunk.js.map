{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/page.tsx","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-react-uq/index.ts","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/IconText.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","images/logo.svg","tonva-tools/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","functionCategory/VRootCategory.tsx","functionCategory/VCategory.tsx","functionCategory/funcCategories.tsx","pages/index.tsx","functionCategory/CFunctionCategory.tsx","ui/common.tsx","ui/index.tsx","CSCMApp.tsx","ui/product/index.tsx","ui/product/tuid/index.tsx","ui/product/tuid/productCategory.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_1__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_10__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getUnitName","unitId","unitFromName","_page__WEBPACK_IMPORTED_MODULE_3__","header","_loading__WEBPACK_IMPORTED_MODULE_11__","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","hash","document","location","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_9__","parent","logined","notLogined","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","onClick","logout","logoutClear","cp","ChangePasswordPage","startWait","endWait","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","guestApi","uqApi","wsChannel","apiBase","appBridge","host","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_4__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","clone","_ui__WEBPACK_IMPORTED_MODULE_2__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_3___default","_titleBar__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rUnit","rAppOwner","rAppName","uqsPure","obj","cachedUqs","loadAppUqs","checkUqs","Link","cLink_CLink","tslib_es6","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_tools","tonva_react_form","placeholder","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","size","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","vTuidList_VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","Array","isArray","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickControl_PickControl","Content","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","entity_Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","substring","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","retId","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","tuid_TuidMain","Main","tuid_TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","startApp","convertUIKeyToLowercase","CApp","_controllers__WEBPACK_IMPORTED_MODULE_2__","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_8__","overSize","upload","resUploader","resId","isChanged","tonva_react_form__WEBPACK_IMPORTED_MODULE_9__","_page__WEBPACK_IMPORTED_MODULE_7__","_resUploader__WEBPACK_IMPORTED_MODULE_4__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_6__","mobx__WEBPACK_IMPORTED_MODULE_3__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_5__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_4__","buttons","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","promiseChecks","newCUq","checks","retError","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","isProduction","loadAppUnits","showUnsupport","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","appContent","appPage","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidEdit","CTuidList","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","_nav__WEBPACK_IMPORTED_MODULE_1__","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","account","verify","prop","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","coordinator","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_3__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","checkContextRules","removeErrors","renderTemplet","onKeyDown","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","idWidget_IdWidget","pickId","clearContextError","required-item","cursor-pointer","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","pos","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageItemEdit","imageSrc","end","ui_image","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","pull","pulse","rotate","flip","inverse","IconText_IconText","iconClass","textClass","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","num","userSetProp","FetchErrorView","reApi","errContent","LocalData","Data","homeTabCur","module","exports","meTab","LoadableComponent","lib_default","loader","VSiteHeader_VSiteHeader","logo_default","alt","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","renderCategoryRootList","CHome_CHome","cFunctionCategory","renderRootList","renderHome","startDebug","titleTitle","textOverflow","whiteSpace","VRootCategory_subStyle","fontSize","VRootCategory_VRootCategory","categoryClick","categoryWapper","openMainPage","renderRootCategory","renderSubCategory","marginRight","renderThirdCategory","categories","VCategory_VCategory","renderChild","childWapper","categoryWaper","cHome","funcs","pid","findPage","CFunctionCategory_CFunctionCategory","productUI","product","brand","description","CAS","purity","molecularFomula","molecularWeight","common_item","tonva_react_uq","packx","radiox","radioy","src_ui","initTabName","faceTabs","SCM/product","productx","productCategory","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e2787a8.chunk.js","sourcesContent":["export {left0} from './left0';\nexport * from './user';\nexport * from './net';\nexport * from './ui';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\nexport * from './entry';\n\n","export * from './form';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './components';\nexport * from './media';\nexport * from './listView';\nexport * from './searchBox';\nexport * from './multiStep';\nexport * from './uid';\n\n//test fork","import * as React from 'react';\nimport { Controller, VPage, View } from 'tonva-tools';\nimport { Entity, Field, TuidMain } from '../entities';\nimport { CUq } from './uq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid, _ownerField} = field;\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\n            let param:any = undefined;\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../fetchError';\nimport {appUrl, setMeInFrame, logoutUqTokens} from '../net/appBridge';\nimport {LocalData} from '../local';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\n\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n\nconst logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface State {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, State> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        if (key === undefined) return;\n        if (this.stack.find(v => v.key === key) === undefined) return;\n        while (this.stack.length >0) {\n            let len = this.stack.length;\n            let top = this.stack[len-1];\n            if (top.key === key) break;\n            this.pop();\n        }\n    }\n\n    topKey():number {\n        let len = this.stack.length;\n        if (len === 0) return undefined;\n        return this.stack[len-1].key;\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (self != window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n                    <span className=\"sr-only\">Loading...</span>\n                </li>;\n                break;\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\n        return (\n        <ul className='va'>\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    @observable user: User/*InNav*/ = undefined;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getUnitName() {\n        try {\n            let unitRes = await fetch('unit.json', {});\n            //if (unitRes)\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.clear();\n            return;\n        }\n    }\n\n    private async loadUnit() {\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (isDevelopment !== true) return unit.id;\n            unitName = await this.getUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    private isInFrame:boolean;\n    private centerHost: string;\n    async start() {\n        nav.clear();\n        nav.push(<Page header={false}><Loading /></Page>);\n        await host.start();\n        let {url, ws, resHost} = host;\n        this.centerHost = url;\n        this.resUrl = 'http://' + resHost + '/res/';\n        this.wsHost = ws;\n        setCenterUrl(url);\n        \n        let unit = await this.loadUnit();\n        meInFrame.unit = unit;\n\n        let guest:Guest = this.local.guest.get();\n        if (guest === undefined) {\n            guest = await guestApi.guest();\n        }\n        nav.setGuest(guest);\n\n        let hash = document.location.hash;\n        // document.title = document.location.origin;\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\n        if (this.isInFrame === true) {\n            let mif = setMeInFrame(hash);\n            if (mif !== undefined) {\n                this.ws = wsBridge;\n                console.log('this.ws = wsBridge in sub frame');\n                //nav.user = {id:0} as User;\n                if (self !== window.parent) {\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\n                }\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                //await this.showAppView();\n                return;\n            }\n        }\n\n        let user: User = this.local.user.get();\n        if (user === undefined) {\n            let {notLogined} = this.nav.props;\n            if (notLogined !== undefined) {\n                await notLogined();\n            }\n            else {\n                await nav.showLogin(undefined);\n            }\n            return;\n        }\n\n        await nav.logined(user);\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\n        ws.connect();\n\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, top?:any, withBack?:boolean) {\n        let lv = await import('../entry/login');\n         let loginView = <lv.default withBack={withBack} callback={callback} top={top} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        logoutUqTokens();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    async changePassword() {\n        let cp = await import('../entry/changePassword');\n        nav.push(<cp.ChangePasswordPage />);\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    topKey():number {\n        return this.nav.topKey();\n    }\n    popTo(key:number) {\n        this.nav.popTo(key);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify } from '../../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { BoxId, Tuid } from \"../entities\";\nimport { PureJSONContent } from '../controllers';\n\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    if (typeof bi === 'number') return <>{bi}</>;\n    let {id, _$tuid, _$com} = bi as BoxId;\n    let t:Tuid = _$tuid;\n    if (t === undefined) {\n        if (ui !== undefined) return ui(bi, x);\n        return PureJSONContent(bi, x);\n    }\n    let com = ui || _$com;\n    if (com === undefined) {\n        com = bi._$com = t.getTuidContent();\n    }\n    let val = t.valueFromId(id);\n    if (typeof val === 'number') val = {id: val};\n    if (ui !== undefined) {\n        let ret = ui(val, x);\n        if (ret !== undefined) return ret;\n        return <>{id}</>;\n    }\n    return React.createElement(com, val);\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'undefined':\n            break;\n        case 'object':\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\n            break;\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }       \n    if (nullUI === undefined) return <>null</>;\n    return nullUI();\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","export * from './jsonStringify';\nexport * from './tv';\n","import { decodeGuestToken } from '../user';\nimport { CenterApi } from './uqApi';\n\nexport class GuestApi extends CenterApi {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './uqApi';\nexport {meInFrame, isBridged} from './appBridge';\nexport * from './host';\nexport {httpGet} from './httpChannel';\n","export * from './nav';\nexport * from './titleBar';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';","import _ from 'lodash';\nimport {nav} from '../ui';\nimport {uid} from '../uid';\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\ninterface UqTokenAction extends UqToken {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) uqTokens[i] = undefined;\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let meInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                url: ret.url,\n                urlDebug: ret.urlDebug,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    let user = nav.user = message; // message.user;\n    setCenterToken(user.id, user.token);\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\n    let {unit} = appInFrame;\n    let parts = apiName.split('/');\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\n    if (ret === undefined) {\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\n        throw 'api not found';\n    }\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, url, urlDebug, token} = message;\n    let action = uqTokens[apiName];\n    if (action === undefined) {\n        throw 'error app api return';\n        //return;\n    }\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\n    action.url = realUrl;\n    action.token = token;\n    action.resolve(action);\n}\n\nexport function setMeInFrame(appHash: string):AppInFrame {\n    let parts = appHash.split('-');\n    let len = parts.length;\n    meInFrame.hash = parts[0].substr(3);\n    if (len>0) meInFrame.unit = Number(parts[1]);\n    if (len>1) meInFrame.page = parts[2];\n    if (len>2) meInFrame.param = parts.slice(3);\n    return meInFrame;\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken === undefined) {\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\n            throw err;\n        }\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: meInFrame.hash,\n        }, \"*\");\n    });\n}\n\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {TitleBar} from './titleBar';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string;\n    icon?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    logout?: boolean | (()=>void);\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs[0];\n        if (t0 === undefined) return;\n        await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot');\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num');\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let titleBar;\n        if (header !== false) {\n            titleBar = <TitleBar \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right} \n            />;\n        }\n\n        return <article className='page-container'>\n            {titleBar}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                })\n            }\n            </section>\n            {tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\n        let titleBar;\n        if (header !== false)\n            titleBar = <TitleBar \n                back={back} \n                center={header as any}\n                right={right}\n                logout={this.props.logout}\n            />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {titleBar}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter;\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","import {nav} from '../ui/nav';\nimport {FetchError} from '../fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel} from './httpChannel';\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\nimport {appUq, meInFrame} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\nimport { nav } from '../ui';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n}\n\ninterface UqLocal {\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n        }\n        return isMatch;\n\n    }\n}\n\nconst localUqs = new CacheUqLocals;\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\n        this.token = uqToken.token;\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n\n    async update():Promise<string> {\n        return await this.get('update');\n    }\n\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    async loadAccess():Promise<any> {\n        return await localUqs.loadAccess(this);\n    }\n\n    async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }\n\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }\n\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\n        try {\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\n            let ret = await this.get(url);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }\n\n    async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }\n\n    async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }\n\n    async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }\n\n    async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }\n\n    async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }\n\n    async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    async user():Promise<any> {\n        return await this.get('user');\n    }\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, url, urlDebug} = ret;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        this.token = token;\n        return new HttpChannel(false, realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\n}\n\nexport abstract class CenterApi extends ApiBase {\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokens = 'uqTokens';\nexport class UqTokenApi extends CenterApi {\n    private local: UqLocals;\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        try {\n            let {unit:unitParam, uqOwner, uqName} = params;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqTokens);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {unit, user} = this.local;\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: params.unit,\n                    uqs: {}\n                };\n            }\n\n            let un = uqOwner+'/'+uqName;\n            let nowTick = new Date().getTime();\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {tick, value} = uq;\n                if ((nowTick - tick) < 24*3600*1000) {\n                    return _.clone(value);\n                }\n            }\n            let ret = await this.get('app-uq', params);\n            this.local.uqs[un] = {\n                tick: nowTick,\n                value: ret,\n            }\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\n            return _.clone(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqTokens);\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApi {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface App {\n    id: number;\n    uqs: AppUq[];\n}\n\nexport interface AppUq {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    url: string;\n    urlDebug: string;\n    ws: string;\n    wsDebug: string;\n    access: string;\n    token: string;\n}\n\nconst appUqs = 'appUqs';\n\nexport class CenterAppApi extends CenterApi {\n    private cachedUqs: any;\n    async uqs(unit:number, appOwner:string, appName:string):Promise<App> {\n        let ret:any;\n        let ls = localStorage.getItem(appUqs);\n        if (ls !== null) {\n            let rLs = JSON.parse(ls);\n            let {unit:rUnit, appOwner:rAppOwner, appName:rAppName, value} = rLs;\n            if (unit === rUnit && appOwner === rAppOwner && appName === rAppName) ret = value;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(unit, appOwner, appName);\n            let obj = {\n                unit:unit, \n                appOwner:appOwner, \n                appName:appName, \n                value: ret,\n            }\n            localStorage.setItem(appUqs, JSON.stringify(obj));\n        }\n        return this.cachedUqs = _.cloneDeep(ret);\n    }\n    private async uqsPure(unit:number, appOwner:string, appName:string):Promise<App> {\n        return await this.get('tie/app-uqs', {unit:unit, appOwner:appOwner, appName:appName});\n    }\n    async checkUqs(unit:number, appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(unit, appOwner, appName);\n        return _.isMatch(this.cachedUqs, ret);\n    }\n    async unitxUq(unit:number):Promise<AppUq> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\n        return await this.post('tie/reset-password', param);\n    }\n}\n\nexport async function loadAppUqs(appOwner:string, appName): Promise<App> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(unit, appOwner, appName);\n    centerAppApi.checkUqs(unit, appOwner, appName).then(v => {\n        if (v === false) {\n            localStorage.removeItem(appUqs);\n            nav.start();\n        }\n    });\n    return ret;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from 'tonva-tools';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n}\n\nexport function Image(props: ImageProps) {\n    let {className, style, src} = props;\n    if (!src) {\n        return <div className={classNames(className, 'image-none')} style={style}>\n            <i className=\"fa fa-camera\" />\n        </div>;\n    }\n    if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} style={style} />;\n}\n","export const isDevelopment = process.env.NODE_ENV === 'development';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start() {\n        if (isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, urlDebug:string):string {\n        if (isDevelopment !== true) return url;\n        if (!urlDebug) return url;\n        for (let i in hosts) {\n            let host = hosts[i];\n            let {value, local} = host;\n            let hostString = `://${i}/`;\n            let pos = urlDebug.indexOf(hostString);\n            if (pos > 0) {\n                if (local === false) return url;\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\n                return urlDebug;\n            }\n        }\n        return url;\n    }\n\n    async localCheck(urlDebug: string):Promise<boolean> {\n        return await localCheck(urlDebug);\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 200;\n\nfunction fetchLocalCheck(url:string):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, fetchOptions as any)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { TuidMain, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, proxyLinks, isFrom} = this.controller;\n        let newButton;\n        if (isFrom === false) newButton = <button className=\"btn btn-primary ml-3\" onClick={this.onNew}>新增</button>;\n        return () => <Page header={label}>\n            {proxyLinks === undefined ?\n            <>\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\n                <div className='my-3'>\n                    {newButton}\n                    <button className=\"btn btn-primary ml-3\" onClick={this.onList}>列表</button>\n                </div>\n            </> :\n            <List className=\"my-2\"\n                header={<Muted>{label} 代理下列Tuid</Muted>}\n                items={proxyLinks}\n                item={{render: this.entityRender, onClick:this.entityClick}} />\n            }\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { TuidMain, Tuid } from '../../entities';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { nav, Page } from 'tonva-tools';\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../entities';\nimport { CTuid, TuidUI } from './cTuid';\nimport { SearchBox, List } from 'tonva-react-form';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.owner === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { TuidMain } from '../../entities';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import { PageItems } from 'tonva-tools';\nimport { Tuid } from \"../../entities\";\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\nimport { JSONContent, RowContent } from '../form/viewModel';\n\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidMainList extends VTuidMainListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isFrom === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n","import _ from 'lodash';\nimport { TypeVPage, PageItems } from 'tonva-tools';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from \"../uq/cUq\";\nimport { CLink } from \"../link\";\nimport { VTuidInfo } from \"./vTuidInfo\";\nimport { TuidPageItems } from \"./pageItems\";\nimport { VTuidMainList } from './vTuidList';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity.owner || this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport class CTuidMain extends CTuid<TuidMain> {\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n        let tuid = this.entity;\n        this.proxies = tuid.proxies;\n        if (this.proxies !== undefined) {\n            this.proxyLinks = [];\n            for (let i in this.proxies) {\n                let link = this.cUq.linkFromName('tuid', i);\n                this.proxyLinks.push(link);\n            }\n        }\n    }\n\n    async from():Promise<CTuidMain> {\n        let ret = await this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    async cUqFrom():Promise<CUq> {\n        return await this.entity.cUqFrom();\n    }\n    async cEditFrom(): Promise<CTuidEdit> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidEditFromName(this.entity.name);\n    }\n    async cInfoFrom(): Promise<CTuidInfo> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidInfoFromName(this.entity.name);\n    }\n    async cSelectFrom(): Promise<CTuidSelect> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    proxies: {[name:string]: TuidMain};\n    proxyLinks: CLink[];\n    isFrom: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': v = this.VTuidEdit; break;\n            case 'list': v = this.VTuidList; break;\n            case 'edit': await this.edit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        await this.openVPage(v, value);\n    }\n\n    protected async edit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        let v = this.VTuidEdit;\n        await this.openVPage(v, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidEdit extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.edit(id);\n    }\n}\n\nexport class CTuidList extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<TuidDiv> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ' + this.entity.name);\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\nimport { uid } from 'tonva-react-form';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames'\nimport { ViewModel } from \"./viewModel\";\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed, action } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { ViewModel } from \"../viewModel\";\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || this.field !== undefined && this.field.null === false) {\n            this.rules.push(new RuleRequired);\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            mode === FormMode.edit && this.fieldUI.editable === false;\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum);\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (ret === NaN)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) == v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt);\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../entities';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\nimport { IObservableArray, observable } from 'mobx';\nimport _ from 'lodash';\nimport { List, FA, Muted } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields, Field } from '../../entities';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../../tools';\nimport { Field, Tuid } from '../../../entities';\nimport { VField, RedMark } from \"./vField\";\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput, FormMode } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: Tuid;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        let {_ownerField} = this.field;\n        if (_ownerField !== undefined) {\n            let {name, arr} = _ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || this.input.placeHolder}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let redDot;\n        let {required} = this.fieldUI;\n        if (required === true || this.field.null === false) {\n            redDot = <RedMark />;\n        }\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\nimport { Field, ArrFields } from \"../../entities\";\nimport { VForm, FormOptions } from \"./vForm\";\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\nimport { VSubmit } from \"./vSubmit\";\nimport { VField, buildVField, VComputeField } from \"./vField\";\nimport { VArr } from \"./vArr\";\nimport { VTuidField } from \"./vField/vTuidField\";\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name, fields} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n            vField = VIntField;\n            break;\n        case 'bigint':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { observer } from \"mobx-react\";\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../entities';\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from 'tonva-react-form';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields, id, order} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","export * from './vForm';\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from '../fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../ui/nav';\nimport { isDevelopment } from './host';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private isCenter: boolean;\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.isCenter = isCenter;\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\n        navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","export * from './CApp';\nexport * from './startApp';\nexport * from './uq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Rule} from '../rule';\n\nexport abstract class ControlBase {\n    protected formView: FormView;\n    constructor(formView:FormView) {\n        this.formView = formView;\n    }\n    render():JSX.Element {\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n        </div>;\n    }\n    protected abstract renderControl():JSX.Element;\n    @computed get hasError():boolean {return false;}\n    @computed get filled():boolean {return false;}\n    clear() {}\n    clearErrors() {}\n    readValues(values:any):any {}\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    isOk():boolean {this.validate(); return !this.hasError;}\n    protected validate() {}\n}\n\nexport abstract class Control extends ControlBase {\n    protected field: Field;\n    protected face: Face;\n    protected props: any;\n    protected rules: Rule[];\n\n    protected element: HTMLElement;\n    @observable protected isOK?: boolean;\n    @observable protected error: string;\n    @observable protected value: any;\n\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView);\n        this.field = field;\n        this.face = face;\n        this.init();\n        this.setProps();\n    }\n    protected ref(element: HTMLElement) {\n        this.element = element;\n    }\n    protected init() {\n        this.rules = [];\n        let r = this.field.rules;\n        if (r !== undefined) {\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\n            else this.rules.push(r as Rule);\n        }\n    };\n    protected setProps():any {\n        return this.props = {\n            ref: this.ref.bind(this),\n            name: this.field.name,\n        }\n    };\n    @computed get hasError():boolean {return this.error !== undefined;}\n    @computed get filled():boolean {\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\n        return ret;\n    }\n    clearValue() { this.value = undefined; }\n    clear() { this.clearErrors(); this.clearValue(); }\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\n    readValues(values:any):any {\n        values[this.field.name] = this.value;\n    }\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    protected getValueFromElement():any {return this.value;}\n    protected validate() {\n        try {\n            let v = this.getValueFromElement();\n            if (this.rules.length > 0) {\n                let isOk:boolean;\n                for (let rule of this.rules) {\n                    console.log('validate: %s', v);\n                    let err = rule(v);\n                    console.log('validate: %s err: %s', v, err);\n                    if (err === true) {\n                        this.error = undefined;\n                        isOk = true;\n                    }\n                    else if (err !== undefined) {\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \n                        //    this.field.name, JSON.stringify(v), rule, err);\n                        this.error = err;\n                        this.isOK = false;\n                        return;\n                    }\n                }\n                this.isOK = isOk;\n            }\n            this.value = v;\n        }\n        catch (e) {\n            this.error = e.message;\n        }\n    }\n    render():JSX.Element {\n        let n;\n        if (this.face !== undefined) {\n            let {notes} = this.face;\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\n        }\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n            {n}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {ControlBase} from './control';\n\nexport class ButtonsControl extends ControlBase {\n    constructor(props) {\n        super(props);\n        this.otherClick = this.otherClick.bind(this);\n    }\n    private otherClick() {\n        let onOther = this.formView.props.onOther;\n        if (onOther === undefined) return;\n        let values = this.formView.readValues();\n        onOther(values);\n    }\n    renderControl():JSX.Element {\n        console.log('buttons.renderControl');\n        let nothing = this.formView.nothing;\n        let hasError = this.formView.hasError;\n        let props = this.formView.props;\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\n        let {submitButton, otherButton, onOther} = props;\n        let btnOther;\n        if (otherButton !== undefined) {\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\n                {otherButton}\n            </button>\n        }\n        return <div className=\"d-flex justify-content-start\">\n            <button\n                className=\"btn btn-primary\"\n                type=\"submit\" \n                disabled={nothing || hasError}>\n                {submitButton || '提交'}\n            </button>\n            {btnOther}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, Placeholder} from '../face';\nimport {Control} from './control';\n\nconst TxtRequired = '必须填入要求内容';\n\nexport abstract class CharsControl extends Control {\n    protected init() {\n        super.init();\n        if (this.field.required === true) {\n            this.rules.push((v) => {\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\n                return true;\n            });\n        }\n    }\n\n    protected element: HTMLInputElement;\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onBlur: this.onBlur.bind(this),\n            onFocus: this.onFocus.bind(this),\n            onChange: this.onChange.bind(this),\n        });\n        let face = this.face as Placeholder;\n        if (face !== undefined) {\n            _.assign(this.props, {\n                placeholder: face.placeholder,\n            });\n        }\n        return this.props;\n    };\n    protected parseValue(value?:string):any {return value;}\n    private onBlur() {\n        //console.log('field %s onBlure', this.field.name);\n        this.validate();\n    }\n    private onChange() {\n        console.log('onChange');\n        this.validate();\n    }\n    private onFocus() {\n        this.clearErrors();\n        //this.error = undefined;\n        //this.formView.clearErrors();\n    }\n    protected className() {\n        return classNames({\n            \"form-control\": true,\n            \"has-success\": this.isOK === true,\n            \"is-invalid\": this.error !== undefined,\n            \"is-valid\": this.error === undefined && this.isOK === true,\n        });\n    }\n    protected renderInput():JSX.Element {\n        return <input className={this.className()} {...this.props} />;\n    }\n    protected ref(element: HTMLInputElement) {\n        super.ref(element);\n        if (element) {\n            element.value = this.value === undefined? '':this.value;\n        }\n    }\n    protected renderError():JSX.Element {\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\n        if (this.error === undefined) return null;\n        return <div className=\"invalid-feedback\">{this.error}</div>\n    }\n    clearValue() { super.clearValue(); this.element.value = ''; }\n    setError(fieldName:string, error:string) {\n        if (this.field.name === fieldName) this.error = error;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) return;\n        //this.element.value = v;\n        this.value = v;\n    }\n    renderControl():JSX.Element {\n        return <React.Fragment>\n            {this.renderInput()}\n            {this.renderError()}\n        </React.Fragment>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\n\nexport class StringControl extends CharsControl {\n    protected field: StringField;\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'text',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        return value;\n    }\n}\n\nexport class PasswordControl extends StringControl {\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'password',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {IntField, DecField, NumberField} from '../field';\nimport {CharsControl} from './charsControl';\n\nconst ErrInvalidNumber = '无效的数字';\nconst ErrMin = '最小值为';\nconst ErrMax = '最大值为';\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport class NumberControl extends CharsControl {\n    protected field: IntField | DecField | NumberField;\n    protected value: number;\n    protected extraChars: number[];\n    \n    protected init() {\n        super.init();\n        this.extraChars = [];\n        let {min, max} = this.field;\n        if (min !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\n        }\n        else {\n            this.extraChars.push(KeyCode_Neg);\n        }\n\n        if (max !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        let n = Number.parseFloat(value);\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\n        return n;\n    }\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            type: 'number',\n            step: (this.field as DecField).step,\n            onKeyPress: this.onKeyPress.bind(this),\n        });\n    }\n\n    onKeyPress(event:KeyboardEvent) {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.element.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.element.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.element.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.element.value = v;\n    }\n}\n","import * as React from 'react';\nimport {Control, ControlBase} from './control';\nimport {FormView} from '../formView';\n\nexport class UnknownControl extends Control {\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n            don't know how to create control<br/>\n            field: {JSON.stringify(this.field)} must be object <br/>\n            face: {JSON.stringify(this.face)} must be object <br/>\n            </div>\n        </div>;\n    }\n}\n\nexport class EmptyControl extends ControlBase {\n    private element:JSX.Element;\n    constructor(formView:FormView, element:JSX.Element) {\n        super(formView);\n        this.element = element;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            {this.element}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, IdPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickIdControl extends Control {\n    protected face: IdPickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    onPicked = (value: any) => {\n        this.value = value.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private controlContent():string|JSX.Element {\n        let {itemFromId, fromPicked, initCaption} = this.face;\n        if (this.value === undefined) {\n            return initCaption || '请选择Id';\n        }\n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        if (itemFromId !== undefined) {\n            if (fromPicked !== undefined) {\n                let item = itemFromId(this.value);\n                if (item) {\n                    let ret = fromPicked(item);\n                    if (ret !== undefined) return ret.caption;\n                }\n            }\n        }\n        return String(this.value);\n    }\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\n                onClick={this.onClick}>\n                {this.controlContent()}\n            </div>;\n        }\n        return <div className=\"form-control-static \">\n            <input.component id={this.value} \n                ui={tuid}\n                //input={input}\n                //entitiesUI={this.formView.props.context} \n                //params={this.formView.readValues()}\n                //onPicked={this.onPicked}\n                />\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, TuidPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickTuidControl extends Control {\n    protected face: TuidPickFace;\n    // protected value: number;\n    @observable private caption: string|JSX.Element;\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.onIdChanged = this.onIdChanged.bind(this);\n        //this.onClick = this.onClick.bind(this);\n    }\n    /*\n    private async onClick() {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }*/\n    onIdChanged(id: any) {\n        this.value = id.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private buildContent():JSX.Element {\n        //let {tuid, input} = this.face;\n        return <this.face.input.component \n            {...this.face}\n            id={this.value}\n            //ui={this.face.ui}\n            //input={input}\n            //entitiesUI={this.formView.props.context} \n            onFormValues={()=>this.formView.readValues()}\n            onIdChanged={this.onIdChanged} />;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static \">\n            {this.buildContent()}\n        </div>;\n    }\n}\n/*\n<button className=\"form-control btn btn-outline-info\"\ntype=\"button\"\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\nonClick={this.onClick}>\n{this.buildContent()}\n</button>\n*/","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, PickFace} from '../face';\nimport {Control} from './control';\nimport { observer } from 'mobx-react';\n\nexport class PickControl extends Control {\n    protected face: PickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    /*\n    private controlContent():string|JSX.Element {\n        let {content: Content} = this.face;\n        if (this.value === undefined) {\n            return '请选择';\n        }\n        \n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        return <Content id={this.value} />;\n    }*/\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        return <this.view />;\n        /*\n        let {content:Content} = this.face;\n        //if (this.value === undefined) {\n            //return <div>no input on idpick</div>;\n        //}\n        //return <div className=\"form-control-static \">\n        //    <Content />\n        //</div>;\n        */\n    }\n\n    private view = observer(() => {\n        let content;\n        let {content: Content} = this.face;\n        if (this.value === undefined || this.value === null) {\n            content = '请选择';\n        }\n        /*\n        else if (this.caption !== undefined) {\n            content = this.caption;\n        }*/\n        else {\n            content = <Content id={this.value} />;\n        } \n        return <div\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\n            onClick={this.onClick}>\n            {content}\n        </div>\n    });\n}\n","export * from './control';\nexport * from './buttonsControl';\nexport * from './stringControl';\nexport * from './numberControl';\n\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Control, ControlBase} from './control';\nimport {ButtonsControl} from './buttonsControl';\nimport {CheckControl} from './checkControl';\nimport {RadioControl} from './radioControl';\nimport {TextAreaControl} from './textAreaControl';\nimport {SelectControl} from './selectControl';\nimport {UnknownControl, EmptyControl} from './unknownControl';\nimport {StringControl, PasswordControl} from './stringControl';\nimport {NumberControl} from './numberControl';\n\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\nimport { PickIdControl } from './pickIdControl';\nimport { PickTuidControl } from './pickTuidControl';\nimport { PickControl } from './pickControl';\n\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\n\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\n    let label = row.label;\n    if ((<GroupRow>row).group !== undefined)\n        return createGroupControl(form, label, row as GroupRow);\n    if ((<FieldRow>row).field !== undefined)\n        return createFieldControl(form, label, row as FieldRow);\n    return new EmptyControl(form, row.help);\n}\n\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\n    \"string\": StringControl,\n    \"password\": PasswordControl,\n    \"number\": NumberControl,\n    \"checkbox\": CheckControl,\n    \"radiobox\": RadioControl,\n    \"select\": SelectControl,\n    \"pick-id\": PickIdControl,\n    \"pick-tuid\": PickTuidControl,\n    \"textarea\": TextAreaControl,\n    \"pick\": PickControl,\n};\nconst defaultFaces:{[type:string]: Face} = {\n    \"string\": {type:'string'},\n    \"number\": {type:'number'},\n    \"int\": {type:'number'},\n    \"dec\": {type:'number'},\n    \"bool\": {type:'checkbox'},\n}\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\n    let {field, face} = fieldRow;\n    switch (typeof field) {\n        case 'string':\n            field = {\n                name: (field as any) as string,\n                type: 'string',\n            }\n            break;\n        case 'object':\n            break;\n        default:\n            return new UnknownControl(form, field, face);\n    }\n    let fieldType = field.type || 'string';\n    if (face === undefined) {\n        face = defaultFaces[fieldType];\n        if (face === undefined) return new UnknownControl(form, field, face);\n    }\n    else if (face.type === undefined) {\n        let f = defaultFaces[fieldType];\n        face.type = f===undefined? 'string' : f.type;\n    }\n    let control = controls[face.type || fieldType] || UnknownControl;\n    return new control(form, field, face);\n}\n\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\n    return new UnknownControl(form, groupRow as any, undefined);\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field, BoolField} from '../field';\nimport {Face, CheckBoxFace} from '../face';\nimport {Control} from './control';\n\nexport class CheckControl extends Control {    \n    protected element: HTMLInputElement;\n    protected field: BoolField;\n    protected face: CheckBoxFace;\n    private trueValue: any;\n    private falseValue: any;\n\n    protected init() {\n        super.init();\n        let {trueValue, falseValue} = this.field;\n        if (trueValue === undefined) this.trueValue = 1;\n        if (falseValue === undefined) this.falseValue = 0;\n    }\n\n    setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onChange: this.onChange.bind(this),\n        });\n    }\n\n    clearValue() {\n        this.element.checked = this.field.defaultValue === this.trueValue;\n        this.value = this.getValueFromElement();\n    }\n\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) {\n            v = this.field.defaultValue;\n        }\n        if (v !== undefined) {\n            //this.element.checked = v === this.trueValue;\n            //this.value = this.getValueFromElement();\n        }\n    }\n\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\n\n    private onChange() {\n        this.value = this.getValueFromElement();\n    }\n\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <label className=\"form-control\">\n                <label className=\"custom-control custom-checkbox mb-0\">\n                    <input type='checkbox'\n                        name={this.field.name}\n                        ref={this.props.ref}\n                        onChange={this.props.onChange}\n                        className=\"custom-control-input\" />\n                    <span className=\"custom-control-indicator\" />\n                    <span className=\"custom-control-description\">{this.face.label}</span>\n                </label>\n            </label>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, RadioFace} from '../face';\nimport {Control} from './control';\n\nexport class RadioControl extends Control {\n    protected face: RadioFace;\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <div className=\"form-control\">\n            {\n                this.face.list.map((item, index) => {\n                    let t, v;\n                    if (typeof item !== 'object') t = v = item;\n                    else {\n                        t = item.text;\n                        v = item.value;\n                    }\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\n                        <input type='radio'\n                            name={this.field.name} \n                            className=\"custom-control-input\" />\n                        <span className=\"custom-control-indicator\"></span>\n                        <span className=\"custom-control-description\">{t}</span>\n                    </label>;\n                })\n            }\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, SelectFace} from '../face';\nimport {Control} from './control';\n\nexport class SelectControl extends Control {\n    constructor (formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.ref = this.ref.bind(this);\n    }\n    protected face: SelectFace;\n    protected element: HTMLSelectElement;\n    protected getValueFromElement():any {\n        let {selectedIndex, selectedOptions} = this.element;\n        let v:any = selectedOptions[0].value;\n        switch (this.field.type) {\n            case 'number': v = Number(v); break;\n            case 'date': v = new Date(v); break;\n            case 'bool': \n                if (typeof v === 'string') {\n                    v = ((v as string).toLowerCase() === 'true');\n                }\n                break;\n        }\n        return v;\n    }\n    renderControl():JSX.Element {\n        let {list} = this.face;\n        let def = this.face.default;\n        let options: any[] = [];\n        if (def === undefined)\n            options.push(<option key={-1} value={undefined}>请选择</option>);\n        options.push(...list.map((item, index) => {\n            let t, v;\n            if (typeof item !== 'object') t = v = item;\n            else {\n                t = item.text;\n                v = item.value;\n            }\n            return <option key={index} value={v}>{t}</option>;\n        }));\n        return <div className=\"form-control-static\">\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\n                {options}\n            </select>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\nimport {TextAreaFace} from '../face';\n\nexport class TextAreaControl extends CharsControl {\n    protected field: StringField;\n    protected face: TextAreaFace;\n    private el: HTMLTextAreaElement;\n    protected setProps() {\n        let p = super.setProps();\n        let {maxLength} = this.field;\n        let {rows} = this.face;\n        _.assign(p, {\n            maxLength: maxLength,\n            rows: rows,\n        });\n        return p;\n    };\n    protected renderInput():JSX.Element {\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\n    }\n}\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\nimport { TuidMain, Tuid } from './tuid';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    protected entities: Entities;\n    protected schema: any;\n    private jName: string;\n    sys?: boolean;\n    readonly name: string;\n    readonly typeId: number;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        this.entities = entities;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    protected get tvApi() {return this.entities.uqApi;}\n    async getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = await this.entities.uqApi.schema(this.name);\n        this.setSchema(schema);\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        if (this.schema !== undefined) return;\n        this.schema = schema;\n        let {name, fields, arrs, returns} = schema;\n        if (name !== this.name) this.jName = name;\n        this.entities.buildFieldTuid(this.fields = fields);\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\n        //this.newMain = this.buildCreater(fields);\n        //this.newArr = this.buildArrCreater(arrs);\n        //this.newRet = this.buildArrCreater(returns);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromField(field:Field):Tuid {\n        let {_tuid, tuid} = field;\n        if (tuid === undefined) return;\n        if (_tuid !== undefined) return _tuid;\n        return field._tuid = this.entities.getTuid(tuid, undefined);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.entities;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid, undefined);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    protected buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields; \n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name} = field;\n            let d = params[name];\n            let val:any;\n            switch (typeof d) {\n                default: val = d; break;\n                case 'object':\n                    let tuid = field._tuid;\n                    if (tuid === undefined) val = d.id;\n                    else val = tuid.getIdFromObj(d);\n                    break;\n            }\n            result[name] = val;\n        }\n    }\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n    \n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (typeof d) {\n            default: return d;\n            case 'object':\n                let tuid = field._tuid;\n                if (tuid === undefined) return d.id;\n                return tuid.getIdFromObj(d);\n            case 'string':\n                let len = d.length;\n                let r = '', p = 0;\n                for (let i=0;i<len;i++) {\n                    let c = d.charCodeAt(i);\n                    switch(c) {\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                    }\n                }\n                return r + d.substring(p);\n            case 'undefined': return '';\n        }\n    }\n    \n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n    \n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n    \n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n    \n    unpackReturns(data:string):any {\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n    \n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[f.name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[f.name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) break;\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[f.name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[f.name] = null;\n                }\n                ++p;\n                ++i;\n                break;\n            }\n        }\n        return p;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'date':\n            case 'time':\n                let date = new Date(Number(v));\n                return date;\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'dec': return Number(v);\n            case 'bigint':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                _tuid.useId(id, true);\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport _ from 'lodash';\nimport { Entity } from './entity';\nimport { Entities, Field, ArrFields } from './entities';\nimport { isNumber } from 'util';\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\n\nexport class BoxId {\n    id: number;\n    obj?: any;\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\n    _$com?: any;\n    _$tuid?: Tuid;\n    getObj: ()=>any;\n}\n\nconst maxCacheSize = 1000;\nexport abstract class Tuid extends Entity {\n    private BoxId: ()=>void;\n    get typeName(): string { return 'tuid';}\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private waitingIds: number[] = [];          // 等待loading的\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n    idName: string;\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\n    unique: string[];\n    schemaFrom: {owner:string; uq:string};\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        super(entities, name, typeId);\n        this.buildIdBoxer();\n    }\n\n    abstract get Main();\n\n    private buildIdBoxer() {\n        this.BoxId = function():void {};\n        let prototype = this.BoxId.prototype;\n        Object.defineProperty(prototype, '_$tuid', {\n            value: this,\n            writable: false,\n            enumerable: false,\n        })\n        Object.defineProperty(prototype, 'obj', {\n            enumerable: false,\n            get: function() {\n                if (this.id === undefined || this.id<=0) return undefined;\n                return this._$tuid.valueFromId(this.id);\n            }\n        })\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\n            let t:Tuid = this._$tuid;\n            return t.valueFromFieldName(fieldName, this.obj);\n        }\n        prototype.getObj = function():any {\n            if (this._$tuid !== undefined) {\n                return this._$tuid.getCacheValue(this.id);\n            }\n        }\n        prototype.toJSON = function() {return this.id}\n    }\n    boxId(id:number):BoxId {\n        this.useId(id);\n        let ret:BoxId = new this.BoxId();\n        ret.id = id;\n        return ret;\n    }\n    getTuidContent() {\n        return this.entities.cUq.getTuidContent(this);\n    }\n    getIdFromObj(item:any):number {\n        return item[this.idName];\n    }\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id, unique} = schema;\n        this.idName = id;\n        this.unique = unique;\n        this.schemaFrom = this.schema.from;\n    }\n\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        let tId = typeof id;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getCacheValue(_id);\n    }\n    getCacheValue(id:number) {\n        let v = this.cache.get(id);\n        if (this.owner !== undefined && typeof v === 'object') {\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\n        }\n        return v;\n    }\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\n        if (obj === undefined) return;\n        let f = this.fields.find(v => v.name === fieldName);\n        if (f === undefined) return;\n        let v = obj[fieldName];\n        let {_tuid} = f;\n        if (_tuid === undefined) return v;\n        return _tuid.valueFromId(v);\n    }\n    resetCache(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.useId(id);\n    }\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;\n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.entities.cacheTuids(defer===true?70:20);\n        //let idVal = this.createID(id);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n    async proxied(name:string, id:number):Promise<any> {\n        let proxyTuid = this.entities.getTuid(name, undefined);\n        proxyTuid.useId(id);\n        let proxied = await this.tvApi.proxied(this.name, name, id);\n        this.cacheValue(proxied);\n        return proxied;\n    }\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        //let cacheVal = this.createID(id, val);\n        this.cache.set(id, val);\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\n        /*\n        let {tuids, fields} = this.schema;\n        if (tuids !== undefined && fields !== undefined) {\n            for (let f of fields) {\n                let {name, tuid} = f;\n                if (tuid === undefined) continue;\n                let t = this.entities.tuid(tuid);\n                if (t === undefined) continue;\n                t.useId(val[name]);\n            }\n        }*/\n        return true;\n    }\n    protected afterCacheId(tuidValue:any) {\n        for (let f of this.fields) {\n            let {_tuid} = f;\n            if (_tuid === undefined) continue;\n            _tuid.useId(tuidValue[f.name]);\n        }\n    }\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let name:string, arr:string;\n        if (this.owner === undefined) {\n            name = this.name;\n        }\n        else {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        let api = await this.getApiFrom();\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n            this.afterCacheId(tuidValue);\n        }\n        await this.cacheDivIds();\n    }\n    protected async cacheDivIds():Promise<void> {\n    }\n    async load(id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = await this.getApiFrom();\n        let values = await api.tuidGet(this.name, id);\n        if (values === undefined) return;\n        values._$tuid = this;\n        this.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n    protected getDiv(divName:string):TuidDiv {return;}\n    private cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.getDiv(name);\n                for (let row of arrValues) {\n                    row._$tuid = tuidDiv;\n                    row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n    private cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n    async save(id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        let ret = await this.tvApi.tuidSave(this.name, params);\n        let {id:retId, inId} = ret;\n        if (retId === undefined) {\n            params.id = id;\n            this.cacheValue(params);\n        }\n        else if (retId > 0) {\n            params.id = retId;\n            this.cacheValue(params);\n        }\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let {fields} = this.schema;\n        let name:string, arr:string;\n        if (this.owner !== undefined) {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        else {\n            name = this.name;\n            arr = undefined;\n        }\n        let api = await this.getApiFrom();\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = await this.getApiFrom();\n        return await api.tuidArrGet(this.name, arr, owner, id);\n    }\n    /*\n    async loadArrAll(owner:number):Promise<any[]> {\n        return this.all = await this.tvApi.tuidGetAll(this.name);\n    }*/\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\n    }\n    \n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\n    //private async ids(idArr:number[]) {\n    //    return await this.tvApi.tuidIds(this.name, idArr);\n    //}\n    async showInfo(id:number) {\n        await this.entities.cUq.showTuid(this, id);\n    }\n}\n\nexport class TuidMain extends Tuid {\n    get Main() {return this}\n    get uqApi() {return this.entities.uqApi};\n\n    divs: {[name:string]: TuidDiv};\n    proxies: {[name:string]: TuidMain};\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\n                tuidDiv.owner = this;\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n            }\n        }\n    }\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\n    /* 努力回避async里面的super调用，edge不兼容\n    async cacheIds():Promise<void> {\n        await super.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n    */\n    protected async cacheDivIds():Promise<void> {\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n\n    async cUqFrom(): Promise<CUq> {\n        if (this.schemaFrom === undefined) return this.entities.cUq;\n        let {owner, uq: uq} = this.schemaFrom;\n        let cUq = await this.entities.cUq\n        let cApp = cUq.cApp;\n        if (cApp === undefined) return cUq;\n        let cUqFrm = await cApp.getImportUq(owner, uq);\n        if (cUqFrm === undefined) {\n            console.error(`${owner}/${uq} 不存在`);\n            debugger;\n            return cUq;\n        }\n        let retErrors = await cUqFrm.loadSchema();\n        if (retErrors !== undefined) {\n            console.error('cUq.loadSchema: ' + retErrors);\n            debugger;\n            return cUq;\n        }\n        return cUqFrm;\n    }\n\n    async getApiFrom() {\n        let from = await this.from();\n        if (from !== undefined) {\n            return from.entities.uqApi;\n        }\n        return this.entities.uqApi;\n    }\n\n    async from(): Promise<TuidMain> {\n        let cUq = await this.cUqFrom();\n        return cUq.tuid(this.name);\n    }\n\n    async cFrom(): Promise<CTuidMain> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidMainFromName(this.name);\n    }\n\n    async cEditFrom(): Promise<CTuidEdit> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidEditFromName(this.name);\n    }\n\n    async cInfoFrom(): Promise<CTuidInfo> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidInfoFromName(this.name);\n    }\n\n    async cSelectFrom(): Promise<CTuidSelect> {\n        let cUq = await this.cUqFrom();\n        if (cUq === undefined) return;\n        return cUq.cTuidSelectFromName(this.name);\n    }\n\n    protected afterCacheId(tuidValue:any) {\n        super.afterCacheId(tuidValue);\n        if (this.proxies === undefined) return;\n        let {type, $proxy} = tuidValue;\n        let pTuid = this.proxies[type];\n        pTuid.useId($proxy);\n    }\n}\n\nexport class TuidDiv extends Tuid {\n    get Main() {return this.owner}\n\n    async getApiFrom() {\n        return await this.owner.getApiFrom();\n    }\n}\n","import {Entity} from './entity';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        await this.loadSchema();\n        let text = this.pack(data);\n        return await this.tvApi.action(this.name, {data:text});\n    }\n}\n\n","import {observable, IObservableArray} from 'mobx';\nimport {Entity} from './entity';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        await this.loadSchema();\n        let {appId} = this.entities;\n        let text = this.pack(data);\n\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\n        return ret;\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        await this.loadSchema();\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n    }\n    private async unpack(data:any):Promise<any> {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.getSheet(this.name, id);\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return await this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchive(this.name, id)\n        return await this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        await this.loadSchema();\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {observable, IObservableArray} from 'mobx';\nimport {Field, ArrFields} from './entities';\nimport {Entity} from './entity';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        this.returns = returns;\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw 'call resetPage(size:number, params:any) first';\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n    async query(params:any):Promise<any> {\n        await this.loadSchema();\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\nimport { Field } from './entities';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.entities.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let schema = actions[i];\n            let {name} = schema;\n            let action = this.entities.newAction(name, undefined);\n            action.setSchema(schema);\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let schema = queries[i];\n            let {name} = schema;\n            let query = this.entities.newQuery(name, undefined);\n            query.setSchema(schema);\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n    }\n\n    async del(param:any) {\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n    }\n\n    async all() {\n        await this.loadSchema();\n        return await this.queries.all.query({});\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n    }\n\n    async query(param:any) {\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import {TuidMain, Tuid} from './tuid';\nimport {Action} from './action';\nimport {Sheet, SheetState, SheetAction} from './sheet';\nimport {Query} from './query';\nimport {Book} from './book';\nimport {History} from './history';\nimport { UqApi } from 'tonva-tools';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { CUq } from '../controllers';\n\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text': \n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    url?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _ownerField: Field;\n    _tuid: Tuid;\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\n\nexport class Entities {\n    private tuids: {[name:string]: TuidMain} = {};\n    private actions: {[name:string]: Action} = {};\n    private sheets: {[name:string]: Sheet} = {};\n    private queries: {[name:string]: Query} = {};\n    private books: {[name:string]: Book} = {};\n    private maps: {[name:string]: Map} = {};\n    private histories: {[name:string]: History} = {};\n    private pendings: {[name:string]: Pending} = {};\n    private cacheTimer: any;\n    cUq: CUq;\n    uqApi: UqApi;\n    appId: number;\n    uqId: number;\n\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\n        this.cUq = cUq;\n        this.uqApi = uqApi;\n        this.appId = appId;\n    }\n\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: TuidMain[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    async loadAccess() {\n        let accesses = await this.uqApi.loadAccess();\n        if (accesses === undefined) return;\n        this.buildEntities(accesses);\n    }\n\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n\n    private buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        let {access, tuids} = entities;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\n        let tuid = this.tuids[name];\n        if (tuid === undefined) return;\n        if (div === undefined) return tuid;\n        return tuid.divs[div];\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.cacheIds();\n        }\n    }\n\n    private buildTuids(tuids:any) {\n        let proxyColl = {} as any;\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name, typeId, proxies} = schema;\n            let tuid = this.newTuid(i, typeId);\n            tuid.sys = true;\n            //tuid.setSchema(schema);\n            if (proxies !== undefined) proxyColl[i] = proxies;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name} = schema;\n            let tuid = this.getTuid(i);\n            //tuid.sys = true;\n            tuid.setSchema(schema);\n        }\n        for (let i in proxyColl) {\n            let proxies:string[] = proxyColl[i];\n            let tuid = this.tuids[i];\n            tuid.proxies = {};\n            for (let p of proxies) {\n                tuid.proxies[p] = this.tuids[p];\n            }\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n        /*\n        for (let tuid of this.tuidArr) {\n            tuid.setProxies(this);\n        }*/\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    newTuid(name:string, id:number):TuidMain {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            case 'uq': this.uqId = id; break;\n            case 'tuid': \n                let tuid = this.newTuid(name, id);\n                tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n        /*\n        let states = sheet.states;\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    /*\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }*/\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid, arr, url} = f;\n            if (tuid === undefined) continue;\n            f._tuid = this.getTuid(tuid, arr, url);\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    throw `owner field ${owner} is undefined`;\n                }\n            }\n            f._ownerField = ownerField;\n            let {arr, url} = f;\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n}\n","export * from './entities';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\n","import * as React from 'react';\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\n\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\n\nexport abstract class RowContainer {\n    protected form:FormView;\n    protected row: FormRow;\n    protected control: ControlBase;\n    constructor(form:FormView, row: FormRow) {\n        this.form = form;\n        this.row = row;\n        if ((row as JSX.Element).type === undefined) {\n            let cc:CreateControl = (row as LabelFormRow).createControl;\n            if (cc === undefined) cc = form.createControl;\n            if (cc === undefined) cc = createControl;\n            this.control = cc(form, row);\n        }\n    }\n    abstract render(key:string):JSX.Element;\n    \n    isOk():boolean {\n        if (this.control === undefined) return true;\n        return this.control.isOk();\n    }\n\n    contains(fieldName:string):boolean {\n        let field = (this.row as FieldRow).field;\n        if (field !== undefined) return fieldName === field.name;\n        let group = (this.row as GroupRow).group;\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\n        return false;\n    }\n    get hasError():boolean {return this.control.hasError;}\n    get filled():boolean {return this.control.filled;}\n    clear() {\n        if (this.control !== undefined) this.control.clear();\n    }\n    clearErrors() {\n        if (this.control !== undefined) this.control.clearErrors();\n    }\n    readValues(values:any):any {\n        if (this.control !== undefined) this.control.readValues(values);\n    }\n    setError(fieldName:string, error:string) {\n        if (this.control !== undefined) this.control.setError(fieldName, error);\n    }\n    setInitValues(values:any) {\n        if (this.control !== undefined) this.control.setInitValues(values);\n    }\n}\n\nclass ElementRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\n    }\n    get hasError():boolean {return false;}\n    get filled():boolean {return false;}\n}\n\nclass BootStrapRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className='form-group row'>\n            <label className='col-sm-2 col-form-label'>\n                {(this.row as LabelFormRow).label}\n            </label>\n            {this.control.render()}\n        </div>;\n\n        //has-success is-valid\n    }\n}\n\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new BootStrapRowContainer(form, row);\n}\n\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new ElementRowContainer(form, row);\n}\n","import * as React from 'react';\nimport { CApp, AppUI } from './controllers';\nexport * from './entities';\nexport * from './controllers';\nexport * from './centerApi';\nexport * from './tools';\n\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n\n// const appName = 'JKDev/jkOrder';\nexport async function startApp(appName:string, ui: AppUI) {\n    convertUIKeyToLowercase(ui);\n    let cApp = new (ui && ui.CApp || CApp)(appName, ui || {uqs:{}} );\n    await cApp.start();\n}\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {nav, mobileHeaderStyle} from './nav';\nimport { Page } from './page';\n\nexport interface TitleBarProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>void);\n}\nexport interface TitleBarState {\n    hasBack: boolean;\n}\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n    private navChangeHandler: ()=>void;\n    constructor(props) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n    private logout() {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            logout(); \n        }\n        nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || self != top;\n        let {right, center, logout} = this.props;\n        let back, pop, debugLogout;\n        if (logout !== undefined && self === top) {\n            if (typeof logout === 'boolean' && logout === true\n                || typeof logout === 'function')\n            {\n                let {nick, name} = nav.user;\n                debugLogout = <div className=\"d-flex align-items-center\">\n                    <small className=\"text-light\">{nick || name}</small>\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\n                        role=\"button\"\n                        onClick={this.logoutClick}>\n                        <i className=\"fa fa-sign-out\" />\n                    </a>\n                </div>;\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (self != top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView;\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\n        return (\n        <header style={mobileHeaderStyle}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>\n        );\n    }\n}\n","import React from 'react';\nimport { jsonStringify } from '../../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { List, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { TuidMain, Query, Entity } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {name, list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { Query } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from \"react\";\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Query } from \"../../entities\";\nimport { VQueryMain } from \"./vQueryMain\";\nimport { VQuerySelect } from \"./vQuerySelect\";\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\nimport { FA } from 'tonva-react-form';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId: string;\n    @observable private overSize: boolean = false;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;        \n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    /*\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n    */\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        let ret = await this.resUploader.upload();\n        if (ret === null) {\n            this.overSize = true;\n            setTimeout(() => this.overSize = false, 3000);\n            return;\n        }\n        this.resId = ret;\n        this.isChanged = (this.resId != this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        let overSize:any;\n        if (this.overSize === true) {\n            overSize = <div className=\"text-danger\">\n                <FA name=\"times-circle\" /> 图片文件大小超过2M，无法上传\n            </div>;\n        }\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>上传图片：\n                    <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\n                    <button className=\"btn btn-primary ml-5\" onClick={this.upload}>上传</button>\n                </div>\n                {overSize}\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"mr-5\" style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-12c h-12c\" src={this.resId} />\n                    </div>\n                    <div className=\"ml-5\">\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n\n/*\nexport function Loading() {\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\n        加载中...\n    </div>\n    </div>\n}\n*/\n\n\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    className?: string;\n    multiple?: boolean;\n    maxSize?: number;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let {maxSize} = this.props;\n        if (maxSize === undefined || maxSize <= 0) \n            maxSize = 100000000000;\n        else\n            maxSize = maxSize * 1024;\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            if (file.size > maxSize) return null;\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","export * from './rule';\nexport * from './field';\nexport * from './face';\nexport * from './rowContainer';\nexport * from './formView';\nexport * from './TonvaForm';\nexport {ControlBase} from './control';\n","import * as React from 'react';\nimport {FormEvent} from 'react';\nimport {computed} from 'mobx';\nimport {uid} from '../uid';\nimport {Rule} from './rule';\nimport {Field} from './field';\nimport {Face} from './face';\nimport {CreateControl, ButtonsControl} from './control';\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\n\nexport interface FieldView {\n    field: Field;\n    face?: Face;\n}\n\nexport interface LabeledRow {\n    label?: string;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    help?: JSX.Element;\n}\n\nexport interface FieldRow extends LabeledRow, FieldView {\n}\n\nexport interface GroupRow extends LabeledRow {\n    group: FieldView[];\n}\n\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\nexport type FormRow = LabelFormRow|JSX.Element;\n\nexport interface SubmitResult {\n    success: boolean;\n    message?: string\n    result?: any;\n}\n\nexport interface FormProps {\n    formRows: FormRow[];\n    //context?: any;              // form context，比如，可以是EntitiesUI\n    rules?: Rule | Rule[];\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n    otherButton?: string|JSX.Element;\n    onOther?: (values:any) => void;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    readOnly?: boolean;\n}\n\nexport class FormView {\n    uid:string;\n    private rows: RowContainer[] = [];\n    private buttonsRow: RowContainer;\n    props: FormProps;\n    createControl?: CreateControl;\n    constructor(props:FormProps) {\n        this.uid = uid();\n        this.props = props;\n        this.buildRows(props);\n        this.createControl = props.createControl;\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    @computed get hasError():boolean {\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\n        console.log(ret);\n        return this.rows.some(row => row.hasError);\n    }\n    @computed get nothing():boolean {\n        let ret = this.rows.every(row => !row.filled);\n        return ret;\n    }\n\n    readValues():any {\n        let values = {} as any;\n        for (let row of this.rows) {\n            row.readValues(values);\n        }\n        return values;\n    }\n\n    clear() {\n        for (let row of this.rows) {\n            row.clear();\n        }\n    }\n\n    clearErrors() {\n        for (let row of this.rows) {\n            row.clearErrors();\n        }\n    }\n\n    setError(fieldName:string, error:string) {\n        for (let row of this.rows) {\n            row.setError(fieldName, error);\n        }\n    }\n\n    setInitValues(initValues:any) {\n        if (initValues === undefined) return;\n        for (let row of this.rows) {\n            row.setInitValues(initValues);\n        }\n    }\n\n    private buildRows(props:FormProps) {\n        let {formRows, createRow} = props;\n        if (formRows !== undefined) {\n            for (let row of formRows) {\n                this.rows.push(this.buildRow(row, createRow));\n            }\n            if (this.props.readOnly !== true) {\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\n            }\n        }\n        else {\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\n        }\n    }\n\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\n        let createRow:CreateRow;\n        let type = (formRow as JSX.Element).type;\n        if (type !== undefined) {\n            createRow = elementCreateRow;\n        }\n        else {\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\n            if (createRow === undefined) {\n                createRow = formRowCreator;\n                if (createRow === undefined) createRow = bootstrapCreateRow;\n            }\n        }\n        let row = createRow(this, formRow);\n        return row;\n    }\n\n    private createButtons(form:FormView, row: FormRow) {\n        return new ButtonsControl(form);\n    }\n\n    private isOk():boolean {\n        let isOk = true;\n        for (let row of this.rows) {\n            if (!row.isOk()) isOk = false;\n        }\n        return isOk;\n    }\n\n    render():JSX.Element {\n        return <form onSubmit={this.onSubmit}>\n            {this.rows.map((row,index) => row.render(this.uid + index))}\n            {this.buttons()}\n        </form>;\n    }\n\n    buttons():JSX.Element {\n        if (this.buttonsRow === undefined) return;\n        return this.buttonsRow.render(this.uid + this.rows.length);\n    }\n    \n    async onSubmit(event:FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (!this.isOk()) return;\n        let values = this.readValues();\n        await this.props.onSubmit(values);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { CUq, EntityType, UqUI } from './uq';\nimport { centerApi } from '../centerApi';\n\nexport interface AppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI};\n    res?: any;\n}\n\nexport class CApp extends Controller {\n    private appOwner:string;\n    private appName:string;\n    private isProduction:boolean;\n    private cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    id: number;\n    appUnits:any[];\n\n    constructor(tonvaApp:string, ui?:AppUI) {\n        super(resLang(ui && ui.res));\n        let parts = tonvaApp.split('/');\n        if (parts.length !== 2) {\n            throw 'tonvaApp name must be / separated, owner/app';\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n        this.ui = ui || {uqs:{}};\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    readonly caption: string; // = 'View Model 版的 Uq App';\n    cUqCollection: {[uq:string]: CUq} = {};\n\n    async startDebug() {\n        let appName = this.appOwner + '/' + this.appName;\n        let cApp = new CApp(appName, {uqs:{}} );\n        let keepNavBackButton = true;\n        await cApp.start(keepNavBackButton);    \n    }\n\n    protected async loadUqs(): Promise<string[]> {\n        let retErrors:string[] = [];\n        let unit = meInFrame.unit;\n        let app = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = app;\n        this.id = id;\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        for (let appUq of uqs) {\n            let {id:uqId, uqOwner, uqName, url, urlDebug, ws, access, token} = appUq;\n            let uq = uqOwner + '/' + uqName;\n            let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n            let cUq = this.newCUq(uq, uqId, access, ui || {});\n            this.cUqCollection[uq] = cUq;\n            promises.push(cUq.loadSchema());\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    nav.start();\n                    return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\n        let retError = await cUq.loadSchema();\n        if (retError !== undefined) {\n            console.error(retError);\n            debugger;\n            return;\n        }\n        return cUq;\n    }\n\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(apiName:string):CUq {\n        return this.cUqCollection[apiName];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        try {\n            let hash = document.location.hash;\n            if (hash.startsWith('#tvdebug')) {\n                this.isProduction = false;\n                //await this.showMainPage();\n                //return;\n            }\n            else {\n                this.isProduction = hash.startsWith('#tv');\n            }\n            let {unit} = meInFrame;\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\n                let app = await loadAppUqs(this.appOwner, this.appName);\n                let {id} = app;\n                this.id = id;\n                await this.loadAppUnits();\n                switch (this.appUnits.length) {\n                    case 0:\n                        this.showUnsupport();\n                        return false;\n                    case 1:\n                        unit = this.appUnits[0].id;\n                        if (unit === undefined || unit < 0) {\n                            this.showUnsupport();\n                            return false;\n                        }\n                        meInFrame.unit = unit;\n                        break;\n                    default: \n                        //nav.clear();\n                        nav.push(<this.selectUnitPage />)\n                        return false;\n                }\n            }\n\n            let retErrors = await this.loadUqs();\n            if (retErrors !== undefined) {\n                this.openPage(<Page header=\"ERROR\">\n                    <div className=\"m-3\">\n                        <div>Load Uqs 发生错误：</div>\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\n                    </div>\n                </Page>);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            nav.push(<Page header=\"App start error!\">\n                <pre>\n                    {typeof err === 'string'? err : err.message}\n                </pre>\n            </Page>);\n            return false;\n        }\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n    async load() {\n        await this.beforeStart();\n    }\n\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport() {\n        this.clearPrevPages();\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">\n                        <FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col\">\n                        用户不支持APP\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">用户: </div>\n                    <div className=\"col\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">App:</div>\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\n                </div>\n            </div>\n        </Page>)\n    }\n\n    private async showMainPage() {\n        // #tvRwPBwMef-23-sheet-api-108\n        let parts = document.location.hash.split('-');\n        if (parts.length > 2) {\n            let action = parts[2];\n            // sheet_debug 表示centerUrl是debug方式的\n            if (action === 'sheet' || action === 'sheet_debug') {\n                let uqId = Number(parts[3]);\n                let sheetTypeId = Number(parts[4]);\n                let sheetId = Number(parts[5]);\n                let cUq = this.getCUqFromId(uqId);\n                if (cUq === undefined) {\n                    alert('unknown uqId: ' + uqId);\n                    return;\n                }\n                this.clearPrevPages();\n                await cUq.navSheet(sheetTypeId, sheetId);\n                return;\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.id === uqId) return cUq;\n        }\n        return;\n    }\n\n    private async loadAppUnits() {\n        let ret = await centerApi.userAppUnits(this.id);\n        this.appUnits = ret;\n        if (ret.length === 1) {\n            meInFrame.unit = ret[0].id;\n        }\n    }\n\n    renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    onRowClick = async (item: any) => {\n        meInFrame.unit = item.id; // 25;\n        await this.start();\n    }\n\n    protected selectUnitPage = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nclass VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage() {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n","import React from 'react';\nimport { FA } from \"tonva-react-form\";\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n/*\nexport interface EntityRes {\n    caption: string;\n    icon: JSX.Element;\n}\n*/\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from \"tonva-tools\";\nimport { CUq } from \"./uq\";\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\n\n//\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page } from 'tonva-tools';\nimport { List, Muted, LMR } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, user, preState, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VForm, FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { nav, Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {id, no, discription, date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, nav } from 'tonva-tools';\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {id, no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {Page} from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nexport interface State {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + ':' + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import { Sheet } from \"../../entities\";\nimport { SheetUI, CSheet } from \"./cSheet\";\nimport { VEntity } from \"../CVEntity\";\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheet } from \"./vSheet\";\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import React from 'react';\nimport { nav, Page } from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from \"mobx\";\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\nimport { Sheet, StateCount } from \"../../entities\";\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\nimport { VSheetMain } from \"./vMain\";\nimport { VSheetNew } from \"./vNew\";\nimport { VSheetEdit } from \"./vEdit\";\nimport { VSheetAction } from \"./vSheetAction\";\nimport { VSheetSchema } from \"./vSchema\";\nimport { VArchives } from \"./vArchives\";\nimport { VSheetList } from \"./vList\";\nimport { VArchived } from \"./vArchived\";\nimport { VSheetSaved } from \"./vSaved\";\nimport { VSheetProcessing } from \"./vSheetProcessing\";\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to, push} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport { TuidMain, Book, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Book } from \"../../entities\";\nimport { VBookMain } from \"./vBookMain\";\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from \"react\";\nimport { View } from \"tonva-tools\";\nimport { List, Muted } from \"tonva-react-form\";\nimport { Entity } from \"../../entities\";\nimport { CLink } from \"../link\";\nimport { CUq } from \"./cUq\";\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../CApp';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        this.uq = uq;\n        this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        let token = undefined;\n        let uqOwner:string, uqName:string;\n        let p = uq.split('/');\n        switch (p.length) {\n            case 1:\n                uqOwner = '$$$';\n                uqName = p[0];\n                break;\n            case 2:\n                uqOwner = p[0];\n                uqName = p[1];\n                break;\n            default:\n                console.log('uq must be uqOwner/uqName format');\n                return;\n        }\n\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        let uqApi:UqApi;\n        if (uq === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            uqApi = new UnitxApi(meInFrame.unit);\n        }\n        else {\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.entities = new Entities(this, uqApi, appId);\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    uq: string;\n    id: number;\n    res: any;\n    entities:Entities;\n    error: string;\n    private schemaLoaded:boolean = false;\n\n    protected async loadEntites() {\n        await this.entities.loadAccess();\n    }\n\n    async loadSchema():Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.loadEntites();\n            if (this.id === undefined) this.id = this.entities.uqId;\n\n            for (let i in this.ui) {\n                let g = this.ui[i];\n                if (g === undefined) continue;\n                let {caption, collection} = g;\n                if (collection === undefined) continue;\n                for (let j in collection) {\n                    if (this.entities[i](j) === undefined) {\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\n                    }\n                }\n            }\n            this.schemaLoaded = true;\n            return;\n        }\n        catch(err) {\n            console.error(err);\n            return this.error = err;\n            //debugger;\n            //return err.message;\n        }\n    }\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.entities.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\n    action(entityName:string) {return this.entities.action(entityName);}\n    query(entityName:string) {return this.entities.query(entityName);}\n    book(entityName:string) {return this.entities.book(entityName);}\n    map(entityName:string) {return this.entities.map(entityName);}\n    history(entityName:string) {return this.entities.history(entityName);}\n    pending(entityName:string) {return this.entities.pending(entityName);}\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        let tuid = this.entities.tuid(entityName);\n        if (tuid === undefined) return;\n        let {divs} = tuid;\n        if (divs === undefined) return;\n        return divs[divName];\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.entities.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.entities.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.entities.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.entities.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.entities.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.entities.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.entities.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.entities.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.entities.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.entities.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.entities.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.entities.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.entities.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.entities.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.entities.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui, res;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            let tUI = this.ui[typeName];\n            if (tUI !== undefined) {\n                ui = tUI[name];\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:TuidMain):CTuidMain {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:TuidMain):CTuidList {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.entities.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {owner} = tuid;\n        if (owner === undefined) {\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n            return (ui && ui.content) || PureJSONContent;\n        }\n        else {\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\n        }\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { tv } from '../../tools';\nimport { Map } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\nimport { PureJSONContent } from '../form/viewModel';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add, remove;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content, border, valuesView;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = \"border-bottom\";\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)} \n                right={right}\n            >\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from \"../CVEntity\";\nimport { MapUI, CMap } from \"./cMap\";\nimport { Map } from \"../../entities\";\nimport { Page } from \"tonva-tools\";\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\nimport { VMapMain } from \"./vMain\";\nimport { observable } from \"mobx\";\nimport { PureJSONContent } from '../form/viewModel';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuid = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children, box} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid, _ownerField} = keyField;\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\n        let callParam = param;\n        if (_ownerField !== undefined) {\n            callParam = param[_ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {name, type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main);\n        let label = cTuidMain.getLable(tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import * as React from 'react';\nimport { TuidMain, Pending, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Pending } from \"../../entities\";\nimport { VPendingMain } from \"./vPendingMain\";\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","import * as React from 'react';\nimport { VPage, Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../entities';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Action } from \"../../entities\";\nimport { VActionMain } from \"./vActionMain\";\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","import * as React from 'react';\nimport { TuidMain, History, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { History } from \"../../entities\";\nimport { VHistoryMain } from \"./vHistoryMain\";\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n}\n","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import {CenterApi} from '../net';\nimport {User, decodeUserToken} from '../user';\n//import { nav } from '../ui';\n\nexport class UserApi extends CenterApi {\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\n        //(params as any).device = nav.local.device.get();\n        let ret = await this.get('login', params);\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeUserToken(ret);\n            case 'object':\n                let token = ret.token;\n                let user = decodeUserToken(token);\n                let {nick, icon} = ret;\n                if (nick) user.nick = nick;\n                if (icon) user.icon = icon;\n                return user;\n        }\n        // !== undefined) return decodeToken(token);\n    }\n    async register(params: {\n        nick:string, \n        user:string, \n        pwd:string,\n        country:number, \n        mobile:number, \n        email:string,\n        verify:string,\n    }): Promise<any>\n    {\n        return await this.post('register', params);\n    }\n\n    async setVerify(account:string, type:'mobile'|'email') {\n        return await this.post('set-verify', {account:account, type:type});\n    }\n\n    async checkVerify(account:string, verify:string) {\n        return await this.post('check-verify', {account:account, verify:verify});\n    }\n\n    async isExists(account:string) {\n        return await this.get('is-exists', {account:account});\n    }\n\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\n        return await this.post('reset-password', {account:account, password, verify, type});\n    }\n    \n    async userSetProp(prop:string, value:any) {\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\n    }\n}\n\nconst userApi = new UserApi('tv/user/', undefined);\n\nexport default userApi;\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {User} from '../user';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { isDevelopment } from '../net';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\n        await (new vp(this)).open(param);\n    }\n\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\n        return (new view(this)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any):Promise<void>;\n    async start(param?:any):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call(param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param);\n        });\n    }\n\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Coordinator call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    constructor(coordinator: C) {\n        super(coordinator);\n    }\n\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport {FormView, FormProps} from './formView';\n\nexport function tonvaDebug() {\n    let a = 0;\n}\n\nexport interface TonvaFormProps extends FormProps {\n    className?: string;\n    initValues?: any;\n}\n\n@observer \nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\n    formView: FormView;\n    constructor(props:TonvaFormProps) {\n        super(props);\n        this.formView = new FormView(this.props);\n    }\n    componentWillMount() {\n        this.formView.setInitValues(this.props.initValues);\n    }\n    debug() {\n        let s = null;\n    }\n    render() {\n        let {className, children, initValues} = this.props;\n        return <div className={className}>\n            {\n                children === undefined? \n                    this.formView.render() : \n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\n            }\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Action {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: Action[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | string;\n}\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        let {date} = this.props;\n        if (!date) return null;\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\n        let now = new Date();\n        let tick = now.getTime() - d.getTime();\n        let nDate=now.getDate();\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\n        let hm = hour + ((minute<10?':0':':') + minute);\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\n        if (tick < 24*3600*1000) {\n            return _date!==nDate? \n                (tick < 0? '明天 ' : '昨天 ') + hm \n                : hm;\n        }\n        if (tick < 365*24*3600*1000) {\n            return month+'月'+_date+'日 ';\n        }\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Image } from 'tonva-tools';\n\nexport interface MediaProps {\n    icon: string;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp:any;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let cn = classNames(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport className from 'classnames';\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\n\nexport interface Step {\n    formRows: FormRow[];\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\n    ex?: any;                                   // 每一步额外的参数\n}\n\nexport interface MultiStepProps {\n    className?: string;\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    steps: {[name:string]: Step};\n    first: string;         // 第一步的名字\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n}\n\nexport interface StepView {\n    stepName: string;\n    step: Step;\n    props: FormProps;\n    //view: JSX.Element;\n}\nexport interface MultiStepState {\n    //num: number;\n    //step: Step;\n    //formView: FormView;\n    topView: StepView;\n    stepViews: StepView[];\n}\n\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\n    private values: any = {};\n    private stepViews: StepView[] = [];\n    private topView: StepView;\n    constructor(props) {\n        super(props);\n        this.state = {\n            topView: undefined,\n            stepViews: [],\n        }\n        this.onPrev = this.onPrev.bind(this);\n        this.onNext = this.onNext.bind(this);\n    }\n    \n    private setStep(stepName: string) {\n        let step = this.props.steps[stepName];\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\n        let otherButton, onOther;\n        if (this.stepViews.length > 0) {\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\n            onOther = this.onPrev;\n        }\n        let {header, footer} = this.props;\n        let btnContent = step.next === undefined?\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\n            {suffix: 'arrow-right', text: '下一步'}\n        let formProps = {\n            formRows: step.formRows,\n            submitButton: <ButtonConten {...btnContent} />,\n            onSubmit: this.onNext,\n            otherButton: otherButton,\n            onOther: onOther,\n        };\n        let num = this.stepViews.length + 1;\n        this.topView = {\n            stepName: stepName,\n            step: step,\n            props: formProps,\n        };\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    componentWillMount() {\n        this.setStep(this.props.first);\n    }\n    private onPrev(values:any) {\n        _.assign(this.values, values);\n        this.topView = this.stepViews.pop();\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    private onNext(values:any): Promise<SubmitResult|undefined> {\n        _.assign(this.values, values);\n        //let {num, step} = this.state;\n        let {next} = this.topView.step;\n        if (next === undefined) {\n            return this.props.onSubmit(this.values)\n        }\n        let nextStepName:string;\n        if (typeof next === 'string') {\n            nextStepName = next;\n        }\n        else {\n            nextStepName = next(this.values);\n        }\n        this.setStep(nextStepName);\n    }\n    render() {\n        let {className, header, footer} = this.props;\n        let {topView, stepViews} = this.state;\n        let {stepName, step} = topView;\n        let hidden = {visibility: 'hidden'};\n        let num = stepViews.length + 1;\n        return <div className={className}>\n            <div>\n                {header && header(step, num)}\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\n                {footer && footer(step, num)}\n            </div>\n        </div>;\n    }\n}\n\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\n    let {prefix, text, suffix} = props;\n    let pIcon, sIcon;\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\n}\n    \n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if (this.isFirst===true && len>this.firstSize ||\n            this.isFirst===false && len>this.pageSize)\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import {observable, computed} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport abstract class Widget {\n    protected name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable protected errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    container = observer(():JSX.Element => {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any = this.label;\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.render());\n    })\n\n    protected get label():string {\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            else label = uiLabel || this.name;\n        }\n        return label;\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.removeErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleNum(res, min, max) :\n                new RuleInt(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || key>=48 && key<=57\n            || key>=96 && key<=105\n            || key===109 || key===189;\n    }\n    \n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        let key = evt.keyCode;\n        event.returnValue = this.isValidKey(key);\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.removeErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline p-0');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        if (this.context.inNode === true) {\n            return <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n        }\n        else {\n            return <div className={cn}>\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\n            </div>;\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            this.context.checkRules()\n            if (this.context.hasError === true) {\n                return;\n            }\n        }\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, caption:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            caption = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = caption; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    protected get label():string {return null}\n\n    render() {\n        return <this.observerRender />\n    }\n}\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget as Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[name];\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        if (this.rules === undefined) return;\n        this.clearContextErrors();\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.removeErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) this.widgets[i].clearContextError();\n    }\n\n    checkRules() {\n        this.checkFieldRules();\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    removeErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    //get data() {return this.row.data;}\n    removeErrors() {\n        super.removeErrors();\n        this.parentContext.removeErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.removeErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.removeErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiImageItem } from '../../schema';\nimport { Image } from '../../image';\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class ImageWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiImageItem;\n    @observable private imageSrc: string;\n\n    protected init() {\n        super.init();\n        this.imageSrc = this.value;\n    }\n\n    protected onClick = async () => {\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\n        let ret = await edit.start();\n        if (ret !== null) {\n            this.setValue(ret);\n            this.imageSrc = ret;\n        }\n        await edit.end();\n    }\n\n    render() {\n        return <this.observerRender />;\n    }\n\n    private observerRender = observer(() => {\n        let cn = [\n            'bg-white p-1 d-flex justify-content-center',\n        ];\n        let onClick: any;\n        if (!this.readOnly && !this.disabled) {\n            cn.push('cursor-pointer');\n            onClick = this.onClick;\n        }\n        return <div className={classNames(cn)} onClick={onClick}>\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\n        </div>;\n    });\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\nimport { ImageWidget } from './imageWidget';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    image: {\n        dataTypes: ['string'],\n        widget: ImageWidget,\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {isRow, widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    return <widget.container />;\n    /*\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.container());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.container();\n        return widgetElement;\n    }\n    */\n}\n\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {};\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <textarea ref={(input) => this.input=input} \n            className={classNames(this.className, cn)}\n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow, inNode} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'form-radio-inline');\n        return <span className={cn}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n/*\n<div className=\"form-control d-flex border-0\"><input\nref={(input)=>this.input = input}\nclassName={classNames(this.className, 'align-self-center')}\ntype=\"checkbox\"\nstyle={{maxHeight:\"1.2em\"}}\ndefaultValue={this.defaultValue} \nonChange={this.onChange} />\n</div>\n*/","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    //private content: any;\n    //private formData: any;\n    private disposer: IReactionDisposer;\n    //@observable \n    readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, formData, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, res,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n\n        //this.formData = formData;\n        this.disposer = autorun(this.watch);\n        this.data = {};\n        // this.initRender();\n        //this.initData(this.props.formData);\n    }\n\n    private renderContent():any {\n        this.initData(this.props.formData);\n        let {children} = this.props;\n        if (children !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return <>{children}</>;\n        }\n\n        let Templet: TempletType;\n        if (this.uiSchema !== undefined) {\n            Templet = this.uiSchema.Templet;\n        }\n        if (Templet !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\n        }\n\n        this.formContext = new FormContext(this, false);\n        return <>{this.schema.map((v, index) => {\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n        })}</>;\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type !== 'arr') {\n            data[name] = formData[name];\n            return;\n        }\n\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\n        let {arr:arrItems} = arrItem;\n        if (arrItems === undefined) return;\n        let arrDict = arrItem.itemSchemas = {};\n        for (let item of arrItems) {\n            arrDict[item.name] = item;\n        }\n        let val:any[] = formData[name];\n        if (val === undefined) val = [];\n        else if (Array.isArray(val) === false) val = [val];\n        let arr:any[] = [];\n        for (let row of val) {\n            let {$isSelected, $isDeleted} = row;\n            let r = {\n                $source: row,\n                $isSelected: $isSelected,\n                $isDeleted: $isDeleted,\n            };\n            for (let item of arrItems) {\n                this.initDataItem(item, r, row);\n                /*\n                let {name:nm} = item;\n                let v = row[nm];\n                if (v === undefined) v = null;\n                r[nm] = v;\n                */\n            }\n            arr.push(r);\n        }\n        //data[name] = observable(arr);\n        data[name] = arr;\n        return;\n    }\n\n    private watch = () => {\n        let {formData} = this.props;\n        if (formData === undefined) return;\n        //this.initData(formData);\n        this.calcSelectOrDelete();\n    }\n    private calcSelectOrDelete() {\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        if (this.data === undefined) return;\n        let formArrVal = this.data[name];\n        if (formArrVal === undefined) return;\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        if (this.disposer !== undefined) this.disposer();\n    }\n\n    render() {\n        let content = this.renderContent();\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(content)}\n        </ContextContainer.Provider>;\n    }\n\n    async buttonClick(buttonName:string) {\n        this.formContext.checkRules()\n        if (this.formContext.hasError === true) return;\n\n        let {onButtonClick} = this.formContext.form.props;\n        if (onButtonClick === undefined) {\n            alert(`you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this.formContext);\n        if (ret === undefined) return;\n        this.formContext.setError(buttonName, ret);\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)}>\n            {content}\n        </form>;\n    }\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        //return <div className=\"row\">{content}</div>;\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class Field extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {Field} from './field';\nexport {Context, RowContext} from './context';\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as classNames from 'classnames';\nimport '../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from 'tonva-tools';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return; }\n    updateProps(nextProps:any) {}\n    abstract render(item:any, index:number):JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport { uid } from '../uid';\n\nexport class Static extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, render} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, computed, IObservableArray} from 'mobx';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../uid';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    private _items: SelectableItem[];\n    private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private buildItems() {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            return this._items = undefined;\n        }\n        if (items === null) {\n            return this._items = null;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        this._selectedItems = selectedItems;\n        if (selectedItems === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:false, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        if (compare === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:selectedItems.find(si => si === v) !== undefined, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        return this._items = itemsArray.map(v => {\n            return {\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \n                item:v, \n                labelId:uid()\n            };\n        });\n    }\n    @computed get items() {\n        //if (this._items === undefined) \n        this.buildItems();\n        return this._items;\n    }\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render(item:SelectableItem, index:number):JSX.Element {\n        let {className, key, render, onSelect} = this.list.props.item;\n        let {labelId, selected} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(item.item, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from 'tonva-tools';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport \"../css/va-list.css\";\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string;\n    };\n    compare?:(item:any, selectItem)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    constructor(props:ListProps) {\n        super(props);\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        this.listBase.updateProps(nextProps);\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\n        if (before === undefined) before = 'before';\n        if (loading === undefined) loading = 'loading';\n        if (none === undefined) none = 'none';        \n        //this.listBase.selectedItems = selectedItems;\n        let {isPaged, items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as className from 'classnames';\nimport {ListView} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"col-sm-12\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className=\"col-sm-2 col-form-label\">\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop as any;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = label===undefined? 'col-sm-12':'col-sm-10';\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n}\n\nexport class PropContainer extends PropRow {\n    render(key:string): JSX.Element {\n        return <div className=\"bg-white\">\n            <label className=\"col-sm-2 col-form-label\">\n                AAABBBCCC\n            </label>\n            <div className=\"col-sm-10\">\n                <div className=\"form-control-plaintext\">\n                    dsfasfa sdf asdf a\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import {ListViewProps} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {PropRow, PropBorder, PropGap, PropContainer,\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: ()=>void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props:any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps:PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps:PropGridProps, props:Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap:boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\nimport {PropContainer, PropBorder, PropGap} from './row';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n/*\n    private propView: PropView;\n    constructor(props:PropGridProps) {\n        super(props);\n    }\n*/\n/*\n    componentWillMount() {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(this.props.values);\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(nextProps.values);\n        this.forceUpdate();\n    }\n*/\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.newValue)}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            if (i>0) elItems.push(this.sep);\n            elItems.push(this.renderRow(schema[i]));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\n        let {name, type} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string = (uiItem && uiItem.label) || name;\n        let value:any = this.props.data[name];\n        switch (type) {\n            default:\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\n                break;\n            case 'image':\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                break;\n        }\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"w-6c\">{label}</div>\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\n        </div>;\n    }\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick} = this.props;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue != value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    else {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","export * from './edit';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {IObservableValue, IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport '../css/va-row.css';\n\nexport interface ListItem {\n    key?: string|number;\n    date?: Date;\n    icon?: string | JSX.Element;\n    main?: string;\n    vice?: string;\n    middle?: string | JSX.Element;\n    midSize?: number;\n    right?: string | JSX.Element;\n    onClick?: () => void;\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\n}\n\nexport interface ListRowProps extends ListItem {\n    //onClick: () => void;\n}\n\nexport interface ListRowState {\n    pressed: boolean;\n}\n\n@observer\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: false,\n        }\n    }\n    render() {\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\n        let header, isIcon:boolean, noteNum;\n        if (unread !== undefined) {\n            let uv:number;\n            if (typeof unread === 'number') uv = unread;\n            else uv = unread.get();\n                if (uv > 0)\n                noteNum = <b>{uv}</b>;\n            else if (uv < 0)\n                noteNum = <b className='dot' />;\n        }\n        switch (typeof icon) {\n            case 'object':\n                header = <header>{icon}{noteNum}</header>; \n                isIcon= false;\n                break;\n            case 'string': \n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\n                isIcon= true; \n                break;\n        }\n        let mid;\n        if (middle !== undefined) {\n            switch (typeof middle) {\n                case 'string':\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\n                    break;\n                default:\n                    mid = middle;\n                    break;\n            }\n        }\n        let footer;\n        if (right !== undefined) {\n            if (typeof right === 'string')\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\n            else\n                footer = <footer>{right}</footer>;\n        }\n        let viceSpan;\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\n        return (\n        <li className={cn} onClick={onClick}>\n            {header}\n            <div>\n                <div>{main}</div>\n                {viceSpan}\n            </div>\n            {mid}\n            {footer}\n        </li>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {ListItem, ListRow} from './listRow';\n\nexport interface ListViewProps {\n    className?: string;\n    items?: any[];\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\n    ex?: any;\n    header?: string|JSX.Element;\n    beforeLoad?: string|JSX.Element;\n    none?: string|JSX.Element;\n    footer?: string|JSX.Element;\n    itemClick?: (item:any)=>void;\n    converter?: (item:any)=>ListItem;\n}\n\n@observer\nexport class ListView extends React.Component<ListViewProps, null> {\n    render() {\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\n        let cn = classNames(className, 'va-list');\n        let content, elHeader;\n        if (items === undefined)\n            content = beforeLoad === null? null : <li className='empty'>\n                {beforeLoad || '...'}\n            </li>;\n        else if (items.length === 0) {\n            content = (\n            <li className='empty'>\n                {\n                    none || '[none]'\n                }\n            </li>);\n        }\n        else if (renderRow !== undefined) {\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\n        }\n        else {\n            content = items.map((item, index) => {\n                let onClick = item.onClick;\n                if (onClick === undefined && itemClick !== undefined) \n                    onClick = ()=>itemClick(item);\n                let listItem:ListItem;\n                if (converter !== undefined) {\n                    listItem = converter(item);\n                    if (listItem === undefined) return null;\n                }\n                else {\n                    listItem = {\n                        ...item\n                    }\n                }\n                if (listItem.key === undefined) listItem.key = listItem.main;\n                return <ListRow onClick={onClick} {...listItem} />;\n            });\n        }\n        if (header !== undefined) {\n            if (typeof header === 'string') {\n                elHeader = <div className='va-list-header'>{header}</div>;\n            }\n            else {\n                elHeader = header;\n            }\n        }\n\n        return (\n        <div className={cn}>\n            {elHeader}\n            <ul>\n                {content}\n            </ul>\n            {footer}\n        </div>\n        )\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n\n    private _content: JSX.Element;\n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[] = [];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        switch (size) {\n            default:\n            case 'md': this.size = '3.2rem'; break;\n            case 'sm': this.size = '4rem'; break;\n            case 'lg': this.size = '2.5rem'; break;\n        }\n        this.tabs.push(...tabs.map(v => {\n                let tab = new Tab();\n                tab.name = v.name;\n                tab.selected = false;\n                tab.caption = v.caption;\n                tab.contentBuilder = v.content;\n                tab.notify = v.notify;\n                return tab;\n            }\n        ));\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    private tabClick = (tab:Tab) => {\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    showTab(tabName: string) {\n        let tab = this.tabs.find(v => v.name === tabName);\n        if (tab === undefined) return;\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        return <div className=\"tab\">\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\n                {this.tabs.map((v,index) => {\n                    let style:React.CSSProperties={\n                        display: v.selected===true? undefined : 'none'};\n                    return <div key={index} style={style}>{v.content}</div>;\n                })}\n            </div>\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\n                {this.tabs.map((v,index) => {\n                    let {selected, caption, notify} = v;\n                    let notifyCircle:any;\n                    if (notify !== undefined) {\n                        let num = notify.get();\n                        if (num !== undefined) {\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                        }\n                    }\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                        <div className=\"align-self-center\">\n                            {notifyCircle}\n                            {caption(selected)}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\nimport userApi from './userApi';\n\nexport class EditMeInfo extends React.Component {\n    private schema:ItemSchema[] = [\n        {name:'nick', type:'string'} as StringSchema,\n        {name:'icon', type:'image'} as ImageSchema\n    ];\n    private uiSchema:UiSchema = {\n        items: {\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\n            icon: {widget:'image', label:'头像'} as UiImageItem,\n        }\n    }\n    @observable private data:any;\n\n    constructor(props:any) {\n        super(props);\n        let {nick, icon} = nav.user;\n        this.data = {\n            nick: nick,\n            icon: icon,\n        }\n    }\n\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\n        let {name} = itemSchema;\n        await userApi.userSetProp(name, newValue);\n        this.data[name] = newValue;\n        nav.user[name] = newValue;\n        nav.saveLocalUser();\n    }\n\n    render() {\n        return <Page header=\"个人信息\">\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\n                data={this.data}\n                onItemChanged={this.onItemChanged} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {FetchError} from '../fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","import {User, Guest, Unit} from './user';\n\nexport interface ClearableData {\n    clear(): void;\n}\n\nexport class Data<T> implements ClearableData {\n    private name: string;\n    private value?: T;\n    constructor(name: string) {this.name = name; }\n    get(): T {\n        if (this.value !== undefined) return this.value;\n        let v = localStorage.getItem(this.name);\n        return this.value = v === null ? undefined : JSON.parse(v); \n    }\n    set(value: T) {\n        if (!value) { this.clear(); return; }\n        this.value = value;\n        localStorage.setItem(this.name, JSON.stringify(value));\n    }\n    clear() {\n        this.value = undefined;\n        localStorage.removeItem(this.name);\n    }\n}\n\nexport class LocalData {\n    user = new Data<User>('user');\n    guest = new Data<Guest>('guest');\n    unit = new Data<Unit>('unit');\n    homeTabCur = new Data<number>('homeTabCur');\n\n    logoutClear() {\n        [\n            this.user,\n            this.homeTabCur\n        ].map(d => d.clear());\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from 'tonva-tools';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva-tools';\nimport { CSCMApp } from 'CSCMApp';\nimport { observable } from 'mobx';\nimport { meTab } from '../me';\n\nexport const store = {\n    //homeCount: observable.box<number>(-1),\n    //cartCount: observable.box<number>(101),\n};\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CSCMApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { View, nav } from 'tonva-tools';\nimport { LMR, FA, SearchBox } from 'tonva-react-form';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CHome } from './CHome';\nimport { SearchBox } from 'tonva-react-form';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","import * as React from 'react';\nimport { VPage, Page, View } from 'tonva-tools';\nimport { observer } from 'mobx-react';\nimport { CHome } from './CHome';\nimport { observable } from 'mobx';\n\nconst LIGUOSHENG = 5;\n\ninterface CatItem {\n    title: string;\n    sub: string[];\n    img: string;\n}\n\ninterface Cat {\n    caption: string;\n    items?: CatItem[];\n}\n\nconst catItemStyle:React.CSSProperties = {\n    width:'12rem', \n    //height: '6rem', \n    overflow: 'hidden', \n};\nconst subStyle:React.CSSProperties = {\n    fontSize:'0.75rem',\n    overflow: 'hidden', \n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n};\nconst imgStyle:React.CSSProperties = {\n    //float:'left', clear:'both', \n    height:'1.5rem', width:'1.5rem', opacity:0.1, \n    marginRight: '0.5rem',\n};\n\nexport class VHome extends View<CHome> {\n\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private renderSection = (item: any, index: number) => {\n        return <section>\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\n            <p>{item.content}</p>\n        </section>\n    }\n\n    render(param: any): JSX.Element {\n        return <this.content />\n    }\n\n    private page = observer(() => {\n        let { openMetaView } = this.controller;\n        let viewMetaButton = <></>;\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n        }\n\n        return <Page header={false} footer={viewMetaButton}>\n            <this.content />\n        </Page>;\n    })\n\n    private content = observer(() => {\n        let siteHeader = this.controller.renderSiteHeader();\n        return <>\n            {siteHeader}\n            {this.controller.renderCategoryRootList()}\n        </>\n    });\n}","import * as React from 'react';\nimport { TuidMain } from 'tonva-react-uq';\nimport { VSiteHeader } from './VSiteHeader';\nimport { CSCMApp } from '../CSCMApp';\nimport { PageItems, Controller } from 'tonva-tools';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\n\nclass HomeSections extends PageItems<any> {\n\n    private sectionTuid: TuidMain;\n\n    constructor(sectionTuid: TuidMain) {\n        super();\n        this.firstSize = this.pageSize = 13;\n        this.sectionTuid = sectionTuid;\n    }\n\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n        if (pageStart === undefined) pageStart = 0;\n        let ret = await this.sectionTuid.search(\"\", pageStart, pageSize);\n        return ret;\n    }\n\n    protected setPageStart(item: any): any {\n        if (item === undefined) return 0;\n        return item.id;\n    }\n}\n\nexport class CHome extends Controller {\n\n    cApp: CSCMApp;\n    homeSections: HomeSections;\n    sectionTuid: TuidMain;\n\n    constructor(cApp: CSCMApp, res: any) {\n        super(res);\n\n        this.cApp = cApp;\n    }\n\n    async internalStart(param: any) {\n\n        let { cFunctionCategory } = this.cApp;\n        await cFunctionCategory.start();\n        this.openVPage(VHome);\n    }\n\n    renderSiteHeader = () => {\n        return this.renderView(VSiteHeader);\n    }\n\n    renderSearchHeader = (size?:string) => {\n        return this.renderView(VSearchHeader, size);\n    }\n\n    renderCategoryRootList = () => {\n        let { cFunctionCategory } = this.cApp;\n        return cFunctionCategory.renderRootList();\n    }\n\n    renderHome = () => {\n        return this.renderView(VHome);\n    }\n\n    openMetaView = () => {\n        this.cApp.startDebug();\n    }\n\n    tab = () => <this.renderHome />;\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { consts } from '../home/consts';\nimport { FA } from 'tonva-react-form';\n\nconst imgStyle: React.CSSProperties = {\n  height: '1.5rem', width: '1.5rem',\n  marginLeft: '0.1rem',\n  marginRight: '0.3rem'\n}\n\nexport const titleTitle: React.CSSProperties = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport const subStyle: React.CSSProperties = {\n  fontSize: '0.75rem',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport class VRootCategory extends View<CFunctionCategory> {\n  private categoryClick = async (categoryWapper: any, parent: any) => {\n    await this.controller.openMainPage(categoryWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children === undefined ? '' : children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let {name, children} = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"py-2 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }} >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-circle-right\" className=\"text-info\" />\n            &nbsp; {name}\n          </span>\n        </div>\n        {children === undefined ? '' : renderThirdCategory(children)}\n      </div>\n    </div>;\n  }\n\n  render(param: any): JSX.Element {\n    let { categories } = this.controller;\n    return <>{categories.map(v => this.renderRootCategory(v, undefined))}</>;\n  }\n}\n\nexport function renderThirdCategory(items: any) {\n  return <div className=\"py-1 px-1 text-muted small\" style={subStyle}>\n      {items.length === 0 ? <>&nbsp;</> : items.map(v => v.name).join(' / ')}\n  </div>\n}","import * as React from 'react';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { VPage, Page } from 'tonva-tools';\nimport { List, FA } from 'tonva-react-form';\nimport { tv } from 'tonva-react-uq';\nimport { titleTitle, subStyle } from './VRootCategory';\n\nexport class VCategory extends VPage<CFunctionCategory> {\n\n  async open(categoryWaper: any) {\n    this.openPage(this.page, categoryWaper);\n  }\n\n  private renderChild = (childWapper: any) => {\n    return <div className=\"py-2\"><FA name=\"hand-o-right mr-2\"></FA>{childWapper.name}</div>\n  }\n\n  private categoryClick = async (childWapper: any, parent: any) => {\n    await this.controller.openMainPage(childWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"pt-1 pb-1 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\n      >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-right\" className=\"text-info small\" />\n            &nbsp; {name}\n          </span>\n        </div>\n      </div>\n    </div>;\n    // <img src={consts.appIcon} alt=\"structure\" style={imgStyle} />\n  }\n\n  private page = (categoryWaper: any) => {\n\n    let { cHome } = this.controller.cApp;\n    let header = cHome.renderSearchHeader();\n\n    let { categoryWaper: item, parent } = categoryWaper;\n    return <Page header={header} >\n      {this.renderRootCategory(item, parent)}\n    </Page>\n  }\n}","export const funcs = [\r\n  {\r\n    name: \"基础信息\",\r\n    id: 1,\r\n    children: [\r\n      { name:\"商品信息\",\r\n        id: 101,\r\n        pid: 1,\r\n        page: \"productTab\" }, \r\n      { name: \"供应商信息\",\r\n        id: 102,\r\n        pid: 1 },\r\n      { name: \"客户信息\",\r\n        id: 103,\r\n        pid: 1 },\r\n      { name: \"部门信息\",\r\n        id: 104,\r\n        pid: 1 },\r\n      { name: \"职员信息\",\r\n        id: 105,\r\n        pid: 1 },\r\n      { name: \"物流中心（自建、委托）\",\r\n        id: 106,\r\n        pid: 1 },\r\n      { name: \"库区信息（自建）\",\r\n        id: 107,\r\n        pid: 1 },\r\n      { name: \"货位信息（自建）\",\r\n        id: 108,\r\n        pid: 1 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购管理\",\r\n    id: 2,\r\n    children: [\r\n      { name:\"采购订单\",\r\n        id: 201,\r\n        pid: 2 }, \r\n      { name: \"采购收货（自建）\",\r\n        id: 202,\r\n        pid: 2 }, \r\n      { name: \"采购验收（自建）\",\r\n        id: 203,\r\n        pid: 2 }, \r\n      { name: \"采购入库（自建）\",\r\n        id: 204,\r\n        pid: 2 }, \r\n      { name: \"采购记账\",\r\n        id: 205,\r\n        pid: 2 }, \r\n      { name: \"采购退货\",\r\n        id: 206,\r\n        pid: 2 }, \r\n      { name: \"采退出库（自建）\",\r\n        id: 207,\r\n        pid: 2 }, \r\n      { name: \"采退复核（自建）\",\r\n        id: 208,\r\n        pid: 2 }, \r\n      { name: \"采退记账\",\r\n        id: 209,\r\n        pid: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购结算管理\",\r\n    id: 3,\r\n    children: [\r\n      { name: \"采购发票\",\r\n        id: 301,\r\n        pid: 3 }, \r\n      { name: \"采购组票\",\r\n        id: 302,\r\n        pid: 3 }, \r\n      { name: \"采购结算\",\r\n        id: 303,\r\n        pid: 3 }, \r\n      { name: \"采价调整\",\r\n        id: 304,\r\n        pid: 3 }, \r\n      { name: \"采购冲差\",\r\n        id: 305,\r\n        pid: 3 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售管理\",\r\n    id: 4,\r\n    children: [\r\n      { name:\"销售订单\",\r\n        id: 401,\r\n        pid: 4 }, \r\n      { name: \"销售出库（自建）\",\r\n        id: 402,\r\n        pid: 4 }, \r\n      { name: \"出库复核（自建）\",\r\n        id: 403,\r\n        pid: 4 }, \r\n      { name: \"销售记账（自建、委托）\",\r\n        id: 404,\r\n        pid: 4 }, \r\n      { name: \"销售退货\",\r\n        id: 405,\r\n        pid: 4 }, \r\n      { name: \"销售退货验收（自建）\",\r\n        id: 406,\r\n        pid: 4 }, \r\n      { name: \"销售退货入库（自建）\",\r\n        id: 407,\r\n        pid: 4 }, \r\n      { name: \"销售退货记账（自建、委托）\",\r\n        id: 408,\r\n        pid: 4 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售结算管理\",\r\n    id: 5,\r\n    children: [\r\n      { name:\"销售换票\",\r\n        id: 501,\r\n        pid: 5 }, \r\n      { name: \"销售结算\",\r\n        id: 502,\r\n        pid: 5 }, \r\n      { name: \"销价调整\",\r\n        id: 503,\r\n        pid: 5 }, \r\n      { name: \"销售冲差\",\r\n        id: 504,\r\n        pid: 5 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"期初管理\",\r\n    id: 6,\r\n    children: [\r\n      { name:\"商品库存期初\",\r\n        id: 601,\r\n        pid: 6 }, \r\n      { name: \"供应商期初\",\r\n        id: 602,\r\n        pid: 6 }, \r\n      { name: \"客商期初\",\r\n        id: 603,\r\n        pid: 6 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"价格管理\",\r\n    id: 7,\r\n    children: [\r\n      { name:\"商品定价\",\r\n        id: 701,\r\n        pid: 7 }, \r\n      { name: \"客商定价\",\r\n        id: 702,\r\n        pid: 7 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"查询报表\",\r\n    id: 8,\r\n    children: [\r\n      { name: \"库存相关\",\r\n        id: 801,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"库存查询\",\r\n            id: 80101,\r\n            pid: 801 },\r\n          { name: \"进销存查询\",\r\n            id: 80102,\r\n            pid: 801 },\r\n        ]\r\n      }, \r\n      { name: \"销售相关\",\r\n        id: 802,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"客商销售汇总查询\",\r\n            id: 80201,\r\n            pid: 802 },\r\n          { name: \"客商销售明细查询\",\r\n            id: 80202,\r\n            pid: 802 }\r\n        ]\r\n      }, \r\n      { name: \"采购相关\",\r\n        id: 803,\r\n        pid: 8,\r\n        children: []\r\n      }, \r\n      { name: \"应收应付相关\",\r\n        id: 804,\r\n        pid: 8,\r\n        children: [\r\n          { name: \"客商应收账款汇总查询\",\r\n            id: 80401,\r\n            pid: 804 },\r\n          { name: \"客商应收账款明细查询\",\r\n            id: 80402,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款汇总查询\",\r\n            id: 80403,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款明细查询\",\r\n            id: 80404,\r\n            pid: 804 }\r\n        ]\r\n      }, \r\n    ]\r\n  }\r\n]\r\n","import * as React from 'react';\r\nimport { Loading } from 'tonva-tools';\r\nimport Loadable from 'react-loadable';\r\n\r\nexport const findPage = (name) => {\r\n  if (name === \"productTab\") {\r\n    return Loadable({\r\n      loader: ()=>import('./product/tab'),\r\n      loading: Loading\r\n    });\r\n  }\r\n}","import * as React from 'react';\nimport { Query } from 'tonva-react-uq';\nimport { observable } from 'mobx';\nimport { VRootCategory } from './VRootCategory';\nimport { VCategory } from './VCategory';\nimport { CSCMApp } from 'CSCMApp';\nimport { nav, Page, Loading, Controller } from 'tonva-tools';\nimport Loadable from 'react-loadable';\nimport { funcs } from './funcCategories';\nimport { findPage } from 'pages'\n\nexport class CFunctionCategory extends Controller {\n\n  cApp: CSCMApp;\n  // categories: any[];\n  @observable categories: any[] = [];\n\n  constructor(cApp: CSCMApp, res: any) {\n    super(res);\n\n    this.cApp = cApp;\n  }\n\n  async internalStart(param: any) {\n    this.categories = funcs;\n  }\n\n  renderRootList = () => {\n    return this.renderView(VRootCategory);\n  };\n\n  async openMainPage(categoryWaper: any, parent: any) {\n    if (categoryWaper === undefined)\n      return;\n    let { children, page, name } = categoryWaper;\n    if (children === undefined || children.length == 0) {\n      \n      if (page !== undefined) {\n        let LoadableComponent = findPage(page);\n        if (LoadableComponent !== undefined) {\n          nav.push(<Page header={name}><LoadableComponent /></Page>);\n        }\n      }\n    }\n    else {\n      this.openVPage(VCategory, { categoryWaper, parent });\n    }\n  }\n}","import * as React from 'react';\nimport { TuidUI, tv } from 'tonva-react-uq';\n\nexport const productUI: TuidUI = {\n    content: (values: any) => {\n        let product = values;\n        let { brand, description, CAS, purity, molecularFomula, molecularWeight, origin } = product;\n        return <div className=\"row d-flex\">\n            <div className=\"col-12\">\n                <div className=\"row py-2\">\n                    <div className=\"col-12\"><strong>{description}</strong></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <img src=\"favicon.ico\" alt=\"structure\" />\n                    </div>\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {item('CAS', CAS)}\n                            {item('纯度', purity)}\n                            {item('分子式', molecularFomula)}\n                            {item('分子量', molecularWeight)}\n                            {item('产品编号', origin)}\n                            {tv(brand, (values: any) => <>{item(\"品牌\", values.name)}</>)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    },\n    divs: {\n        packx: {\n            content: (values: any) => {\n                let { radiox, radioy, unit } = values;\n                if (radioy === 0) return <>{radiox} {unit}</>;\n                if (radiox !== 1) return <>{radiox} &#2df; {radiox}{unit}</>;\n                return <>{radioy}{unit}</>;\n            }\n        }\n    }\n}\n\nfunction item(caption: string, value: any) {\n    if (value === null || value === undefined) return null;\n    return <>\n        <div className=\"col-4 text-muted pr-0\">{caption}:</div>\n        <div className=\"col-8\">{value}</div>\n    </>;\n}\n","import { AppUI, CApp } from \"tonva-react-uq\";\nimport { VHome } from './main';\nimport { CSCMApp } from '../CSCMApp';\nimport orderUI from './order';\nimport productUI from './product';\nimport customerUI from './customer';\nimport warehouseUI from './warehouse';\n\nconst ui: AppUI = {\n    CApp: CSCMApp,\n    main: VHome,\n    uqs: {\n        'SCM/product': productUI\n    }\n}\n\nexport default ui;\n","import * as React from 'react';\n\nimport { CApp, CUq } from 'tonva-react-uq';\nimport { CHome } from './home/CHome';\nimport { CFunctionCategory } from 'functionCategory/CFunctionCategory';\nimport { consts } from './home/consts';\nimport { WebUser } from 'CurrentUser';\n\nexport class CSCMApp extends CApp {\n\n    currentUser: WebUser;\n\n    currentSalesRegion: any;\n    currentLanguage: any;\n\n    cHome: CHome;\n    cFunctionCategory: CFunctionCategory;\n\n    protected async internalStart() {\n\n        if (this.isLogined) {\n            //this.currentUser.user = this.user;\n        }\n\n        this.cFunctionCategory = new CFunctionCategory(this, undefined);\n        this.cHome = new CHome(this, undefined);\n\n        let promises: PromiseLike<void>[] = [];\n        promises.push(this.cFunctionCategory.start());\n        await Promise.all(promises);\n        this.showMain();\n    }\n\n    showMain(initTabName?: string){\n        this.openVPage(this.VAppMain, initTabName);\n    }\n\n    protected onDispose() {\n    }\n}\n","import { UqUI, Tuid } from \"tonva-react-uq\";\nimport tuid from './tuid';\n\nconst uqUI: UqUI = {\n    tuid: tuid,\n}\n\nexport default uqUI;\n","import { productUI } from 'ui/common';\nimport { productCategoryUI } from './productCategory';\n\nexport default {\n    product: productUI,\n    productx: productUI,\n    productCategory: productCategoryUI,\n}\n","import * as React from 'react';\n\nexport const productCategoryUI = {\n\n    content: (values: any) => {\n        let { children } = values;\n        return <>\n            aaa\n        </>\n    }\n}","import * as React from 'react';\nimport './App.css';\nimport { NavView, nav, Page, Tabs } from 'tonva-tools';\nimport { startApp } from 'tonva-react-uq';\nimport ui from './ui';\n//import { faceTabs } from 'facetabs';\n\nconst tonvaApp = \"bruce/SCMBase\";\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await startApp(tonvaApp, ui);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} notLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}