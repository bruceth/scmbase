{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/index.ts","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","home/consts.ts","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/IconText.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","images/logo.svg","tonva-tools/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","functionCategory/VRootCategory.tsx","functionCategory/VCategory.tsx","functionCategory/funcCategories.tsx","pages/testpage2.tsx","pages/index.tsx","functionCategory/CFunctionCategory.tsx","CSCMApp.tsx","ui/scmbase/tuid/vTuidMain.tsx","ui/scmbase/tuid/index.tsx","ui/scmbase/tuid/myCTuid.ts","ui/scmbase/index.tsx","ui/scmbase/res/index.ts","ui/scmbase/res/zh/CN.tsx","ui/$unitx/query/getMessage/cGetMessge.tsx","ui/$unitx/cTuid/vTuidMain.tsx","ui/index.tsx","ui/$unitx/index.ts","ui/$unitx/cTuid/myCTuid.ts","ui/$unitx/tuid/index.tsx","ui/$unitx/map/index.ts","ui/$unitx/map/teamPerson/index.tsx","ui/$unitx/query/index.ts","ui/$unitx/query/getMessage/index.ts","ui/$unitx/query/teamPosts.tsx","ui/$unitx/res/index.ts","ui/$unitx/res/zh/CN.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_1__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_11__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_10__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_9__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_3__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","startApp","convertUIKeyToLowercase","obj","toLowerCase","Array","isArray","cApp","CApp","_controllers__WEBPACK_IMPORTED_MODULE_2__","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_4__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","clone","_ui__WEBPACK_IMPORTED_MODULE_2__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","tslib_es6","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_3___default","_titleBar__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","vTuidList_VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickControl_PickControl","Content","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","entity_Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","mainFields","mf","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","tuid_TuidMain","Main","TuidDiv","cacheIds","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_8__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_7__","_resUploader__WEBPACK_IMPORTED_MODULE_4__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_6__","mobx__WEBPACK_IMPORTED_MODULE_3__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_3__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_4__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_2___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_5__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_6__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appContent","appPage","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_5__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_4__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidEdit","CTuidList","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","_nav__WEBPACK_IMPORTED_MODULE_1__","consts","uqBasedata","appIcon","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_3__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","idWidget_IdWidget","pickId","clearContextError","required-item","cursor-pointer","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageItemEdit","imageSrc","end","ui_image","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","pull","pulse","rotate","flip","inverse","IconText_IconText","iconClass","textClass","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","userSetProp","Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","FetchErrorView","reApi","errContent","LocalData","Data","homeTabCur","module","exports","meTab","LoadableComponent","lib_default","loader","main_VHome","cHome","faceTabs","VSiteHeader_VSiteHeader","logo_default","alt","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","renderCategoryRootList","CHome_CHome","cFunctionCategory","renderRootList","renderHome","startDebug","titleTitle","textOverflow","whiteSpace","VRootCategory_subStyle","fontSize","VRootCategory_VRootCategory","categoryClick","categoryWapper","openMainPage","renderRootCategory","renderSubCategory","marginRight","renderThirdCategory","categories","VCategory_VCategory","renderChild","childWapper","categoryWaper","funcs","pid","testpage2_TestPage2","cUsqArr","baseInfoNames","sheetNames","pages_NavTuidMainPage","cuq","pages_NavSheetPage","navToPage","showOneVPage","CFunctionCategory_CFunctionCategory","CSCMApp_CSCMApp","tonva_react_uq","initTabName","vTuidMain_MyVTuidMain","Button","customer","manufactor","productPackRowContent","ratio","rText","packType","packName","product","scmbase","CN","team","staff","noStaff","noPost","usq","arrNew","arrEdit","packtype","department","goodslocation","supplier","warehouse","purchase","fromUser","fromUnit","subject","getMessage","newMessage","editSumbit","sectionTeam","teamPerson","cGetMessge_VMain","ret0","cTuid_vTuidMain_MyVTuidMain","src_ui","$$$/$unitx","fieldTuidUI","assigned","section","organization","_super","searchOnPost","querySelect","teamPosts","teamOrganization","person","given","sur","gender","bruce/scmbasedata","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.97226c91.chunk.js","sourcesContent":["export {left0} from './left0';\nexport * from './user';\nexport * from './net';\nexport * from './ui';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\nexport * from './entry';\n\n","export * from './form';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './components';\nexport * from './media';\nexport * from './listView';\nexport * from './searchBox';\nexport * from './multiStep';\nexport * from './uid';\n","import * as React from 'react';\nimport { Controller, VPage, View } from 'tonva-tools';\nimport { Entity, Field, TuidMain } from '../entities';\nimport { CUq } from './uq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid, _ownerField} = field;\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\n            let param:any = undefined;\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import * as React from 'react';\nimport {observable, has} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../fetchError';\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\nimport {LocalData} from '../local';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\n\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n\nconst logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface State {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, State> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        if (key === undefined) return;\n        if (this.stack.find(v => v.key === key) === undefined) return;\n        while (this.stack.length >0) {\n            let len = this.stack.length;\n            let top = this.stack[len-1];\n            if (top.key === key) break;\n            this.pop();\n        }\n    }\n\n    topKey():number {\n        let len = this.stack.length;\n        if (len === 0) return undefined;\n        return this.stack[len-1].key;\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        //this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (self != window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <Loading />\n                </li>;\n                break;\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n                //<span className=\"sr-only\">Loading...</span>\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\n        return (\n        <ul className='va'>\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport interface NavSettings {\n    loginTop?: JSX.Element;\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    private navSettings: NavSettings;\n    @observable user: User/*InNav*/ = undefined;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getPredefinedUnitName() {\n        try {\n            let unitRes = await fetch('unit.json', {});\n            //if (unitRes)\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.clear();\n            return;\n        }\n    }\n\n    private async loadPredefinedUnit() {\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (isDevelopment !== true) return unit.id;\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    setSettings(settings?: NavSettings) {\n        this.navSettings = settings;\n    }\n\n    hashParam: string;\n    private centerHost: string;\n    async start() {\n        try {\n            let hash = document.location.hash;\n            if (hash !== undefined && hash.length > 0) {\n                let pos = getExHashPos();\n                if (pos < 0) pos = undefined;\n                this.hashParam = hash.substring(1, pos);\n            }\n            nav.clear();\n            this.startWait();\n            await host.start();\n            let {url, ws, resHost} = host;\n            this.centerHost = url;\n            this.resUrl = 'http://' + resHost + '/res/';\n            this.wsHost = ws;\n            setCenterUrl(url);\n            \n            let guest:Guest = this.local.guest.get();\n            if (guest === undefined) {\n                guest = await guestApi.guest();\n            }\n            nav.setGuest(guest);\n\n            let exHash = getExHash();\n            let appInFrame = setAppInFrame(exHash);\n            if (exHash !== undefined && window !== window.parent) {\n                // is in frame\n                if (appInFrame !== undefined) {\n                    this.ws = wsBridge;\n                    console.log('this.ws = wsBridge in sub frame');\n                    //nav.user = {id:0} as User;\n                    if (self !== window.parent) {\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\n                    }\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                    //await this.showAppView();\n                    return;\n                }\n            }\n\n            let predefinedUnit = await this.loadPredefinedUnit();\n            appInFrame.predefinedUnit = predefinedUnit;\n\n            let user: User = this.local.user.get();\n            if (user === undefined) {\n                let {notLogined} = this.nav.props;\n                if (notLogined !== undefined) {\n                    await notLogined();\n                }\n                else {\n                    await nav.showLogin(undefined);\n                }\n                return;\n            }\n\n            await nav.logined(user);\n        }\n        catch (err) {\n        }\n        finally {\n            this.endWait();\n        }\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        logoutApis();\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\n        ws.connect();\n\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    loginTop(defaultTop:JSX.Element) {\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\n        let lv = await import('../entry/login');\n        let loginView = <lv.default \n            withBack={withBack} \n            callback={callback} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        appInFrame.unit = undefined;\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    async changePassword() {\n        let cp = await import('../entry/changePassword');\n        nav.push(<cp.ChangePasswordPage />);\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    topKey():number {\n        return this.nav.topKey();\n    }\n    popTo(key:number) {\n        this.nav.popTo(key);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import * as React from 'react';\nimport { CApp, AppUI } from './controllers';\nexport * from './entities';\nexport * from './controllers';\nexport * from './centerApi';\nexport * from './tools';\n\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n\nexport async function startApp(ui: AppUI) {\n    convertUIKeyToLowercase(ui);\n    let cApp = new (ui && ui.CApp || CApp)(ui);\n    await cApp.start();\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify } from '../../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","import { decodeGuestToken } from '../user';\nimport { CenterApi } from './uqApi';\n\nexport class GuestApi extends CenterApi {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './uqApi';\nexport {appInFrame, isBridged, getExHash} from './appBridge';\nexport * from './host';\nexport {httpGet} from './httpChannel';\n","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { BoxId, Tuid } from \"../entities\";\nimport { PureJSONContent } from '../controllers';\n\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    if (typeof bi === 'number') return <>{bi}</>;\n    let {id, _$tuid, _$com} = bi as BoxId;\n    let t:Tuid = _$tuid;\n    if (t === undefined) {\n        if (ui !== undefined) return ui(bi, x);\n        return PureJSONContent(bi, x);\n    }\n    let com = ui || _$com;\n    if (com === undefined) {\n        com = bi._$com = t.getTuidContent();\n    }\n    let val = t.valueFromId(id);\n    if (typeof val === 'number') val = {id: val};\n    if (ui !== undefined) {\n        let ret = ui(val, x);\n        if (ret !== undefined) return ret;\n        return <>{id}</>;\n    }\n    return React.createElement(com, val);\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'undefined':\n            break;\n        case 'object':\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\n            break;\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }       \n    if (nullUI === undefined) return <>null</>;\n    return nullUI();\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","export * from './jsonStringify';\nexport * from './tv';\n","export * from './nav';\nexport * from './titleBar';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';","import _ from 'lodash';\nimport {nav} from '../ui';\nimport {uid} from '../uid';\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\ninterface UqTokenAction extends UqToken {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) uqTokens[i] = undefined;\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let appInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                url: ret.url,\n                urlDebug: ret.urlDebug,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    let user = nav.user = message; // message.user;\n    setCenterToken(user.id, user.token);\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\n    let {unit, predefinedUnit} = appInFrame;\n    let parts = apiName.split('/');\n    let ret = await uqTokenApi.uq({unit: unit||predefinedUnit, uqOwner: parts[0], uqName: parts[1]});\n    if (ret === undefined) {\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\n        throw 'api not found';\n    }\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, url, urlDebug, token} = message;\n    let action = uqTokens[apiName];\n    if (action === undefined) {\n        throw 'error app api return';\n        //return;\n    }\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\n    action.url = realUrl;\n    action.token = token;\n    action.resolve(action);\n}\n\nexport function setAppInFrame(appHash: string):AppInFrame {\n    if (appHash) {\n        let parts = appHash.split('-');\n        let len = parts.length;\n        if (len > 0) {\n            let p = 1;\n            appInFrame.hash = parts[p++];\n            if (len>0) appInFrame.unit = Number(parts[p++]);\n            if (len>1) appInFrame.page = parts[p++];\n            if (len>2) appInFrame.param = parts.slice(p++);\n        }\n    }\n    return appInFrame;\n}\n\nexport function getExHashPos():number {\n    let hash = document.location.hash;\n    if (hash !== undefined && hash.length > 0) {\n        let pos = hash.lastIndexOf('#tv-');\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\n        return pos;\n    }\n    return -1;\n}\n\nexport function getExHash():string {\n    let pos = getExHashPos();\n    if (pos < 0) return undefined;\n    return document.location.hash.substring(pos);\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv-' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        let {unit, predefinedUnit} = appInFrame;\n        uqToken = await uqTokenApi.uq({unit: unit || predefinedUnit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken === undefined) {\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\n            throw err;\n        }\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: appInFrame.hash,\n        }, \"*\");\n    });\n}\n\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import {nav} from '../ui/nav';\nimport {FetchError} from '../fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel} from './httpChannel';\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\nimport {appUq, appInFrame, logoutUqTokens} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\nimport { nav } from '../ui';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n    logoutUqTokens();\n}\n\ninterface UqLocal {\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n            return false;\n        }\n        uq.isNet = true;\n        return true;\n    }\n}\n\nconst localUqs = new CacheUqLocals;\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\n        this.token = uqToken.token;\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n\n    async update():Promise<string> {\n        return await this.get('update');\n    }\n\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    async loadAccess():Promise<any> {\n        return await localUqs.loadAccess(this);\n    }\n\n    async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }\n\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }\n\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\n        try {\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\n            let ret = await this.get(url);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }\n\n    async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }\n\n    async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }\n\n    async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }\n\n    async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }\n\n    async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }\n\n    async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    async user():Promise<any> {\n        return await this.get('user');\n    }\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, url, urlDebug} = ret;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        this.token = token;\n        return new HttpChannel(false, realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    loginedUserId = userId;\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\n}\n\nexport abstract class CenterApi extends ApiBase {\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokens = 'uqTokens';\nexport class UqTokenApi extends CenterApi {\n    private local: UqLocals;\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        try {\n            let {unit:unitParam, uqOwner, uqName} = params;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqTokens);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {unit, user} = this.local;\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: params.unit,\n                    uqs: {}\n                };\n            }\n\n            let un = uqOwner+'/'+uqName;\n            let nowTick = new Date().getTime();\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {tick, value} = uq;\n                if ((nowTick - tick) < 24*3600*1000) {\n                    return _.clone(value);\n                }\n            }\n            let ret = await this.get('app-uq', params);\n            this.local.uqs[un] = {\n                tick: nowTick,\n                value: ret,\n            }\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\n            return _.clone(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqTokens);\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApi {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface App {\n    id: number;\n    uqs: AppUq[];\n}\n\nexport interface AppUq {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    access: string;\n}\n\nexport interface UqService {\n    id: number;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\n\nconst appUqs = 'appUqs';\n\nexport class CenterAppApi extends CenterApi {\n    private cachedUqs: App;\n    async uqs(appOwner:string, appName:string):Promise<App> {\n        let ret:any;\n        let ls = localStorage.getItem(appUqs);\n        if (ls !== null) {\n            let rLs = JSON.parse(ls);\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(appOwner, appName);\n            let obj = {\n                appOwner:appOwner, \n                appName:appName, \n                value: ret,\n            }\n            localStorage.setItem(appUqs, JSON.stringify(obj));\n        }\n        return this.cachedUqs = _.cloneDeep(ret);\n    }\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\n    }\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(appOwner, appName);\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\n        let {id:retId, uqs:retUqs} = ret;\n        if (cachedId !== retId) return false;\n        if (cachedUqs.length !== retUqs.length) return false;\n        let len = cachedUqs.length;\n        for (let i=0; i<len; i++) {\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\n        }\n        return true;\n    }\n    async unitxUq(unit:number):Promise<UqService> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\n        return await this.post('tie/reset-password', param);\n    }\n}\n\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    //let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(appOwner, appName);\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\n        if (v === false) {\n            localStorage.removeItem(appUqs);\n            nav.start();\n        }\n    });\n    return ret;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from 'tonva-tools';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {TitleBar} from './titleBar';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string;\n    icon?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    logout?: boolean | (()=>Promise<void>);\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs[0];\n        if (t0 === undefined) return;\n        await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot');\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num');\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let titleBar;\n        if (header !== false) {\n            titleBar = <TitleBar \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right} \n            />;\n        }\n\n        return <article className='page-container'>\n            {titleBar}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                })\n            }\n            </section>\n            {tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\n        let titleBar;\n        if (header !== false)\n            titleBar = <TitleBar \n                back={back} \n                center={header as any}\n                right={right}\n                logout={this.props.logout}\n            />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {titleBar}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter;\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n}\n\nexport function Image(props: ImageProps) {\n    let {className, style, src} = props;\n    if (!src) {\n        return <div className={classNames(className, 'image-none')} style={style}>\n            <i className=\"fa fa-file-o\" />\n        </div>;\n    }\n    if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} style={style} />;\n}\n","export const isDevelopment = process.env.NODE_ENV === 'development';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start() {\n        if (isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, urlDebug:string):string {\n        if (isDevelopment !== true) return url;\n        if (!urlDebug) return url;\n        for (let i in hosts) {\n            let host = hosts[i];\n            let {value, local} = host;\n            let hostString = `://${i}/`;\n            let pos = urlDebug.indexOf(hostString);\n            if (pos > 0) {\n                if (local === false) return url;\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\n                return urlDebug;\n            }\n        }\n        return url;\n    }\n\n    async localCheck(urlDebug: string):Promise<boolean> {\n        return await localCheck(urlDebug);\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 200;\n\nfunction fetchLocalCheck(url:string):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, fetchOptions as any)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\nimport { TuidMain, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, proxyLinks, isFrom} = this.controller;\n        let newButton:any;\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\n        let content:any;\n        if (proxyLinks === undefined) {\n            let right = <>\n                {newButton}\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\n            </>;\n            content = <LMR className='m-3' right={right}>\n                <SearchBox className=\"w-100\" size=\"md\"\n                    onSearch={this.onSearch} \n                    placeholder={'搜索'+label} />\n            </LMR>;\n        }\n        else {\n            content = <List className=\"my-2\"\n                header={<Muted>{label} 代理下列Tuid</Muted>}\n                items={proxyLinks}\n                item={{render: this.entityRender, onClick:this.entityClick}} />\n        }\n        return () => <Page header={label}>\n            {content}\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { TuidMain, Tuid } from '../../entities';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { nav, Page } from 'tonva-tools';\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../entities';\nimport { CTuid, TuidUI } from './cTuid';\nimport { SearchBox, List } from 'tonva-react-form';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.owner === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { TuidMain } from '../../entities';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import { PageItems } from 'tonva-tools';\nimport { Tuid } from \"../../entities\";\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\nimport { JSONContent, RowContent } from '../form/viewModel';\n\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidMainList extends VTuidMainListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isFrom === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n","import _ from 'lodash';\nimport { TypeVPage, PageItems } from 'tonva-tools';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from \"../uq/cUq\";\nimport { CLink } from \"../link\";\nimport { VTuidInfo } from \"./vTuidInfo\";\nimport { TuidPageItems } from \"./pageItems\";\nimport { VTuidMainList } from './vTuidList';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity.owner || this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport class CTuidMain extends CTuid<TuidMain> {\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n        //let tuid = this.entity;\n        //this.proxies = tuid.proxies;\n        if (this.proxies !== undefined) {\n            this.proxyLinks = [];\n            for (let i in this.proxies) {\n                let link = this.cUq.linkFromName('tuid', i);\n                this.proxyLinks.push(link);\n            }\n        }\n    }\n\n    from():CTuidMain {\n        let ret = this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    cUqFrom():CUq {\n        return this.entity.cUqFrom();\n    }\n    cEditFrom(): CTuidEdit {\n        let cUq = this.entity.cUqFrom();\n        return cUq.cTuidEditFromName(this.entity.name);\n    }\n    cInfoFrom(): CTuidInfo {\n        let cUq = this.entity.cUqFrom();\n        return cUq.cTuidInfoFromName(this.entity.name);\n    }\n    cSelectFrom(): CTuidSelect {\n        let cUq = this.entity.cUqFrom();\n        return cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    proxies: {[name:string]: TuidMain};\n    proxyLinks: CLink[];\n    isFrom: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': v = this.VTuidEdit; break;\n            case 'list': v = this.VTuidList; break;\n            case 'edit': await this.edit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        await this.openVPage(v, value);\n    }\n\n    protected async edit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        let v = this.VTuidEdit;\n        await this.openVPage(v, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidEdit extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.edit(id);\n    }\n}\n\nexport class CTuidList extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<TuidDiv> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ' + this.entity.name);\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\nimport { uid } from 'tonva-react-form';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames'\nimport { ViewModel } from \"./viewModel\";\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed, action } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { ViewModel } from \"../viewModel\";\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || this.field !== undefined && this.field.null === false) {\n            this.rules.push(new RuleRequired);\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            mode === FormMode.edit && this.fieldUI.editable === false;\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum);\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (ret === NaN)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) == v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt);\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../entities';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\nimport { IObservableArray, observable } from 'mobx';\nimport _ from 'lodash';\nimport { List, FA, Muted } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields, Field } from '../../entities';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../../tools';\nimport { Field, Tuid } from '../../../entities';\nimport { VField, RedMark } from \"./vField\";\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput, FormMode } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: Tuid;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        let {_ownerField} = this.field;\n        if (_ownerField !== undefined) {\n            let {name, arr} = _ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || this.input.placeHolder}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let redDot;\n        let {required} = this.fieldUI;\n        if (required === true || this.field.null === false) {\n            redDot = <RedMark />;\n        }\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\nimport { Field, ArrFields } from \"../../entities\";\nimport { VForm, FormOptions } from \"./vForm\";\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\nimport { VSubmit } from \"./vSubmit\";\nimport { VField, buildVField, VComputeField } from \"./vField\";\nimport { VArr } from \"./vArr\";\nimport { VTuidField } from \"./vField/vTuidField\";\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name, fields} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n            vField = VIntField;\n            break;\n        case 'bigint':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { observer } from \"mobx-react\";\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../entities';\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from 'tonva-react-form';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(this, values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields, id, order} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","export * from './vForm';\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from '../fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../ui/nav';\nimport { isDevelopment } from './host';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private isCenter: boolean;\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.isCenter = isCenter;\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\n        navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","export * from './CApp';\nexport * from './startApp';\nexport * from './uq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Rule} from '../rule';\n\nexport abstract class ControlBase {\n    protected formView: FormView;\n    constructor(formView:FormView) {\n        this.formView = formView;\n    }\n    render():JSX.Element {\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n        </div>;\n    }\n    protected abstract renderControl():JSX.Element;\n    @computed get hasError():boolean {return false;}\n    @computed get filled():boolean {return false;}\n    clear() {}\n    clearErrors() {}\n    readValues(values:any):any {}\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    isOk():boolean {this.validate(); return !this.hasError;}\n    protected validate() {}\n}\n\nexport abstract class Control extends ControlBase {\n    protected field: Field;\n    protected face: Face;\n    protected props: any;\n    protected rules: Rule[];\n\n    protected element: HTMLElement;\n    @observable protected isOK?: boolean;\n    @observable protected error: string;\n    @observable protected value: any;\n\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView);\n        this.field = field;\n        this.face = face;\n        this.init();\n        this.setProps();\n    }\n    protected ref(element: HTMLElement) {\n        this.element = element;\n    }\n    protected init() {\n        this.rules = [];\n        let r = this.field.rules;\n        if (r !== undefined) {\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\n            else this.rules.push(r as Rule);\n        }\n    };\n    protected setProps():any {\n        return this.props = {\n            ref: this.ref.bind(this),\n            name: this.field.name,\n        }\n    };\n    @computed get hasError():boolean {return this.error !== undefined;}\n    @computed get filled():boolean {\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\n        return ret;\n    }\n    clearValue() { this.value = undefined; }\n    clear() { this.clearErrors(); this.clearValue(); }\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\n    readValues(values:any):any {\n        values[this.field.name] = this.value;\n    }\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    protected getValueFromElement():any {return this.value;}\n    protected validate() {\n        try {\n            let v = this.getValueFromElement();\n            if (this.rules.length > 0) {\n                let isOk:boolean;\n                for (let rule of this.rules) {\n                    console.log('validate: %s', v);\n                    let err = rule(v);\n                    console.log('validate: %s err: %s', v, err);\n                    if (err === true) {\n                        this.error = undefined;\n                        isOk = true;\n                    }\n                    else if (err !== undefined) {\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \n                        //    this.field.name, JSON.stringify(v), rule, err);\n                        this.error = err;\n                        this.isOK = false;\n                        return;\n                    }\n                }\n                this.isOK = isOk;\n            }\n            this.value = v;\n        }\n        catch (e) {\n            this.error = e.message;\n        }\n    }\n    render():JSX.Element {\n        let n;\n        if (this.face !== undefined) {\n            let {notes} = this.face;\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\n        }\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n            {n}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {ControlBase} from './control';\n\nexport class ButtonsControl extends ControlBase {\n    constructor(props) {\n        super(props);\n        this.otherClick = this.otherClick.bind(this);\n    }\n    private otherClick() {\n        let onOther = this.formView.props.onOther;\n        if (onOther === undefined) return;\n        let values = this.formView.readValues();\n        onOther(values);\n    }\n    renderControl():JSX.Element {\n        console.log('buttons.renderControl');\n        let nothing = this.formView.nothing;\n        let hasError = this.formView.hasError;\n        let props = this.formView.props;\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\n        let {submitButton, otherButton, onOther} = props;\n        let btnOther;\n        if (otherButton !== undefined) {\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\n                {otherButton}\n            </button>\n        }\n        return <div className=\"d-flex justify-content-start\">\n            <button\n                className=\"btn btn-primary\"\n                type=\"submit\" \n                disabled={nothing || hasError}>\n                {submitButton || '提交'}\n            </button>\n            {btnOther}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, Placeholder} from '../face';\nimport {Control} from './control';\n\nconst TxtRequired = '必须填入要求内容';\n\nexport abstract class CharsControl extends Control {\n    protected init() {\n        super.init();\n        if (this.field.required === true) {\n            this.rules.push((v) => {\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\n                return true;\n            });\n        }\n    }\n\n    protected element: HTMLInputElement;\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onBlur: this.onBlur.bind(this),\n            onFocus: this.onFocus.bind(this),\n            onChange: this.onChange.bind(this),\n        });\n        let face = this.face as Placeholder;\n        if (face !== undefined) {\n            _.assign(this.props, {\n                placeholder: face.placeholder,\n            });\n        }\n        return this.props;\n    };\n    protected parseValue(value?:string):any {return value;}\n    private onBlur() {\n        //console.log('field %s onBlure', this.field.name);\n        this.validate();\n    }\n    private onChange() {\n        console.log('onChange');\n        this.validate();\n    }\n    private onFocus() {\n        this.clearErrors();\n        //this.error = undefined;\n        //this.formView.clearErrors();\n    }\n    protected className() {\n        return classNames({\n            \"form-control\": true,\n            \"has-success\": this.isOK === true,\n            \"is-invalid\": this.error !== undefined,\n            \"is-valid\": this.error === undefined && this.isOK === true,\n        });\n    }\n    protected renderInput():JSX.Element {\n        return <input className={this.className()} {...this.props} />;\n    }\n    protected ref(element: HTMLInputElement) {\n        super.ref(element);\n        if (element) {\n            element.value = this.value === undefined? '':this.value;\n        }\n    }\n    protected renderError():JSX.Element {\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\n        if (this.error === undefined) return null;\n        return <div className=\"invalid-feedback\">{this.error}</div>\n    }\n    clearValue() { super.clearValue(); this.element.value = ''; }\n    setError(fieldName:string, error:string) {\n        if (this.field.name === fieldName) this.error = error;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) return;\n        //this.element.value = v;\n        this.value = v;\n    }\n    renderControl():JSX.Element {\n        return <React.Fragment>\n            {this.renderInput()}\n            {this.renderError()}\n        </React.Fragment>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\n\nexport class StringControl extends CharsControl {\n    protected field: StringField;\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'text',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        return value;\n    }\n}\n\nexport class PasswordControl extends StringControl {\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'password',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {IntField, DecField, NumberField} from '../field';\nimport {CharsControl} from './charsControl';\n\nconst ErrInvalidNumber = '无效的数字';\nconst ErrMin = '最小值为';\nconst ErrMax = '最大值为';\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport class NumberControl extends CharsControl {\n    protected field: IntField | DecField | NumberField;\n    protected value: number;\n    protected extraChars: number[];\n    \n    protected init() {\n        super.init();\n        this.extraChars = [];\n        let {min, max} = this.field;\n        if (min !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\n        }\n        else {\n            this.extraChars.push(KeyCode_Neg);\n        }\n\n        if (max !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        let n = Number.parseFloat(value);\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\n        return n;\n    }\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            type: 'number',\n            step: (this.field as DecField).step,\n            onKeyPress: this.onKeyPress.bind(this),\n        });\n    }\n\n    onKeyPress(event:KeyboardEvent) {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.element.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.element.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.element.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.element.value = v;\n    }\n}\n","import * as React from 'react';\nimport {Control, ControlBase} from './control';\nimport {FormView} from '../formView';\n\nexport class UnknownControl extends Control {\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n            don't know how to create control<br/>\n            field: {JSON.stringify(this.field)} must be object <br/>\n            face: {JSON.stringify(this.face)} must be object <br/>\n            </div>\n        </div>;\n    }\n}\n\nexport class EmptyControl extends ControlBase {\n    private element:JSX.Element;\n    constructor(formView:FormView, element:JSX.Element) {\n        super(formView);\n        this.element = element;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            {this.element}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, IdPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickIdControl extends Control {\n    protected face: IdPickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    onPicked = (value: any) => {\n        this.value = value.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private controlContent():string|JSX.Element {\n        let {itemFromId, fromPicked, initCaption} = this.face;\n        if (this.value === undefined) {\n            return initCaption || '请选择Id';\n        }\n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        if (itemFromId !== undefined) {\n            if (fromPicked !== undefined) {\n                let item = itemFromId(this.value);\n                if (item) {\n                    let ret = fromPicked(item);\n                    if (ret !== undefined) return ret.caption;\n                }\n            }\n        }\n        return String(this.value);\n    }\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\n                onClick={this.onClick}>\n                {this.controlContent()}\n            </div>;\n        }\n        return <div className=\"form-control-static \">\n            <input.component id={this.value} \n                ui={tuid}\n                //input={input}\n                //entitiesUI={this.formView.props.context} \n                //params={this.formView.readValues()}\n                //onPicked={this.onPicked}\n                />\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, TuidPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickTuidControl extends Control {\n    protected face: TuidPickFace;\n    // protected value: number;\n    @observable private caption: string|JSX.Element;\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.onIdChanged = this.onIdChanged.bind(this);\n        //this.onClick = this.onClick.bind(this);\n    }\n    /*\n    private async onClick() {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }*/\n    onIdChanged(id: any) {\n        this.value = id.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private buildContent():JSX.Element {\n        //let {tuid, input} = this.face;\n        return <this.face.input.component \n            {...this.face}\n            id={this.value}\n            //ui={this.face.ui}\n            //input={input}\n            //entitiesUI={this.formView.props.context} \n            onFormValues={()=>this.formView.readValues()}\n            onIdChanged={this.onIdChanged} />;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static \">\n            {this.buildContent()}\n        </div>;\n    }\n}\n/*\n<button className=\"form-control btn btn-outline-info\"\ntype=\"button\"\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\nonClick={this.onClick}>\n{this.buildContent()}\n</button>\n*/","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, PickFace} from '../face';\nimport {Control} from './control';\nimport { observer } from 'mobx-react';\n\nexport class PickControl extends Control {\n    protected face: PickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    /*\n    private controlContent():string|JSX.Element {\n        let {content: Content} = this.face;\n        if (this.value === undefined) {\n            return '请选择';\n        }\n        \n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        return <Content id={this.value} />;\n    }*/\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        return <this.view />;\n        /*\n        let {content:Content} = this.face;\n        //if (this.value === undefined) {\n            //return <div>no input on idpick</div>;\n        //}\n        //return <div className=\"form-control-static \">\n        //    <Content />\n        //</div>;\n        */\n    }\n\n    private view = observer(() => {\n        let content;\n        let {content: Content} = this.face;\n        if (this.value === undefined || this.value === null) {\n            content = '请选择';\n        }\n        /*\n        else if (this.caption !== undefined) {\n            content = this.caption;\n        }*/\n        else {\n            content = <Content id={this.value} />;\n        } \n        return <div\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\n            onClick={this.onClick}>\n            {content}\n        </div>\n    });\n}\n","export * from './control';\nexport * from './buttonsControl';\nexport * from './stringControl';\nexport * from './numberControl';\n\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Control, ControlBase} from './control';\nimport {ButtonsControl} from './buttonsControl';\nimport {CheckControl} from './checkControl';\nimport {RadioControl} from './radioControl';\nimport {TextAreaControl} from './textAreaControl';\nimport {SelectControl} from './selectControl';\nimport {UnknownControl, EmptyControl} from './unknownControl';\nimport {StringControl, PasswordControl} from './stringControl';\nimport {NumberControl} from './numberControl';\n\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\nimport { PickIdControl } from './pickIdControl';\nimport { PickTuidControl } from './pickTuidControl';\nimport { PickControl } from './pickControl';\n\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\n\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\n    let label = row.label;\n    if ((<GroupRow>row).group !== undefined)\n        return createGroupControl(form, label, row as GroupRow);\n    if ((<FieldRow>row).field !== undefined)\n        return createFieldControl(form, label, row as FieldRow);\n    return new EmptyControl(form, row.help);\n}\n\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\n    \"string\": StringControl,\n    \"password\": PasswordControl,\n    \"number\": NumberControl,\n    \"checkbox\": CheckControl,\n    \"radiobox\": RadioControl,\n    \"select\": SelectControl,\n    \"pick-id\": PickIdControl,\n    \"pick-tuid\": PickTuidControl,\n    \"textarea\": TextAreaControl,\n    \"pick\": PickControl,\n};\nconst defaultFaces:{[type:string]: Face} = {\n    \"string\": {type:'string'},\n    \"number\": {type:'number'},\n    \"int\": {type:'number'},\n    \"dec\": {type:'number'},\n    \"bool\": {type:'checkbox'},\n}\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\n    let {field, face} = fieldRow;\n    switch (typeof field) {\n        case 'string':\n            field = {\n                name: (field as any) as string,\n                type: 'string',\n            }\n            break;\n        case 'object':\n            break;\n        default:\n            return new UnknownControl(form, field, face);\n    }\n    let fieldType = field.type || 'string';\n    if (face === undefined) {\n        face = defaultFaces[fieldType];\n        if (face === undefined) return new UnknownControl(form, field, face);\n    }\n    else if (face.type === undefined) {\n        let f = defaultFaces[fieldType];\n        face.type = f===undefined? 'string' : f.type;\n    }\n    let control = controls[face.type || fieldType] || UnknownControl;\n    return new control(form, field, face);\n}\n\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\n    return new UnknownControl(form, groupRow as any, undefined);\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field, BoolField} from '../field';\nimport {Face, CheckBoxFace} from '../face';\nimport {Control} from './control';\n\nexport class CheckControl extends Control {    \n    protected element: HTMLInputElement;\n    protected field: BoolField;\n    protected face: CheckBoxFace;\n    private trueValue: any;\n    private falseValue: any;\n\n    protected init() {\n        super.init();\n        let {trueValue, falseValue} = this.field;\n        if (trueValue === undefined) this.trueValue = 1;\n        if (falseValue === undefined) this.falseValue = 0;\n    }\n\n    setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onChange: this.onChange.bind(this),\n        });\n    }\n\n    clearValue() {\n        this.element.checked = this.field.defaultValue === this.trueValue;\n        this.value = this.getValueFromElement();\n    }\n\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) {\n            v = this.field.defaultValue;\n        }\n        if (v !== undefined) {\n            //this.element.checked = v === this.trueValue;\n            //this.value = this.getValueFromElement();\n        }\n    }\n\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\n\n    private onChange() {\n        this.value = this.getValueFromElement();\n    }\n\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <label className=\"form-control\">\n                <label className=\"custom-control custom-checkbox mb-0\">\n                    <input type='checkbox'\n                        name={this.field.name}\n                        ref={this.props.ref}\n                        onChange={this.props.onChange}\n                        className=\"custom-control-input\" />\n                    <span className=\"custom-control-indicator\" />\n                    <span className=\"custom-control-description\">{this.face.label}</span>\n                </label>\n            </label>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, RadioFace} from '../face';\nimport {Control} from './control';\n\nexport class RadioControl extends Control {\n    protected face: RadioFace;\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <div className=\"form-control\">\n            {\n                this.face.list.map((item, index) => {\n                    let t, v;\n                    if (typeof item !== 'object') t = v = item;\n                    else {\n                        t = item.text;\n                        v = item.value;\n                    }\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\n                        <input type='radio'\n                            name={this.field.name} \n                            className=\"custom-control-input\" />\n                        <span className=\"custom-control-indicator\"></span>\n                        <span className=\"custom-control-description\">{t}</span>\n                    </label>;\n                })\n            }\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, SelectFace} from '../face';\nimport {Control} from './control';\n\nexport class SelectControl extends Control {\n    constructor (formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.ref = this.ref.bind(this);\n    }\n    protected face: SelectFace;\n    protected element: HTMLSelectElement;\n    protected getValueFromElement():any {\n        let {selectedIndex, selectedOptions} = this.element;\n        let v:any = selectedOptions[0].value;\n        switch (this.field.type) {\n            case 'number': v = Number(v); break;\n            case 'date': v = new Date(v); break;\n            case 'bool': \n                if (typeof v === 'string') {\n                    v = ((v as string).toLowerCase() === 'true');\n                }\n                break;\n        }\n        return v;\n    }\n    renderControl():JSX.Element {\n        let {list} = this.face;\n        let def = this.face.default;\n        let options: any[] = [];\n        if (def === undefined)\n            options.push(<option key={-1} value={undefined}>请选择</option>);\n        options.push(...list.map((item, index) => {\n            let t, v;\n            if (typeof item !== 'object') t = v = item;\n            else {\n                t = item.text;\n                v = item.value;\n            }\n            return <option key={index} value={v}>{t}</option>;\n        }));\n        return <div className=\"form-control-static\">\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\n                {options}\n            </select>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\nimport {TextAreaFace} from '../face';\n\nexport class TextAreaControl extends CharsControl {\n    protected field: StringField;\n    protected face: TextAreaFace;\n    private el: HTMLTextAreaElement;\n    protected setProps() {\n        let p = super.setProps();\n        let {maxLength} = this.field;\n        let {rows} = this.face;\n        _.assign(p, {\n            maxLength: maxLength,\n            rows: rows,\n        });\n        return p;\n    };\n    protected renderInput():JSX.Element {\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\n    }\n}\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\nimport { TuidMain, Tuid } from './tuid';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    protected entities: Entities;\n    protected schema: any;\n    private jName: string;\n    sys?: boolean;\n    readonly name: string;\n    readonly typeId: number;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        this.entities = entities;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    protected get tvApi() {return this.entities.uqApi;}\n    getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = await this.entities.uqApi.schema(this.name);\n        this.setSchema(schema);\n        this.buildFieldsTuid();\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        if (this.schema !== undefined) return;\n        this.schema = schema;\n        let {name} = schema;\n        if (name !== this.name) this.jName = name;\n        //this.buildFieldsTuid();\n    }\n\n    public buildFieldsTuid() {\n        let {fields, arrs, returns} = this.schema;\n        this.entities.buildFieldTuid(this.fields = fields);\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\n        //this.newMain = this.buildCreater(fields);\n        //this.newArr = this.buildArrCreater(arrs);\n        //this.newRet = this.buildArrCreater(returns);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromField(field:Field):Tuid {\n        let {_tuid, tuid} = field;\n        if (tuid === undefined) return;\n        if (_tuid !== undefined) return _tuid;\n        return field._tuid = this.entities.getTuid(tuid, undefined);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.entities;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid, undefined);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    protected buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields;\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name} = field;\n            let d = params[name];\n            let val:any;\n            switch (typeof d) {\n                default: val = d; break;\n                case 'object':\n                    let tuid = field._tuid;\n                    if (tuid === undefined) val = d.id;\n                    else val = tuid.getIdFromObj(d);\n                    break;\n            }\n            result[name] = val;\n        }\n    }\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n\n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (typeof d) {\n            default: return d;\n            case 'object':\n                let tuid = field._tuid;\n                if (tuid === undefined) return d.id;\n                return tuid.getIdFromObj(d);\n            case 'string':\n                let len = d.length;\n                let r = '', p = 0;\n                for (let i=0;i<len;i++) {\n                    let c = d.charCodeAt(i);\n                    switch(c) {\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                    }\n                }\n                return r + d.substring(p);\n            case 'undefined': return '';\n        }\n    }\n\n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n\n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n\n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    unpackReturns(data:string):any {\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) {\n                    p = data.indexOf('\\n', c);\n                    if (p >= 0) ++p;\n                    else p = len;\n                    break;\n                }\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                ++p;\n                ++i;\n                break;\n            }\n        }\n        return p;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'date':\n            case 'time':\n                let date = new Date(Number(v));\n                return date;\n            case 'id':\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'dec': return Number(v);\n            case 'bigint':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                _tuid.useId(id, true);\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport _ from 'lodash';\nimport { Entity } from './entity';\nimport { Entities, Field, ArrFields } from './entities';\nimport { isNumber } from 'util';\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\n\nexport class BoxId {\n    id: number;\n    obj?: any;\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\n    _$com?: any;\n    _$tuid?: Tuid;\n    getObj: ()=>any;\n}\n\nconst maxCacheSize = 1000;\nexport abstract class Tuid extends Entity {\n    private BoxId: ()=>void;\n    get typeName(): string { return 'tuid';}\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private waitingIds: number[] = [];          // 等待loading的\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n    idName: string;\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\n    unique: string[];\n    schemaFrom: {owner:string; uq:string};\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        super(entities, name, typeId);\n        this.buildIdBoxer();\n    }\n\n    abstract get Main():Tuid;\n\n    private buildIdBoxer() {\n        this.BoxId = function():void {};\n        let prototype = this.BoxId.prototype;\n        Object.defineProperty(prototype, '_$tuid', {\n            value: this.from(),\n            writable: false,\n            enumerable: false,\n        });\n        Object.defineProperty(prototype, 'obj', {\n            enumerable: false,\n            get: function() {\n                if (this.id === undefined || this.id<=0) return undefined;\n                return this._$tuid.valueFromId(this.id);\n            }\n        });\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\n            let t:Tuid = this._$tuid;\n            return t.valueFromFieldName(fieldName, this.obj);\n        };\n        prototype.getObj = function():any {\n            if (this._$tuid !== undefined) {\n                return this._$tuid.getCacheValue(this.id);\n            }\n        };\n        prototype.toJSON = function() {return this.id};\n    }\n    boxId(id:number):BoxId {\n        this.useId(id);\n        let ret:BoxId = new this.BoxId();\n        ret.id = id;\n        return ret;\n    }\n    getTuidContent() {\n        return this.entities.cUq.getTuidContent(this);\n    }\n    getIdFromObj(item:any):number {\n        return item[this.idName];\n    }\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id, unique} = schema;\n        this.idName = id;\n        this.unique = unique;\n        this.schemaFrom = this.schema.from;\n    }\n    public buildFieldsTuid() {\n        super.buildFieldsTuid();\n        let {mainFields} = this.schema;\n        if (mainFields !== undefined) {\n            for (let mf of mainFields) {\n                let f = this.fields.find(v => v.name === mf.name);\n                if (f === undefined) continue;\n                mf._tuid = f._tuid;\n            }\n        }\n    }\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        let tId = typeof id;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getCacheValue(_id);\n    }\n    getCacheValue(id:number) {\n        let v = this.cache.get(id);\n        if (this.owner !== undefined && typeof v === 'object') {\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\n        }\n        return v;\n    }\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\n        if (obj === undefined) return;\n        if (this.fields === undefined) return;\n        let f = this.fields.find(v => v.name === fieldName);\n        if (f === undefined) return;\n        let v = obj[fieldName];\n        let {_tuid} = f;\n        if (_tuid === undefined) return v;\n        return _tuid.valueFromId(v);\n    }\n    resetCache(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.useId(id);\n    }\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;        \n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.entities.cacheTuids(defer===true?70:20);\n        //let idVal = this.createID(id);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n    async proxied(name:string, id:number):Promise<any> {\n        let proxyTuid = this.entities.getTuid(name, undefined);\n        proxyTuid.useId(id);\n        let proxied = await this.tvApi.proxied(this.name, name, id);\n        this.cacheValue(proxied);\n        return proxied;\n    }\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        //let cacheVal = this.createID(id, val);\n        this.cache.set(id, val);\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\n        /*\n        let {tuids, fields} = this.schema;\n        if (tuids !== undefined && fields !== undefined) {\n            for (let f of fields) {\n                let {name, tuid} = f;\n                if (tuid === undefined) continue;\n                let t = this.entities.tuid(tuid);\n                if (t === undefined) continue;\n                t.useId(val[name]);\n            }\n        }*/\n        return true;\n    }\n    protected afterCacheId(tuidValue:any) {\n        if (this.fields === undefined) return;\n        for (let f of this.fields) {\n            let {_tuid} = f;\n            if (_tuid === undefined) continue;\n            _tuid.useId(tuidValue[f.name]);\n        }\n    }\n    from(): TuidMain {return;}\n    private unpackTuidIds(values:any[]|string):any[] {\n        if (this.schemaFrom === undefined) {\n            let {mainFields} = this.schema;\n            if (mainFields === undefined) return values as any[];\n            let ret:any[] = []\n            let len = (values as string).length;\n            let p = 0;\n            while (p<len) {\n                let ch = (values as string).charCodeAt(p);\n                if (ch === 10) {\n                    ++p;\n                    break;\n                }\n                let row = {};\n                p = this.unpackRow(row, mainFields, values as string, p);\n                ret.push(row);\n            }\n            return ret;\n        }\n        else {\n            let tuidMain = this.from();\n            let ret = tuidMain.unpackTuidIds(values);\n            return ret;\n        }\n    }\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let name:string, arr:string;\n        if (this.owner === undefined) {\n            name = this.name;\n        }\n        else {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        let api = this.getApiFrom();\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\n        tuids = this.unpackTuidIds(tuids);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n            this.afterCacheId(tuidValue);\n        }\n        await this.cacheDivIds();\n    }\n    protected async cacheDivIds():Promise<void> {\n    }\n    async load(id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = this.getApiFrom();\n        let values = await api.tuidGet(this.name, id);\n        if (values === undefined) return;\n        values._$tuid = this;\n        this.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n    protected getDiv(divName:string):TuidDiv {return;}\n    private cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.getDiv(name);\n                for (let row of arrValues) {\n                    row._$tuid = tuidDiv;\n                    row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n    private cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n    async save(id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        let ret = await this.tvApi.tuidSave(this.name, params);\n        let {id:retId, inId} = ret;\n        if (retId === undefined) {\n            params.id = id;\n            this.cacheValue(params);\n        }\n        else if (retId > 0) {\n            params.id = retId;\n            this.cacheValue(params);\n        }\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let {fields} = this.schema;\n        let name:string, arr:string;\n        if (this.owner !== undefined) {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        else {\n            name = this.name;\n            arr = undefined;\n        }\n        let api = this.getApiFrom();\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = this.getApiFrom();\n        return await api.tuidArrGet(this.name, arr, owner, id);\n    }\n    /*\n    async loadArrAll(owner:number):Promise<any[]> {\n        return this.all = await this.tvApi.tuidGetAll(this.name);\n    }*/\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\n    }\n\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\n    //private async ids(idArr:number[]) {\n    //    return await this.tvApi.tuidIds(this.name, idArr);\n    //}\n    async showInfo(id:number) {\n        await this.entities.cUq.showTuid(this, id);\n    }\n}\n\nexport class TuidMain extends Tuid {\n    get Main() {return this}\n    get uqApi() {return this.entities.uqApi};\n\n    divs: {[name:string]: TuidDiv};\n    //proxies: {[name:string]: TuidMain};\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\n                tuidDiv.owner = this;\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n            }\n        }\n    }\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\n    /* 努力回避async里面的super调用，edge不兼容\n    async cacheIds():Promise<void> {\n        await super.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n    */\n    protected async cacheDivIds():Promise<void> {\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n\n    cUqFrom(): CUq {\n        if (this.schemaFrom === undefined) return this.entities.cUq;\n        let {owner, uq} = this.schemaFrom;\n        let cUq = this.entities.cUq;\n        let cApp = cUq.cApp;\n        if (cApp === undefined) return cUq;\n        let cUqFrm = cApp.getImportUq(owner, uq);\n        if (cUqFrm === undefined) {\n            console.error(`${owner}/${uq} 不存在`);\n            debugger;\n            return cUq;\n        }\n        /*\n        let retErrors = await cUqFrm.loadSchema();\n        if (retErrors !== undefined) {\n            console.error('cUq.loadSchema: ' + retErrors);\n            debugger;\n            return cUq;\n        }*/\n        return cUqFrm;\n    }\n\n    getApiFrom() {\n        let from = this.from();\n        if (from !== undefined) {\n            return from.entities.uqApi;\n        }\n        return this.entities.uqApi;\n    }\n\n    from(): TuidMain {\n        if (this.schemaFrom === undefined) return this;\n        let cUq = this.cUqFrom();\n        return cUq.tuid(this.name);\n    }\n\n    cFrom(): CTuidMain {\n        let cUq = this.cUqFrom();\n        return cUq.cTuidMainFromName(this.name);\n    }\n\n    cEditFrom(): CTuidEdit {\n        let cUq = this.cUqFrom();\n        return cUq.cTuidEditFromName(this.name);\n    }\n\n    cInfoFrom(): CTuidInfo {\n        let cUq = this.cUqFrom();\n        return cUq.cTuidInfoFromName(this.name);\n    }\n\n    cSelectFrom(): CTuidSelect {\n        let cUq = this.cUqFrom();\n        if (cUq === undefined) return;\n        return cUq.cTuidSelectFromName(this.name);\n    }\n    /*\n    protected afterCacheId(tuidValue:any) {\n        super.afterCacheId(tuidValue);\n        if (this.proxies === undefined) return;\n        let {type, $proxy} = tuidValue;\n        let pTuid = this.proxies[type];\n        pTuid.useId($proxy);\n    }*/\n}\n\nexport class TuidDiv extends Tuid {\n    get Main() {return this.owner}\n\n    getApiFrom() {\n        return this.owner.getApiFrom();\n    }\n}\n","import {Entity} from './entity';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        await this.loadSchema();\n        let text = this.pack(data);\n        return await this.tvApi.action(this.name, {data:text});\n    }\n}\n\n","import {observable, IObservableArray} from 'mobx';\nimport {Entity} from './entity';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        await this.loadSchema();\n        let {appId} = this.entities;\n        let text = this.pack(data);\n\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\n        return ret;\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        await this.loadSchema();\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n    }\n    private async unpack(data:any):Promise<any> {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.getSheet(this.name, id);\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return await this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchive(this.name, id)\n        return await this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        await this.loadSchema();\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {observable, IObservableArray} from 'mobx';\nimport {Field, ArrFields} from './entities';\nimport {Entity} from './entity';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        this.returns = returns;\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw 'call resetPage(size:number, params:any) first';\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n    async query(params:any):Promise<any> {\n        await this.loadSchema();\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\nimport { Field } from './entities';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.entities.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let schema = actions[i];\n            let {name} = schema;\n            let action = this.entities.newAction(name, undefined);\n            action.setSchema(schema);\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let schema = queries[i];\n            let {name} = schema;\n            let query = this.entities.newQuery(name, undefined);\n            query.setSchema(schema);\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n    }\n\n    async del(param:any) {\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n    }\n\n    async all() {\n        await this.loadSchema();\n        return await this.queries.all.query({});\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n    }\n\n    async query(param:any) {\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import {TuidMain, Tuid} from './tuid';\nimport {Action} from './action';\nimport {Sheet, SheetState, SheetAction} from './sheet';\nimport {Query} from './query';\nimport {Book} from './book';\nimport {History} from './history';\nimport { UqApi } from 'tonva-tools';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { CUq } from '../controllers';\n\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text':\n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    url?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _ownerField: Field;\n    _tuid: Tuid;\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\n\nexport class Entities {\n    private tuids: {[name:string]: TuidMain} = {};\n    private actions: {[name:string]: Action} = {};\n    private sheets: {[name:string]: Sheet} = {};\n    private queries: {[name:string]: Query} = {};\n    private books: {[name:string]: Book} = {};\n    private maps: {[name:string]: Map} = {};\n    private histories: {[name:string]: History} = {};\n    private pendings: {[name:string]: Pending} = {};\n    private cacheTimer: any;\n    cUq: CUq;\n    uqApi: UqApi;\n    appId: number;\n    uqId: number;\n\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\n        this.cUq = cUq;\n        this.uqApi = uqApi;\n        this.appId = appId;\n    }\n\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: TuidMain[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    async loadAccess() {\n        let accesses = await this.uqApi.loadAccess();\n        if (accesses === undefined) return;\n        this.buildEntities(accesses);\n    }\n\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n\n    private buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        let {access, tuids} = entities;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\n        let tuid = this.tuids[name];\n        if (tuid === undefined) return;\n        if (div === undefined) return tuid;\n        return tuid.divs[div];\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.cacheIds();\n        }\n    }\n\n    private buildTuids(tuids:any) {\n        //let proxyColl = {} as any;\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name, typeId/*, proxies*/} = schema;\n            let tuid = this.newTuid(i, typeId);\n            tuid.sys = true;\n            //tuid.setSchema(schema);\n            //if (proxies !== undefined) proxyColl[i] = proxies;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name} = schema;\n            let tuid = this.getTuid(i);\n            //tuid.sys = true;\n            tuid.setSchema(schema);\n        }\n        /*\n        for (let i in proxyColl) {\n            let proxies:string[] = proxyColl[i];\n            let tuid = this.tuids[i];\n            tuid.proxies = {};\n            for (let p of proxies) {\n                tuid.proxies[p] = this.tuids[p];\n            }\n        }*/\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.buildFieldsTuid();\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n        /*\n        for (let tuid of this.tuidArr) {\n            tuid.setProxies(this);\n        }*/\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    newTuid(name:string, id:number):TuidMain {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            case 'uq': this.uqId = id; break;\n            case 'tuid':\n                let tuid = this.newTuid(name, id);\n                tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n        /*\n        let states = sheet.states;\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    /*\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }*/\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid, arr, url} = f;\n            if (tuid === undefined) continue;\n            f._tuid = this.getTuid(tuid, arr, url);\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    throw `owner field ${owner} is undefined`;\n                }\n            }\n            f._ownerField = ownerField;\n            let {arr, url} = f;\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n}\n","export * from './entities';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\n","import * as React from 'react';\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\n\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\n\nexport abstract class RowContainer {\n    protected form:FormView;\n    protected row: FormRow;\n    protected control: ControlBase;\n    constructor(form:FormView, row: FormRow) {\n        this.form = form;\n        this.row = row;\n        if ((row as JSX.Element).type === undefined) {\n            let cc:CreateControl = (row as LabelFormRow).createControl;\n            if (cc === undefined) cc = form.createControl;\n            if (cc === undefined) cc = createControl;\n            this.control = cc(form, row);\n        }\n    }\n    abstract render(key:string):JSX.Element;\n    \n    isOk():boolean {\n        if (this.control === undefined) return true;\n        return this.control.isOk();\n    }\n\n    contains(fieldName:string):boolean {\n        let field = (this.row as FieldRow).field;\n        if (field !== undefined) return fieldName === field.name;\n        let group = (this.row as GroupRow).group;\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\n        return false;\n    }\n    get hasError():boolean {return this.control.hasError;}\n    get filled():boolean {return this.control.filled;}\n    clear() {\n        if (this.control !== undefined) this.control.clear();\n    }\n    clearErrors() {\n        if (this.control !== undefined) this.control.clearErrors();\n    }\n    readValues(values:any):any {\n        if (this.control !== undefined) this.control.readValues(values);\n    }\n    setError(fieldName:string, error:string) {\n        if (this.control !== undefined) this.control.setError(fieldName, error);\n    }\n    setInitValues(values:any) {\n        if (this.control !== undefined) this.control.setInitValues(values);\n    }\n}\n\nclass ElementRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\n    }\n    get hasError():boolean {return false;}\n    get filled():boolean {return false;}\n}\n\nclass BootStrapRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className='form-group row'>\n            <label className='col-sm-2 col-form-label'>\n                {(this.row as LabelFormRow).label}\n            </label>\n            {this.control.render()}\n        </div>;\n\n        //has-success is-valid\n    }\n}\n\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new BootStrapRowContainer(form, row);\n}\n\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new ElementRowContainer(form, row);\n}\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {nav, mobileHeaderStyle} from './nav';\n\nexport interface TitleBarProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>Promise<void>);\n}\nexport interface TitleBarState {\n    hasBack: boolean;\n}\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n    constructor(props: TitleBarProps) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.showLogout(this.logout);\n        /*\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\n                </div>\n            </div>\n        </Page>);\n        */\n    }\n    private logout = async () => {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            await logout(); \n        }\n        await nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || self != top;\n        let {right, center, logout} = this.props;\n        let back, pop, debugLogout;\n        if (logout !== undefined && self === top) {\n            if (typeof logout === 'boolean' && logout === true\n                || typeof logout === 'function')\n            {\n                let {user} = nav;\n                if (user !== undefined) {\n                    let {nick, name} = user;\n                    debugLogout = <div className=\"d-flex align-items-center\">\n                        <small className=\"text-light\">{nick || name}</small>\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\n                            role=\"button\"\n                            onClick={this.logoutClick}>\n                            <i className=\"fa fa-sign-out\" />\n                        </a>\n                    </div>;\n                }\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (self != top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView;\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\n        return (\n        <header style={mobileHeaderStyle}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>\n        );\n    }\n}\n","import React from 'react';\nimport { jsonStringify } from '../../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { List, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { TuidMain, Query, Entity } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {name, list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { Query } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from \"react\";\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Query } from \"../../entities\";\nimport { VQueryMain } from \"./vQueryMain\";\nimport { VQuerySelect } from \"./vQuerySelect\";\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId: string;\n    @observable private overSize: boolean = false;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;        \n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        let ret = await this.resUploader.upload();\n        if (ret === null) {\n            this.overSize = true;\n            setTimeout(() => this.overSize = false, 3000);\n            return;\n        }\n        this.resId = ret;\n        this.isChanged = (this.resId != this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        let overSize:any;\n        if (this.overSize === true) {\n            overSize = <div className=\"text-danger\">\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\n            </div>;\n        }\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>\n                    <div>上传图片：</div>\n                    <div className=\"my-3\">\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\n                    </div>\n                    <div>\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\n                    </div>\n                </div>\n                {overSize}\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"w-12c h-12c mr-4\"\n                        style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-100 h-100\" src={this.resId} />\n                    </div>\n                    <div>\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n\n/*\nexport function Loading() {\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\n        加载中...\n    </div>\n    </div>\n}\n*/\n\n\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    className?: string;\n    multiple?: boolean;\n    maxSize?: number;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let {maxSize} = this.props;\n        if (maxSize === undefined || maxSize <= 0) \n            maxSize = 100000000000;\n        else\n            maxSize = maxSize * 1024;\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            if (file.size > maxSize) return null;\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva-tools';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { CUq, UqUI } from './uq';\nimport { centerApi } from '../centerApi';\n\nexport interface RoleAppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\n    res?: any;\n}\n\nexport interface AppUI extends RoleAppUI, NavSettings {\n    appName: string; // 格式: owner/appName\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\n}\n\nexport class CApp extends Controller {\n    private appOwner:string;\n    private appName:string;\n    private cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    id: number;\n    appUnits:any[];\n\n    constructor(ui:AppUI) {\n        super(resLang(ui && ui.res));\n        nav.setSettings(ui);\n        let tonvaApp = ui.appName;\n        if (tonvaApp === undefined) {\n            throw 'appName like \"owner/app\" must be defined in UI';\n        }\n        let parts = tonvaApp.split('/');\n        if (parts.length !== 2) {\n            throw 'tonvaApp name must be / separated, owner/app';\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n        if (ui.uqs === undefined) ui.uqs = {};\n        this.ui = ui;\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    readonly caption: string; // = 'View Model 版的 Uq App';\n    cUqCollection: {[uq:string]: CUq} = {};\n\n    async startDebug() {\n        let appName = this.appOwner + '/' + this.appName;\n        let cApp = new CApp({appName: appName, uqs:{}} );\n        let keepNavBackButton = true;\n        await cApp.start(keepNavBackButton);    \n    }\n\n    protected async loadUqs(app:App): Promise<string[]> {\n        let retErrors:string[] = [];\n        let unit = appInFrame.unit;\n        //let app = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = app;\n        this.id = id;\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        let roleAppUI = await this.buildRoleAppUI();\n        this.ui = roleAppUI;\n        for (let appUq of uqs) {\n            let {id:uqId, uqOwner, uqName, access} = appUq;\n            let uq = uqOwner + '/' + uqName;\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\n            this.cUqCollection[uq] = cUq;\n            promises.push(cUq.loadSchema());\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    //debugger;\n                    //nav.start();\n                    //return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n\n    private async buildRoleAppUI():Promise<AppUI> {\n        if (!this.ui) return undefined;\n        let {hashParam} = nav;\n        if (!hashParam) return this.ui;\n        let {roles} = this.ui;\n        let roleAppUI = roles && roles[hashParam];\n        if (!roleAppUI) return this.ui;\n        let ret:AppUI = {} as any;\n        for (let i in this.ui) {\n            if (i === 'roles') continue;\n            ret[i] = this.ui[i];\n        }\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\n        _.merge(ret, roleAppUI);\n        return ret;\n    }\n\n    getImportUq(uqOwner:string, uqName:string):CUq {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\n        //this.newCUq(uq, uqId, undefined, ui || {});\n        /*\n        let retError = await cUq.loadSchema();\n        if (retError !== undefined) {\n            console.error(retError);\n            debugger;\n            return;\n        }\n        */\n        return cUq;\n    }\n\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(uq:string):CUq {\n        return this.cUqCollection[uq];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        try {\n            let app = await loadAppUqs(this.appOwner, this.appName);\n            // if (isDevelopment === true) {\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\n                let {predefinedUnit} = appInFrame;\n                let {id} = app;\n                this.id = id;\n                let {user} = nav;\n                if (user !== undefined && user.id > 0) {\n                    this.appUnits = await centerApi.userAppUnits(this.id);\n                    switch (this.appUnits.length) {\n                        case 0:\n                            this.showUnsupport(predefinedUnit);\n                            return false;\n                        case 1:\n                            let appUnit = this.appUnits[0].id;\n                            if (appUnit === undefined || appUnit < 0 || \n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\n                            {\n                                this.showUnsupport(predefinedUnit);\n                                return false;\n                            }\n                            appInFrame.unit = appUnit;\n                            break;\n                        default:\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\n                                appInFrame.unit = predefinedUnit;\n                                break;\n                            }\n                            nav.push(<this.selectUnitPage />)\n                            return false;\n                    }\n                }\n            //}\n\n            let retErrors = await this.loadUqs(app);\n            if (retErrors !== undefined) {\n                this.openPage(<Page header=\"ERROR\">\n                    <div className=\"m-3\">\n                        <div>Load Uqs 发生错误：</div>\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\n                    </div>\n                </Page>);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            nav.push(<Page header=\"App start error!\">\n                <pre>\n                    {typeof err === 'string'? err : err.message}\n                </pre>\n            </Page>);\n            return false;\n        }\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport(predefinedUnit: number) {\n        this.clearPrevPages();\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">登录用户: </div>\n                    <div className=\"col\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">App:</div>\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">预设小号:</div>\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">\n                        <FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"text-muted\">无法运行可能原因：</div>\n                        <ul className=\"p-0\">\n                            <li>没有小号运行 {this.ui.appName}</li>\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\n                            {\n                                predefinedUnit && \n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\n                            }\n                        </ul>\n                    </div>\n                </div>\n                {\n                    predefinedUnit || \n                    <div className=\"form-group row\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        预设小号定义在 public/unit.json 文件中。\n                        定义了这个文件的程序，只能由url直接启动。\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\n                        如果要删去缓存的预定义Unit，logout然后再login。\n                    </div>\n                </div>\n                }\n            </div>\n        </Page>)\n    }\n\n    private async showMainPage() {\n        // #tv-RwPBwMef-23-sheet-api-108\n        let exHash = getExHash();\n        if (exHash !== undefined) {\n            let parts = exHash.split('-');\n            if (parts.length > 3) {\n                let action = parts[3];\n                // sheet_debug 表示centerUrl是debug方式的\n                if (action === 'sheet' || action === 'sheet_debug') {\n                    let uqId = Number(parts[4]);\n                    let sheetTypeId = Number(parts[5]);\n                    let sheetId = Number(parts[6]);\n                    let cUq = this.getCUqFromId(uqId);\n                    if (cUq === undefined) {\n                        alert('unknown uqId: ' + uqId);\n                        return;\n                    }\n                    this.clearPrevPages();\n                    await cUq.navSheet(sheetTypeId, sheetId);\n                    return;\n                }\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.id === uqId) return cUq;\n        }\n        return;\n    }\n\n    renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    onRowClick = async (item: any) => {\n        appInFrame.unit = item.id; // 25;\n        await this.start();\n    }\n\n    protected selectUnitPage = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nclass VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage() {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n","export * from './rule';\nexport * from './field';\nexport * from './face';\nexport * from './rowContainer';\nexport * from './formView';\nexport * from './TonvaForm';\nexport {ControlBase} from './control';\n","import * as React from 'react';\nimport {FormEvent} from 'react';\nimport {computed} from 'mobx';\nimport {uid} from '../uid';\nimport {Rule} from './rule';\nimport {Field} from './field';\nimport {Face} from './face';\nimport {CreateControl, ButtonsControl} from './control';\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\n\nexport interface FieldView {\n    field: Field;\n    face?: Face;\n}\n\nexport interface LabeledRow {\n    label?: string;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    help?: JSX.Element;\n}\n\nexport interface FieldRow extends LabeledRow, FieldView {\n}\n\nexport interface GroupRow extends LabeledRow {\n    group: FieldView[];\n}\n\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\nexport type FormRow = LabelFormRow|JSX.Element;\n\nexport interface SubmitResult {\n    success: boolean;\n    message?: string\n    result?: any;\n}\n\nexport interface FormProps {\n    formRows: FormRow[];\n    //context?: any;              // form context，比如，可以是EntitiesUI\n    rules?: Rule | Rule[];\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n    otherButton?: string|JSX.Element;\n    onOther?: (values:any) => void;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    readOnly?: boolean;\n}\n\nexport class FormView {\n    uid:string;\n    private rows: RowContainer[] = [];\n    private buttonsRow: RowContainer;\n    props: FormProps;\n    createControl?: CreateControl;\n    constructor(props:FormProps) {\n        this.uid = uid();\n        this.props = props;\n        this.buildRows(props);\n        this.createControl = props.createControl;\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    @computed get hasError():boolean {\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\n        console.log(ret);\n        return this.rows.some(row => row.hasError);\n    }\n    @computed get nothing():boolean {\n        let ret = this.rows.every(row => !row.filled);\n        return ret;\n    }\n\n    readValues():any {\n        let values = {} as any;\n        for (let row of this.rows) {\n            row.readValues(values);\n        }\n        return values;\n    }\n\n    clear() {\n        for (let row of this.rows) {\n            row.clear();\n        }\n    }\n\n    clearErrors() {\n        for (let row of this.rows) {\n            row.clearErrors();\n        }\n    }\n\n    setError(fieldName:string, error:string) {\n        for (let row of this.rows) {\n            row.setError(fieldName, error);\n        }\n    }\n\n    setInitValues(initValues:any) {\n        if (initValues === undefined) return;\n        for (let row of this.rows) {\n            row.setInitValues(initValues);\n        }\n    }\n\n    private buildRows(props:FormProps) {\n        let {formRows, createRow} = props;\n        if (formRows !== undefined) {\n            for (let row of formRows) {\n                this.rows.push(this.buildRow(row, createRow));\n            }\n            if (this.props.readOnly !== true) {\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\n            }\n        }\n        else {\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\n        }\n    }\n\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\n        let createRow:CreateRow;\n        let type = (formRow as JSX.Element).type;\n        if (type !== undefined) {\n            createRow = elementCreateRow;\n        }\n        else {\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\n            if (createRow === undefined) {\n                createRow = formRowCreator;\n                if (createRow === undefined) createRow = bootstrapCreateRow;\n            }\n        }\n        let row = createRow(this, formRow);\n        return row;\n    }\n\n    private createButtons(form:FormView, row: FormRow) {\n        return new ButtonsControl(form);\n    }\n\n    private isOk():boolean {\n        let isOk = true;\n        for (let row of this.rows) {\n            if (!row.isOk()) isOk = false;\n        }\n        return isOk;\n    }\n\n    render():JSX.Element {\n        return <form onSubmit={this.onSubmit}>\n            {this.rows.map((row,index) => row.render(this.uid + index))}\n            {this.buttons()}\n        </form>;\n    }\n\n    buttons():JSX.Element {\n        if (this.buttonsRow === undefined) return;\n        return this.buttonsRow.render(this.uid + this.rows.length);\n    }\n    \n    async onSubmit(event:FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (!this.isOk()) return;\n        let values = this.readValues();\n        await this.props.onSubmit(values);\n    }\n}\n","import React from 'react';\nimport { FA } from \"tonva-react-form\";\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n/*\nexport interface EntityRes {\n    caption: string;\n    icon: JSX.Element;\n}\n*/\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from \"tonva-tools\";\nimport { CUq } from \"./uq\";\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\n\n//\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page } from 'tonva-tools';\nimport { List, Muted, LMR } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, user, preState, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VForm, FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { nav, Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {id, no, discription, date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, nav } from 'tonva-tools';\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {id, no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {Page} from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nexport interface State {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + ':' + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import { Sheet } from \"../../entities\";\nimport { SheetUI, CSheet } from \"./cSheet\";\nimport { VEntity } from \"../CVEntity\";\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheet } from \"./vSheet\";\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import React from 'react';\nimport { nav, Page } from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from \"mobx\";\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\nimport { Sheet, StateCount } from \"../../entities\";\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\nimport { VSheetMain } from \"./vMain\";\nimport { VSheetNew } from \"./vNew\";\nimport { VSheetEdit } from \"./vEdit\";\nimport { VSheetAction } from \"./vSheetAction\";\nimport { VSheetSchema } from \"./vSchema\";\nimport { VArchives } from \"./vArchives\";\nimport { VSheetList } from \"./vList\";\nimport { VArchived } from \"./vArchived\";\nimport { VSheetSaved } from \"./vSaved\";\nimport { VSheetProcessing } from \"./vSheetProcessing\";\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to, push} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport { TuidMain, Book, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Book } from \"../../entities\";\nimport { VBookMain } from \"./vBookMain\";\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from \"react\";\nimport { View } from \"tonva-tools\";\nimport { List, Muted } from \"tonva-react-form\";\nimport { Entity } from \"../../entities\";\nimport { CLink } from \"../link\";\nimport { CUq } from \"./cUq\";\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../CApp';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        this.uq = uq;\n        this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        let token = undefined;\n        let uqOwner:string, uqName:string;\n        let p = uq.split('/');\n        switch (p.length) {\n            case 1:\n                uqOwner = '$$$';\n                uqName = p[0];\n                break;\n            case 2:\n                uqOwner = p[0];\n                uqName = p[1];\n                break;\n            default:\n                console.log('uq must be uqOwner/uqName format');\n                return;\n        }\n\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        let uqApi:UqApi;\n        if (uq === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            uqApi = new UnitxApi(appInFrame.unit);\n        }\n        else {\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.entities = new Entities(this, uqApi, appId);\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    uq: string;\n    id: number;\n    res: any;\n    entities:Entities;\n    error: string;\n    private schemaLoaded:boolean = false;\n\n    protected async loadEntites() {\n        await this.entities.loadAccess();\n    }\n\n    async loadSchema():Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.loadEntites();\n            if (this.id === undefined) this.id = this.entities.uqId;\n            for (let i in this.ui) {\n                let g = this.ui[i];\n                if (g === undefined) continue;\n                let {caption, collection} = g;\n                if (collection === undefined) continue;\n                for (let j in collection) {\n                    if (this.entities[i](j) === undefined) {\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\n                    }\n                }\n            }\n            this.schemaLoaded = true;\n            return;\n        }\n        catch(err) {\n            console.error(err);\n            return this.error = err;\n        }\n    }\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.entities.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\n    action(entityName:string) {return this.entities.action(entityName);}\n    query(entityName:string) {return this.entities.query(entityName);}\n    book(entityName:string) {return this.entities.book(entityName);}\n    map(entityName:string) {return this.entities.map(entityName);}\n    history(entityName:string) {return this.entities.history(entityName);}\n    pending(entityName:string) {return this.entities.pending(entityName);}\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        let tuid = this.entities.tuid(entityName);\n        if (tuid === undefined) return;\n        let {divs} = tuid;\n        if (divs === undefined) return;\n        return divs[divName];\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.entities.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.entities.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.entities.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.entities.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.entities.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.entities.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.entities.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.entities.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.entities.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.entities.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.entities.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.entities.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.entities.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.entities.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.entities.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui, res;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            let tUI = this.ui[typeName];\n            if (tUI !== undefined) {\n                ui = tUI[name];\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:TuidMain):CTuidMain {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:TuidMain):CTuidList {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.entities.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {owner} = tuid;\n        if (owner === undefined) {\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n            return (ui && ui.content) || PureJSONContent;\n        }\n        else {\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\n        }\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { tv } from '../../tools';\nimport { Map } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\nimport { PureJSONContent } from '../form/viewModel';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add:any, remove:any;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right:any;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content:any, border:any, valuesView:any;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = \"border-bottom\";\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)}\n                left={left}\n                right={right}\n            >\n                <div className=\"py-1\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from \"../CVEntity\";\nimport { MapUI, CMap } from \"./cMap\";\nimport { Map } from \"../../entities\";\nimport { Page } from \"tonva-tools\";\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\nimport { VMapMain } from \"./vMain\";\nimport { observable } from \"mobx\";\nimport { PureJSONContent } from '../form/viewModel';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuid = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children, box} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid, _ownerField} = keyField;\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\n        let callParam = param;\n        if (_ownerField !== undefined) {\n            callParam = param[_ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {name, type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\n        let label = cTuidMain.getLable(tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import * as React from 'react';\nimport { TuidMain, History, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { History } from \"../../entities\";\nimport { VHistoryMain } from \"./vHistoryMain\";\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","import * as React from 'react';\nimport { VPage, Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../entities';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Action } from \"../../entities\";\nimport { VActionMain } from \"./vActionMain\";\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","import * as React from 'react';\nimport { TuidMain, Pending, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Pending } from \"../../entities\";\nimport { VPendingMain } from \"./vPendingMain\";\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n}\n","export const consts = {\r\n    uqBasedata: \"bruce/scmbasedata\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import {CenterApi} from '../net';\nimport {User, decodeUserToken} from '../user';\n//import { nav } from '../ui';\n\nexport class UserApi extends CenterApi {\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\n        //(params as any).device = nav.local.device.get();\n        let ret = await this.get('login', params);\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeUserToken(ret);\n            case 'object':\n                let token = ret.token;\n                let user = decodeUserToken(token);\n                let {nick, icon} = ret;\n                if (nick) user.nick = nick;\n                if (icon) user.icon = icon;\n                return user;\n        }\n        // !== undefined) return decodeToken(token);\n    }\n    async register(params: {\n        nick:string, \n        user:string, \n        pwd:string,\n        country:number, \n        mobile:number, \n        email:string,\n        verify:string,\n    }): Promise<any>\n    {\n        return await this.post('register', params);\n    }\n\n    async setVerify(account:string, type:'mobile'|'email') {\n        return await this.post('set-verify', {account:account, type:type});\n    }\n\n    async checkVerify(account:string, verify:string) {\n        return await this.post('check-verify', {account:account, verify:verify});\n    }\n\n    async isExists(account:string) {\n        return await this.get('is-exists', {account:account});\n    }\n\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\n        return await this.post('reset-password', {account:account, password, verify, type});\n    }\n    \n    async userSetProp(prop:string, value:any) {\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\n    }\n}\n\nconst userApi = new UserApi('tv/user/', undefined);\n\nexport default userApi;\n","\nconst zero = '00000000000000';\nexport function left0(num:number, fix:number) {\n    if (num === undefined) return '';\n    let r = num.toString();\n    let len = fix - r.length;\n    if (len <= 0) return r;\n    return zero.substr(0, len) + r;\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {User} from '../user';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { isDevelopment } from '../net';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp((this as any) as C)).open(param);\n    }\n\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\n        return (new view((this as any) as C)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any):Promise<void>;\n    async start(param?:any):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call(param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param);\n        });\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this as any)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Controller call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if (this.isFirst===true && len>this.firstSize ||\n            this.isFirst===false && len>this.pageSize)\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import {observable, computed} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport {FormView, FormProps} from './formView';\n\nexport function tonvaDebug() {\n    let a = 0;\n}\n\nexport interface TonvaFormProps extends FormProps {\n    className?: string;\n    initValues?: any;\n}\n\n@observer \nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\n    formView: FormView;\n    constructor(props:TonvaFormProps) {\n        super(props);\n        this.formView = new FormView(this.props);\n    }\n    componentWillMount() {\n        this.formView.setInitValues(this.props.initValues);\n    }\n    debug() {\n        let s = null;\n    }\n    render() {\n        let {className, children, initValues} = this.props;\n        return <div className={className}>\n            {\n                children === undefined? \n                    this.formView.render() : \n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\n            }\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Action {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: Action[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | string;\n}\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        let {date} = this.props;\n        if (!date) return null;\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\n        let now = new Date();\n        let tick = now.getTime() - d.getTime();\n        let nDate=now.getDate();\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\n        let hm = hour + ((minute<10?':0':':') + minute);\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\n        if (tick < 24*3600*1000) {\n            return _date!==nDate? \n                (tick < 0? '明天 ' : '昨天 ') + hm \n                : hm;\n        }\n        if (tick < 365*24*3600*1000) {\n            return month+'月'+_date+'日 ';\n        }\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Image } from 'tonva-tools';\n\nexport interface MediaProps {\n    icon: string;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp:any;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let cn = classNames(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport className from 'classnames';\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\n\nexport interface Step {\n    formRows: FormRow[];\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\n    ex?: any;                                   // 每一步额外的参数\n}\n\nexport interface MultiStepProps {\n    className?: string;\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    steps: {[name:string]: Step};\n    first: string;         // 第一步的名字\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n}\n\nexport interface StepView {\n    stepName: string;\n    step: Step;\n    props: FormProps;\n    //view: JSX.Element;\n}\nexport interface MultiStepState {\n    //num: number;\n    //step: Step;\n    //formView: FormView;\n    topView: StepView;\n    stepViews: StepView[];\n}\n\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\n    private values: any = {};\n    private stepViews: StepView[] = [];\n    private topView: StepView;\n    constructor(props) {\n        super(props);\n        this.state = {\n            topView: undefined,\n            stepViews: [],\n        }\n        this.onPrev = this.onPrev.bind(this);\n        this.onNext = this.onNext.bind(this);\n    }\n    \n    private setStep(stepName: string) {\n        let step = this.props.steps[stepName];\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\n        let otherButton, onOther;\n        if (this.stepViews.length > 0) {\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\n            onOther = this.onPrev;\n        }\n        let {header, footer} = this.props;\n        let btnContent = step.next === undefined?\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\n            {suffix: 'arrow-right', text: '下一步'}\n        let formProps = {\n            formRows: step.formRows,\n            submitButton: <ButtonConten {...btnContent} />,\n            onSubmit: this.onNext,\n            otherButton: otherButton,\n            onOther: onOther,\n        };\n        let num = this.stepViews.length + 1;\n        this.topView = {\n            stepName: stepName,\n            step: step,\n            props: formProps,\n        };\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    componentWillMount() {\n        this.setStep(this.props.first);\n    }\n    private onPrev(values:any) {\n        _.assign(this.values, values);\n        this.topView = this.stepViews.pop();\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    private onNext(values:any): Promise<SubmitResult|undefined> {\n        _.assign(this.values, values);\n        //let {num, step} = this.state;\n        let {next} = this.topView.step;\n        if (next === undefined) {\n            return this.props.onSubmit(this.values)\n        }\n        let nextStepName:string;\n        if (typeof next === 'string') {\n            nextStepName = next;\n        }\n        else {\n            nextStepName = next(this.values);\n        }\n        this.setStep(nextStepName);\n    }\n    render() {\n        let {className, header, footer} = this.props;\n        let {topView, stepViews} = this.state;\n        let {stepName, step} = topView;\n        let hidden = {visibility: 'hidden'};\n        let num = stepViews.length + 1;\n        return <div className={className}>\n            <div>\n                {header && header(step, num)}\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\n                {footer && footer(step, num)}\n            </div>\n        </div>;\n    }\n}\n\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\n    let {prefix, text, suffix} = props;\n    let pIcon, sIcon;\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\n}\n    \n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport abstract class Widget {\n    protected name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable protected errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    container = observer(():JSX.Element => {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any = this.label;\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.render());\n    })\n\n    protected get label():string {\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            else label = uiLabel || this.name;\n        }\n        return label;\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem, StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        this.internalOnKeyDown(evt);\n        if (evt.keyCode !== 13) return;\n        let {onEnter} = this.context.form.props;\n        if (onEnter === undefined) return;\n\n        this.changeValue(evt.currentTarget.value, true);\n        this.checkRules();\n        this.context.checkContextRules();\n\n        let ret = await onEnter(this.name, this.context);\n        if (ret !== undefined) {\n            this.context.setError(this.name, ret);\n        }\n    }\n\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n    }\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.removeErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleNum(res, min, max) :\n                new RuleInt(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || key>=48 && key<=57\n            || key>=96 && key<=105\n            || key===109 || key===189;\n    }\n    \n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n        let key = evt.keyCode;\n        event.returnValue = this.isValidKey(key);\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.removeErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline p-0');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        if (this.context.inNode === true) {\n            return <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n        }\n        else {\n            return <div className={cn}>\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\n            </div>;\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            this.context.checkRules()\n            if (this.context.hasError === true) {\n                return;\n            }\n        }\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, caption:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            caption = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = caption; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    protected get label():string {return null}\n\n    render() {\n        return <this.observerRender />\n    }\n}\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget as Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[name];\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        if (this.rules === undefined) return;\n        this.clearContextErrors();\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.removeErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) this.widgets[i].clearContextError();\n    }\n\n    checkRules() {\n        this.checkFieldRules();\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    removeErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    //get data() {return this.row.data;}\n    removeErrors() {\n        super.removeErrors();\n        this.parentContext.removeErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.removeErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.removeErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiImageItem } from '../../schema';\nimport { Image } from '../../image';\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class ImageWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiImageItem;\n    @observable private imageSrc: string;\n\n    protected init() {\n        super.init();\n        this.imageSrc = this.value;\n    }\n\n    protected onClick = async () => {\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\n        let ret = await edit.start();\n        if (ret !== null) {\n            this.setValue(ret);\n            this.imageSrc = ret;\n        }\n        await edit.end();\n    }\n\n    render() {\n        return <this.observerRender />;\n    }\n\n    private observerRender = observer(() => {\n        let cn = [\n            'bg-white p-1 d-flex justify-content-center',\n        ];\n        let onClick: any;\n        if (!this.readOnly && !this.disabled) {\n            cn.push('cursor-pointer');\n            onClick = this.onClick;\n        }\n        return <div className={classNames(cn)} onClick={onClick}>\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\n        </div>;\n    });\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\nimport { ImageWidget } from './imageWidget';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    image: {\n        dataTypes: ['string'],\n        widget: ImageWidget,\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {isRow, widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    return <widget.container />;\n    /*\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.container());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.container();\n        return widgetElement;\n    }\n    */\n}\n\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {};\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <textarea ref={(input) => this.input=input} \n            className={classNames(this.className, cn)}\n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow, inNode} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'form-radio-inline');\n        return <span className={cn}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n/*\n<div className=\"form-control d-flex border-0\"><input\nref={(input)=>this.input = input}\nclassName={classNames(this.className, 'align-self-center')}\ntype=\"checkbox\"\nstyle={{maxHeight:\"1.2em\"}}\ndefaultValue={this.defaultValue} \nonChange={this.onChange} />\n</div>\n*/","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    onEnter?: InputEnter;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    //private content: any;\n    //private formData: any;\n    private disposer: IReactionDisposer;\n    //@observable \n    readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, formData, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, res,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n\n        //this.formData = formData;\n        this.disposer = autorun(this.watch);\n        this.data = {};\n        // this.initRender();\n    }\n\n    private renderContent():any {\n        this.initData(this.props.formData);\n        let {children} = this.props;\n        if (children !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return <>{children}</>;\n        }\n\n        let Templet: TempletType;\n        if (this.uiSchema !== undefined) {\n            Templet = this.uiSchema.Templet;\n        }\n        if (Templet !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\n        }\n\n        this.formContext = new FormContext(this, false);\n        return <>{this.schema.map((v, index) => {\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n        })}</>;\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type !== 'arr') {\n            data[name] = formData[name];\n            return;\n        }\n\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\n        let {arr:arrItems} = arrItem;\n        if (arrItems === undefined) return;\n        let arrDict = arrItem.itemSchemas = {};\n        for (let item of arrItems) {\n            arrDict[item.name] = item;\n        }\n        let val:any[] = formData[name];\n        if (val === undefined) val = [];\n        else if (Array.isArray(val) === false) val = [val];\n        let arr:any[] = [];\n        for (let row of val) {\n            let {$isSelected, $isDeleted} = row;\n            let r = {\n                $source: row,\n                $isSelected: $isSelected,\n                $isDeleted: $isDeleted,\n            };\n            for (let item of arrItems) {\n                this.initDataItem(item, r, row);\n                /*\n                let {name:nm} = item;\n                let v = row[nm];\n                if (v === undefined) v = null;\n                r[nm] = v;\n                */\n            }\n            arr.push(r);\n        }\n        //data[name] = observable(arr);\n        data[name] = arr;\n        return;\n    }\n\n    private watch = () => {\n        let {formData} = this.props;\n        if (formData === undefined) return;\n        //this.initData(formData);\n        this.calcSelectOrDelete();\n    }\n    private calcSelectOrDelete() {\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        if (this.data === undefined) return;\n        let formArrVal = this.data[name];\n        if (formArrVal === undefined) return;\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        if (this.disposer !== undefined) this.disposer();\n    }\n\n    render() {\n        let content = this.renderContent();\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(content)}\n        </ContextContainer.Provider>;\n    }\n\n    async buttonClick(buttonName:string) {\n        this.formContext.checkRules()\n        if (this.formContext.hasError === true) return;\n\n        let {onButtonClick} = this.formContext.form.props;\n        if (onButtonClick === undefined) {\n            alert(`you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this.formContext);\n        if (ret === undefined) return;\n        this.formContext.setError(buttonName, ret);\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)}>\n            {content}\n        </form>;\n    }\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        //return <div className=\"row\">{content}</div>;\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class Field extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {Field} from './field';\nexport {Context, RowContext} from './context';\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as classNames from 'classnames';\nimport '../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from 'tonva-tools';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return; }\n    updateProps(nextProps:any) {}\n    abstract render(item:any, index:number):JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport { uid } from '../uid';\n\nexport class Static extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, render} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, computed, IObservableArray} from 'mobx';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../uid';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    private _items: SelectableItem[];\n    private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private buildItems() {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            return this._items = undefined;\n        }\n        if (items === null) {\n            return this._items = null;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        this._selectedItems = selectedItems;\n        if (selectedItems === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:false, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        if (compare === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:selectedItems.find(si => si === v) !== undefined, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        return this._items = itemsArray.map(v => {\n            return {\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \n                item:v, \n                labelId:uid()\n            };\n        });\n    }\n    @computed get items() {\n        //if (this._items === undefined) \n        this.buildItems();\n        return this._items;\n    }\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render(item:SelectableItem, index:number):JSX.Element {\n        let {className, key, render, onSelect} = this.list.props.item;\n        let {labelId, selected} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(item.item, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from 'tonva-tools';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport \"../css/va-list.css\";\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string|number;\n    };\n    compare?:(item:any, selectItem)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    constructor(props:ListProps) {\n        super(props);\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        this.listBase.updateProps(nextProps);\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\n        if (before === undefined) before = 'before';\n        if (loading === undefined) loading = 'loading';\n        if (none === undefined) none = 'none';        \n        //this.listBase.selectedItems = selectedItems;\n        let {isPaged, items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as className from 'classnames';\nimport {ListView} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"col-sm-12\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className=\"col-sm-2 col-form-label\">\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop as any;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = label===undefined? 'col-sm-12':'col-sm-10';\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n}\n\nexport class PropContainer extends PropRow {\n    render(key:string): JSX.Element {\n        return <div className=\"bg-white\">\n            <label className=\"col-sm-2 col-form-label\">\n                AAABBBCCC\n            </label>\n            <div className=\"col-sm-10\">\n                <div className=\"form-control-plaintext\">\n                    dsfasfa sdf asdf a\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import {ListViewProps} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {PropRow, PropBorder, PropGap, PropContainer,\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: ()=>void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props:any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps:PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps:PropGridProps, props:Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap:boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\nimport {PropContainer, PropBorder, PropGap} from './row';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n/*\n    private propView: PropView;\n    constructor(props:PropGridProps) {\n        super(props);\n    }\n*/\n/*\n    componentWillMount() {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(this.props.values);\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(nextProps.values);\n        this.forceUpdate();\n    }\n*/\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.newValue)}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            if (i>0) elItems.push(this.sep);\n            elItems.push(this.renderRow(schema[i]));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\n        let {name, type} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string = (uiItem && uiItem.label) || name;\n        let value:any = this.props.data[name];\n        switch (type) {\n            default:\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\n                break;\n            case 'image':\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                break;\n        }\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"w-6c\">{label}</div>\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\n        </div>;\n    }\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick} = this.props;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue != value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    else {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","export * from './edit';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {IObservableValue, IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport '../css/va-row.css';\n\nexport interface ListItem {\n    key?: string|number;\n    date?: Date;\n    icon?: string | JSX.Element;\n    main?: string;\n    vice?: string;\n    middle?: string | JSX.Element;\n    midSize?: number;\n    right?: string | JSX.Element;\n    onClick?: () => void;\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\n}\n\nexport interface ListRowProps extends ListItem {\n    //onClick: () => void;\n}\n\nexport interface ListRowState {\n    pressed: boolean;\n}\n\n@observer\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: false,\n        }\n    }\n    render() {\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\n        let header, isIcon:boolean, noteNum;\n        if (unread !== undefined) {\n            let uv:number;\n            if (typeof unread === 'number') uv = unread;\n            else uv = unread.get();\n                if (uv > 0)\n                noteNum = <b>{uv}</b>;\n            else if (uv < 0)\n                noteNum = <b className='dot' />;\n        }\n        switch (typeof icon) {\n            case 'object':\n                header = <header>{icon}{noteNum}</header>; \n                isIcon= false;\n                break;\n            case 'string': \n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\n                isIcon= true; \n                break;\n        }\n        let mid;\n        if (middle !== undefined) {\n            switch (typeof middle) {\n                case 'string':\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\n                    break;\n                default:\n                    mid = middle;\n                    break;\n            }\n        }\n        let footer;\n        if (right !== undefined) {\n            if (typeof right === 'string')\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\n            else\n                footer = <footer>{right}</footer>;\n        }\n        let viceSpan;\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\n        return (\n        <li className={cn} onClick={onClick}>\n            {header}\n            <div>\n                <div>{main}</div>\n                {viceSpan}\n            </div>\n            {mid}\n            {footer}\n        </li>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {ListItem, ListRow} from './listRow';\n\nexport interface ListViewProps {\n    className?: string;\n    items?: any[];\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\n    ex?: any;\n    header?: string|JSX.Element;\n    beforeLoad?: string|JSX.Element;\n    none?: string|JSX.Element;\n    footer?: string|JSX.Element;\n    itemClick?: (item:any)=>void;\n    converter?: (item:any)=>ListItem;\n}\n\n@observer\nexport class ListView extends React.Component<ListViewProps, null> {\n    render() {\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\n        let cn = classNames(className, 'va-list');\n        let content, elHeader;\n        if (items === undefined)\n            content = beforeLoad === null? null : <li className='empty'>\n                {beforeLoad || '...'}\n            </li>;\n        else if (items.length === 0) {\n            content = (\n            <li className='empty'>\n                {\n                    none || '[none]'\n                }\n            </li>);\n        }\n        else if (renderRow !== undefined) {\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\n        }\n        else {\n            content = items.map((item, index) => {\n                let onClick = item.onClick;\n                if (onClick === undefined && itemClick !== undefined) \n                    onClick = ()=>itemClick(item);\n                let listItem:ListItem;\n                if (converter !== undefined) {\n                    listItem = converter(item);\n                    if (listItem === undefined) return null;\n                }\n                else {\n                    listItem = {\n                        ...item\n                    }\n                }\n                if (listItem.key === undefined) listItem.key = listItem.main;\n                return <ListRow onClick={onClick} {...listItem} />;\n            });\n        }\n        if (header !== undefined) {\n            if (typeof header === 'string') {\n                elHeader = <div className='va-list-header'>{header}</div>;\n            }\n            else {\n                elHeader = header;\n            }\n        }\n\n        return (\n        <div className={cn}>\n            {elHeader}\n            <ul>\n                {content}\n            </ul>\n            {footer}\n        </div>\n        )\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\nimport userApi from './userApi';\n\nexport class EditMeInfo extends React.Component {\n    private schema:ItemSchema[] = [\n        {name:'nick', type:'string'} as StringSchema,\n        {name:'icon', type:'image'} as ImageSchema\n    ];\n    private uiSchema:UiSchema = {\n        items: {\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\n            icon: {widget:'image', label:'头像'} as UiImageItem,\n        }\n    }\n    @observable private data:any;\n\n    constructor(props:any) {\n        super(props);\n        let {nick, icon} = nav.user;\n        this.data = {\n            nick: nick,\n            icon: icon,\n        }\n    }\n\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\n        let {name} = itemSchema;\n        await userApi.userSetProp(name, newValue);\n        this.data[name] = newValue;\n        nav.user[name] = newValue;\n        nav.saveLocalUser();\n    }\n\n    render() {\n        return <Page header=\"个人信息\">\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\n                data={this.data}\n                onItemChanged={this.onItemChanged} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n\n    private _content: JSX.Element;\n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[] = [];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        switch (size) {\n            default:\n            case 'md': this.size = '3.2rem'; break;\n            case 'sm': this.size = '4rem'; break;\n            case 'lg': this.size = '2.5rem'; break;\n        }\n        this.tabs.push(...tabs.map(v => {\n                let tab = new Tab();\n                tab.name = v.name;\n                tab.selected = false;\n                tab.caption = v.caption;\n                tab.contentBuilder = v.content;\n                tab.notify = v.notify;\n                return tab;\n            }\n        ));\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    private tabClick = (tab:Tab) => {\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    showTab(tabName: string) {\n        let tab = this.tabs.find(v => v.name === tabName);\n        if (tab === undefined) return;\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        return <div className=\"tab\">\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\n                {this.tabs.map((v,index) => {\n                    let style:React.CSSProperties={\n                        display: v.selected===true? undefined : 'none'};\n                    return <div key={index} style={style}>{v.content}</div>;\n                })}\n            </div>\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\n                {this.tabs.map((v,index) => {\n                    let {selected, caption, notify} = v;\n                    let notifyCircle:any;\n                    if (notify !== undefined) {\n                        let num = notify.get();\n                        if (num !== undefined) {\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                        }\n                    }\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                        <div className=\"align-self-center\">\n                            {notifyCircle}\n                            {caption(selected)}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport {FetchError} from '../fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","import {User, Guest, Unit} from './user';\n\nexport interface ClearableData {\n    clear(): void;\n}\n\nexport class Data<T> implements ClearableData {\n    private name: string;\n    private value?: T;\n    constructor(name: string) {this.name = name; }\n    get(): T {\n        if (this.value !== undefined) return this.value;\n        let v = localStorage.getItem(this.name);\n        return this.value = v === null ? undefined : JSON.parse(v); \n    }\n    set(value: T) {\n        if (!value) { this.clear(); return; }\n        this.value = value;\n        localStorage.setItem(this.name, JSON.stringify(value));\n    }\n    clear() {\n        this.value = undefined;\n        localStorage.removeItem(this.name);\n    }\n}\n\nexport class LocalData {\n    user = new Data<User>('user');\n    guest = new Data<Guest>('guest');\n    unit = new Data<Unit>('unit');\n    homeTabCur = new Data<number>('homeTabCur');\n\n    logoutClear() {\n        [\n            this.user,\n            this.unit,\n            this.homeTabCur\n        ].map(d => d.clear());\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Loading } from 'tonva-tools';\r\n\r\nexport const meTab = () => {\r\n    let LoadableComponent = Loadable({\r\n        loader: () => import('./tab'),\r\n        loading: Loading\r\n    });\r\n    return <LoadableComponent />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva-tools';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { observable } from 'mobx';\r\nimport { meTab } from '../me';\r\n\r\nexport const store = {\r\n    //homeCount: observable.box<number>(-1),\r\n    //cartCount: observable.box<number>(101),\r\n};\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSCMApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n    render = (param?: any): JSX.Element => {\r\n        let { cHome } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\r\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View, nav } from 'tonva-tools';\r\nimport { LMR, FA, SearchBox } from 'tonva-react-form';\r\nimport logo from '../images/logo.svg';\r\nimport { CHome } from './CHome';\r\n\r\nexport class VSiteHeader extends View<CHome> {\r\n    render() {\r\n        let currentSalesRegion = <FA name=\"globe\" />\r\n        let login = <div>\r\n            登录\r\n        </div>\r\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\r\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\r\n        let right = undefined;\r\n        /*\r\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\r\n            {currentSalesRegion} &nbsp;\r\n            <button onClick={()=>nav.start()}>Try</button>\r\n        </div>;*/\r\n        return <LMR\r\n            className=\"mb-3 align-items-center bg-white\"\r\n            left={left} right={right}>\r\n            <div className=\"\">\r\n                {this.controller.renderSearchHeader('md')}\r\n            </div>\r\n        </LMR>\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva-tools';\r\nimport { CHome } from './CHome';\r\nimport { SearchBox } from 'tonva-react-form';\r\n\r\nexport class VSearchHeader extends View<CHome> {\r\n\r\n    private onSearch = async (key: string) => {\r\n        // let { cProduct } = this.controller.cApp;\r\n        // cProduct.start(key);\r\n    }\r\n\r\n    render(param: any) {\r\n        return <SearchBox className=\"px-1 w-100\" \r\n            size={param}\r\n            onSearch={this.onSearch} \r\n            placeholder=\"功能...\" />\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, View } from 'tonva-tools';\r\nimport { observer } from 'mobx-react';\r\nimport { CHome } from './CHome';\r\nimport { observable } from 'mobx';\r\n\r\nconst LIGUOSHENG = 5;\r\n\r\ninterface CatItem {\r\n    title: string;\r\n    sub: string[];\r\n    img: string;\r\n}\r\n\r\ninterface Cat {\r\n    caption: string;\r\n    items?: CatItem[];\r\n}\r\n\r\nconst catItemStyle:React.CSSProperties = {\r\n    width:'12rem', \r\n    //height: '6rem', \r\n    overflow: 'hidden', \r\n};\r\nconst subStyle:React.CSSProperties = {\r\n    fontSize:'0.75rem',\r\n    overflow: 'hidden', \r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap'\r\n};\r\nconst imgStyle:React.CSSProperties = {\r\n    //float:'left', clear:'both', \r\n    height:'1.5rem', width:'1.5rem', opacity:0.1, \r\n    marginRight: '0.5rem',\r\n};\r\n\r\nexport class VHome extends View<CHome> {\r\n\r\n    async open(param?: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderSection = (item: any, index: number) => {\r\n        return <section>\r\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\r\n            <p>{item.content}</p>\r\n        </section>\r\n    }\r\n\r\n    render(param: any): JSX.Element {\r\n        return <this.content />\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let { openMetaView } = this.controller;\r\n        let viewMetaButton = <></>;\r\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\r\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\r\n        }\r\n\r\n        return <Page header={false} footer={viewMetaButton}>\r\n            <this.content />\r\n        </Page>;\r\n    })\r\n\r\n    private content = observer(() => {\r\n        let siteHeader = this.controller.renderSiteHeader();\r\n        return <>\r\n            {siteHeader}\r\n            {this.controller.renderCategoryRootList()}\r\n        </>\r\n    });\r\n}","import * as React from 'react';\r\nimport { TuidMain } from 'tonva-react-uq';\r\nimport { VSiteHeader } from './VSiteHeader';\r\nimport { CSCMApp } from '../CSCMApp';\r\nimport { PageItems, Controller } from 'tonva-tools';\r\nimport { VSearchHeader } from './VSearchHeader';\r\nimport { VHome } from './VHome';\r\n\r\nclass HomeSections extends PageItems<any> {\r\n\r\n    private sectionTuid: TuidMain;\r\n\r\n    constructor(sectionTuid: TuidMain) {\r\n        super();\r\n        this.firstSize = this.pageSize = 13;\r\n        this.sectionTuid = sectionTuid;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.sectionTuid.search(\"\", pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined) return 0;\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CHome extends Controller {\r\n\r\n    cApp: CSCMApp;\r\n    homeSections: HomeSections;\r\n    sectionTuid: TuidMain;\r\n\r\n    constructor(cApp: CSCMApp, res: any) {\r\n        super(res);\r\n\r\n        this.cApp = cApp;\r\n    }\r\n\r\n    async internalStart(param: any) {\r\n\r\n        let { cFunctionCategory } = this.cApp;\r\n        await cFunctionCategory.start();\r\n        this.openVPage(VHome);\r\n    }\r\n\r\n    renderSiteHeader = () => {\r\n        return this.renderView(VSiteHeader);\r\n    }\r\n\r\n    renderSearchHeader = (size?:string) => {\r\n        return this.renderView(VSearchHeader, size);\r\n    }\r\n\r\n    renderCategoryRootList = () => {\r\n        let { cFunctionCategory } = this.cApp;\r\n        return cFunctionCategory.renderRootList();\r\n    }\r\n\r\n    renderHome = () => {\r\n        return this.renderView(VHome);\r\n    }\r\n\r\n    openMetaView = () => {\r\n        this.cApp.startDebug();\r\n    }\r\n\r\n    tab = () => <this.renderHome />;\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva-tools';\r\nimport { CFunctionCategory } from './CFunctionCategory';\r\nimport { consts } from '../home/consts';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nconst imgStyle: React.CSSProperties = {\r\n  height: '1.5rem', width: '1.5rem',\r\n  marginLeft: '0.1rem',\r\n  marginRight: '0.3rem'\r\n}\r\n\r\nexport const titleTitle: React.CSSProperties = {\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n}\r\n\r\nexport const subStyle: React.CSSProperties = {\r\n  fontSize: '0.75rem',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n}\r\n\r\nexport class VRootCategory extends View<CFunctionCategory> {\r\n  private categoryClick = async (categoryWapper: any, parent: any) => {\r\n    await this.controller.openMainPage(categoryWapper, parent);\r\n  }\r\n\r\n  private renderRootCategory = (item: any, parent: any) => {\r\n    let { name, children } = item;\r\n    return <div className=\"bg-white mb-3\" key={name}>\r\n      <div className=\"py-2 px-3\">\r\n        <b>{name}</b>\r\n      </div>\r\n      <div className=\"\"\r\n        style={{ paddingRight: '1px' }}\r\n      >\r\n        <div className=\"row no-gutters\">\r\n          {children === undefined ? '' : children.map(v => this.renderSubCategory(v, item))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  private renderSubCategory = (item: any, parent: any) => {\r\n    let {name, children} = item;\r\n    return <div key={name}\r\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\r\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\r\n      onClick={() => this.categoryClick(item, parent)}>\r\n      <div className=\"py-2 px-2\"\r\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }} >\r\n        <div style={titleTitle}>\r\n          <span className=\"ml-1 align-middle\">\r\n            <FA name=\"chevron-circle-right\" className=\"text-info\" />\r\n            &nbsp; {name}\r\n          </span>\r\n        </div>\r\n        {children === undefined ? '' : renderThirdCategory(children)}\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  render(param: any): JSX.Element {\r\n    let { categories } = this.controller;\r\n    return <>{categories.map(v => this.renderRootCategory(v, undefined))}</>;\r\n  }\r\n}\r\n\r\nexport function renderThirdCategory(items: any) {\r\n  return <div className=\"py-1 px-1 text-muted small\" style={subStyle}>\r\n      {items.length === 0 ? <>&nbsp;</> : items.map(v => v.name).join(' / ')}\r\n  </div>\r\n}","import * as React from 'react';\r\nimport { CFunctionCategory } from './CFunctionCategory';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { tv } from 'tonva-react-uq';\r\nimport { titleTitle, subStyle } from './VRootCategory';\r\n\r\nexport class VCategory extends VPage<CFunctionCategory> {\r\n\r\n  async open(categoryWaper: any) {\r\n    this.openPage(this.page, categoryWaper);\r\n  }\r\n\r\n  private renderChild = (childWapper: any) => {\r\n    return <div className=\"py-2\"><FA name=\"hand-o-right mr-2\"></FA>{childWapper.name}</div>\r\n  }\r\n\r\n  private categoryClick = async (childWapper: any, parent: any) => {\r\n    await this.controller.openMainPage(childWapper, parent);\r\n  }\r\n\r\n  private renderRootCategory = (item: any, parent: any) => {\r\n    let { name, children } = item;\r\n    return <div className=\"bg-white mb-3\" key={name}>\r\n      <div className=\"py-2 px-3\">\r\n        <b>{name}</b>\r\n      </div>\r\n      <div className=\"\"\r\n        style={{ paddingRight: '1px' }}\r\n      >\r\n        <div className=\"row no-gutters\">\r\n          {children.map(v => this.renderSubCategory(v, item))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  private renderSubCategory = (item: any, parent: any) => {\r\n    let { name, children } = item;\r\n    return <div key={name}\r\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\r\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\r\n      onClick={() => this.categoryClick(item, parent)}>\r\n      <div className=\"pt-1 pb-1 px-2\"\r\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\r\n      >\r\n        <div style={titleTitle}>\r\n          <span className=\"ml-1 align-middle\">\r\n            <FA name=\"chevron-right\" className=\"text-info small\" />\r\n            &nbsp; {name}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n    // <img src={consts.appIcon} alt=\"structure\" style={imgStyle} />\r\n  }\r\n\r\n  private page = (categoryWaper: any) => {\r\n\r\n    let { cHome } = this.controller.cApp;\r\n    let header = cHome.renderSearchHeader();\r\n\r\n    let { categoryWaper: item, parent } = categoryWaper;\r\n    return <Page header={header} >\r\n      {this.renderRootCategory(item, parent)}\r\n    </Page>\r\n  }\r\n}","export const funcs = [\r\n  {\r\n    name: \"基础信息\",\r\n    id: 1,\r\n    children: [\r\n      { name:\"商品信息\",\r\n        id: 101,\r\n        pid: 1,\r\n        page: \"product\" }, \r\n      { name: \"供应商信息\",\r\n        id: 102,\r\n        pid: 1,\r\n        page: \"supplier\" },\r\n      { name: \"客户信息\",\r\n        id: 103,\r\n        pid: 1,\r\n        page: \"customer\" },\r\n      { name: \"部门信息\",\r\n        id: 104,\r\n        pid: 1,\r\n        page: \"department\" },\r\n      { name: \"职员信息\",\r\n        id: 105,\r\n        pid: 1,\r\n        page: \"staff\" },\r\n      { name: \"物流中心（自建、委托）\",\r\n        id: 106,\r\n        pid: 1 },\r\n      { name: \"库区信息（自建）\",\r\n        id: 107,\r\n        pid: 1,\r\n        page: \"warehouse\" },\r\n      { name: \"货位信息（自建）\",\r\n        id: 108,\r\n        pid: 1,\r\n        page: \"goodslocation\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购管理\",\r\n    id: 2,\r\n    children: [\r\n      { name:\"采购订单\",\r\n        id: 201,\r\n        pid: 2,\r\n        page: \"purchase\" }, \r\n      { name: \"采购收货（自建）\",\r\n        id: 202,\r\n        pid: 2 }, \r\n      { name: \"采购验收（自建）\",\r\n        id: 203,\r\n        pid: 2 }, \r\n      { name: \"采购入库（自建）\",\r\n        id: 204,\r\n        pid: 2 }, \r\n      { name: \"采购记账\",\r\n        id: 205,\r\n        pid: 2 }, \r\n      { name: \"采购退货\",\r\n        id: 206,\r\n        pid: 2 }, \r\n      { name: \"采退出库（自建）\",\r\n        id: 207,\r\n        pid: 2 }, \r\n      { name: \"采退复核（自建）\",\r\n        id: 208,\r\n        pid: 2 }, \r\n      { name: \"采退记账\",\r\n        id: 209,\r\n        pid: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购结算管理\",\r\n    id: 3,\r\n    children: [\r\n      { name: \"采购发票\",\r\n        id: 301,\r\n        pid: 3 }, \r\n      { name: \"采购组票\",\r\n        id: 302,\r\n        pid: 3 }, \r\n      { name: \"采购结算\",\r\n        id: 303,\r\n        pid: 3 }, \r\n      { name: \"采价调整\",\r\n        id: 304,\r\n        pid: 3 }, \r\n      { name: \"采购冲差\",\r\n        id: 305,\r\n        pid: 3 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售管理\",\r\n    id: 4,\r\n    children: [\r\n      { name:\"销售订单\",\r\n        id: 401,\r\n        pid: 4 }, \r\n      { name: \"销售出库（自建）\",\r\n        id: 402,\r\n        pid: 4 }, \r\n      { name: \"出库复核（自建）\",\r\n        id: 403,\r\n        pid: 4 }, \r\n      { name: \"销售记账（自建、委托）\",\r\n        id: 404,\r\n        pid: 4 }, \r\n      { name: \"销售退货\",\r\n        id: 405,\r\n        pid: 4 }, \r\n      { name: \"销售退货验收（自建）\",\r\n        id: 406,\r\n        pid: 4 }, \r\n      { name: \"销售退货入库（自建）\",\r\n        id: 407,\r\n        pid: 4 }, \r\n      { name: \"销售退货记账（自建、委托）\",\r\n        id: 408,\r\n        pid: 4 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售结算管理\",\r\n    id: 5,\r\n    children: [\r\n      { name:\"销售换票\",\r\n        id: 501,\r\n        pid: 5 }, \r\n      { name: \"销售结算\",\r\n        id: 502,\r\n        pid: 5 }, \r\n      { name: \"销价调整\",\r\n        id: 503,\r\n        pid: 5 }, \r\n      { name: \"销售冲差\",\r\n        id: 504,\r\n        pid: 5 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"期初管理\",\r\n    id: 6,\r\n    children: [\r\n      { name:\"商品库存期初\",\r\n        id: 601,\r\n        pid: 6 }, \r\n      { name: \"供应商期初\",\r\n        id: 602,\r\n        pid: 6 }, \r\n      { name: \"客商期初\",\r\n        id: 603,\r\n        pid: 6 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"价格管理\",\r\n    id: 7,\r\n    children: [\r\n      { name:\"商品定价\",\r\n        id: 701,\r\n        pid: 7 }, \r\n      { name: \"客商定价\",\r\n        id: 702,\r\n        pid: 7 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"查询报表\",\r\n    id: 8,\r\n    children: [\r\n      { name: \"库存相关\",\r\n        id: 801,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"库存查询\",\r\n            id: 80101,\r\n            pid: 801 },\r\n          { name: \"进销存查询\",\r\n            id: 80102,\r\n            pid: 801 },\r\n        ]\r\n      }, \r\n      { name: \"销售相关\",\r\n        id: 802,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"客商销售汇总查询\",\r\n            id: 80201,\r\n            pid: 802 },\r\n          { name: \"客商销售明细查询\",\r\n            id: 80202,\r\n            pid: 802 }\r\n        ]\r\n      }, \r\n      { name: \"采购相关\",\r\n        id: 803,\r\n        pid: 8,\r\n        children: []\r\n      }, \r\n      { name: \"应收应付相关\",\r\n        id: 804,\r\n        pid: 8,\r\n        children: [\r\n          { name: \"客商应收账款汇总查询\",\r\n            id: 80401,\r\n            pid: 804 },\r\n          { name: \"客商应收账款明细查询\",\r\n            id: 80402,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款汇总查询\",\r\n            id: 80403,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款明细查询\",\r\n            id: 80404,\r\n            pid: 804 }\r\n        ]\r\n      }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"测试\",\r\n    id: 9,\r\n    children: [\r\n      { name:\"全部测试\",\r\n        id: 901,\r\n        pid: 9,\r\n        page: \"testAllTab\" }\r\n    ]\r\n  }\r\n]\r\n","import React from 'react';\nimport { nav, VPage, Page, appInFrame, Controller } from 'tonva-tools';\nimport {AppUI, CApp, VTuidEdit, VTuidMain, CLink} from 'tonva-react-uq';\nimport { FA } from 'tonva-react-form';\nimport {CSCMApp} from 'CSCMApp'\nimport { consts } from 'home/consts';\nimport uui from \"ui\";\n\nexport class TestPage2 extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    public appPage = () => {\n        let {cUqArr: cUsqArr} = this.controller;\n        let content;\n        if (cUsqArr.length === 0) {\n            content = <div className=\"p-3 text-info\">\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\n            </div>;\n        }\n        else {\n            content = cUsqArr.map((v,i) => \n            <div key={i}>{v.render()}</div>);\n        }\n        return <Page header={'全部功能'}\n          logout={async ()=>{appInFrame.unit = undefined}}>\n            <div className=\"p-3\">-------</div>\n            {content}\n        </Page>;\n    };\n}\n","import * as React from 'react';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { nav, Page, VPage, Controller } from 'tonva-tools';\r\nimport { AppUI, CApp, VTuidEdit, VTuidMain, CLink } from 'tonva-react-uq';\r\nimport { consts } from 'home/consts';\r\nimport {TestPage2} from './testpage2'\r\n\r\nconst baseInfoNames : string[] = [\r\n  \"product\", \"supplier\", \"customer\", \"department\", \"staff\", \"warehouse\", \"goodslocation\"\r\n]\r\n\r\nconst sheetNames : string[] = [\r\n  \"purchase\"\r\n]\r\n\r\nclass NavTuidMainPage extends VPage<CApp> {\r\n  async open(param?: any) {\r\n    if (param !== undefined) {\r\n      let cuq = this.controller.getCUq(consts.uqBasedata);\r\n      let mid = cuq.tuid(param);\r\n      if (mid !== undefined) {\r\n        await cuq.cTuidMain(mid).start();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass NavSheetPage extends VPage<CApp> {\r\n  async open(param?: any) {\r\n    if (param !== undefined) {\r\n      let cuq = this.controller.getCUq(consts.uqBasedata);\r\n      let mid = cuq.sheet(param);\r\n      if (mid !== undefined) {\r\n        await cuq.cSheet(mid).start();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const navToPage = (name : string, cApp : CSCMApp) => {\r\n  if (baseInfoNames.includes(name)) {\r\n    cApp.showOneVPage(NavTuidMainPage, name);\r\n  }\r\n  else if (sheetNames.includes(name)) {\r\n    cApp.showOneVPage(NavSheetPage, name);\r\n  }\r\n  else if (name === \"testAllTab\")\r\n  {\r\n    cApp.showOneVPage(TestPage2, \"testAllTab\")\r\n  }\r\n}","import * as React from 'react';\r\nimport { Query } from 'tonva-react-uq';\r\nimport { observable } from 'mobx';\r\nimport { VRootCategory } from './VRootCategory';\r\nimport { VCategory } from './VCategory';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { nav, Page, Loading, Controller } from 'tonva-tools';\r\nimport { funcs } from './funcCategories';\r\nimport { navToPage } from 'pages'\r\n\r\nexport class CFunctionCategory extends Controller {\r\n\r\n  cApp: CSCMApp;\r\n  // categories: any[];\r\n  @observable categories: any[] = [];\r\n\r\n  constructor(cApp: CSCMApp, res: any) {\r\n    super(res);\r\n\r\n    this.cApp = cApp;\r\n  }\r\n\r\n  async internalStart(param: any) {\r\n    this.categories = funcs;\r\n  }\r\n\r\n  renderRootList = () => {\r\n    return this.renderView(VRootCategory);\r\n  };\r\n\r\n  async openMainPage(categoryWaper: any, parent: any) {\r\n    if (categoryWaper === undefined)\r\n      return;\r\n    let { children, page, name } = categoryWaper;\r\n    if (children === undefined || children.length == 0) {\r\n      \r\n      if (page !== undefined) {\r\n        navToPage(page, this.cApp);\r\n      }\r\n    }\r\n    else {\r\n      this.openVPage(VCategory, { categoryWaper, parent });\r\n    }\r\n  }\r\n}","import * as React from 'react';\r\n\r\nimport { CApp, CUq } from 'tonva-react-uq';\r\nimport { CHome } from './home/CHome';\r\nimport { CFunctionCategory } from 'functionCategory/CFunctionCategory';\r\nimport { consts } from './home/consts';\r\nimport { WebUser } from 'CurrentUser';\r\nimport { Controller, VPage } from 'tonva-tools'\r\n\r\nexport class CSCMApp extends CApp {\r\n\r\n  currentUser: WebUser;\r\n  currentSalesRegion: any;\r\n  currentLanguage: any;\r\n\r\n  cHome: CHome;\r\n  cFunctionCategory: CFunctionCategory;\r\n\r\n  protected async internalStart() {\r\n    if (this.isLogined) {\r\n      //this.currentUser.user = this.user;\r\n    }\r\n\r\n    this.cFunctionCategory = new CFunctionCategory(this, undefined);\r\n    this.cHome = new CHome(this, undefined);\r\n\r\n    let promises: PromiseLike<void>[] = [];\r\n    promises.push(this.cFunctionCategory.start());\r\n    await Promise.all(promises);\r\n    this.showMain();\r\n  }\r\n\r\n  showMain(initTabName?: string) {\r\n    this.openVPage(this.VAppMain, initTabName);\r\n  }\r\n\r\n  public async showOneVPage(vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> {\r\n    await (new vp(this)).open(param);\r\n  }\r\n\r\n  protected onDispose() {\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { VTuidMain } from \"tonva-react-uq\";\r\nimport { Page } from 'tonva-tools';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class MyVTuidMain extends VTuidMain {\r\n    protected get view() {\r\n        let {label, proxyLinks} = this.controller;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                改写的TuidMain\r\n                <div className='my-3'>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, Muted } from 'tonva-react-form';\r\nimport { tv, TuidUI, FieldTuidUI } from 'tonva-react-uq';\r\nimport { MyCTuid } from './myCTuid'\r\n\r\nconst customer:TuidUI = {\r\n    CTuidMain : MyCTuid,\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name} = row;\r\n        let right = <Muted>{}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\r\n    },\r\n};\r\n\r\nconst manufactor:TuidUI = {\r\n    content: (values) => {\r\n        let {id, name} = values;\r\n        return <>{name || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name, id} = row;\r\n        let right = <Muted>{}</Muted>;\r\n        let mid = <>{'id ' + id}</>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={mid}/>\r\n    },\r\n}\r\n\r\nconst productPackRowContent = observer((values) => {\r\n    let {id, ratio, name, $owner} = values;\r\n    let content, rText = String(ratio);\r\n    if ($owner !== undefined) {\r\n        let packType = $owner.valueFromFieldName('packType');\r\n        if (packType !== undefined) {\r\n            let packName = packType.valueFromFieldName? packType.valueFromFieldName('name') : packType['name'];\r\n            if (packName) {\r\n                if (name) content = name + ' = ' + (rText + packName);\r\n                else content = (rText + packName);\r\n            }\r\n        }\r\n    }\r\n    if (content === undefined) content = (name? name + ' ' + rText : rText) + ' err: no $owner in values';\r\n    return <div className=\"px-3 py-2\">{content}</div>;\r\n});\r\n\r\nconst product:TuidUI = {\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: observer((row):JSX.Element => {\r\n        let {discription, packType} = row;\r\n        let right;\r\n        if (packType && packType.content) {\r\n            right = <Muted>{tv(packType)}</Muted>;\r\n        }\r\n        return <LMR className=\"px-3 py-2\" left={discription} right={right}/>\r\n    }),\r\n    divs: {\r\n        pack: {\r\n            content: observer((values) => {\r\n                let {id, ratio, name, $owner} = values;\r\n                if ($owner === undefined)\r\n                    return <>{name || ratio || 'id' + id + ' ...'}</>;\r\n                let packType = $owner.valueFromFieldName('packType');\r\n                return <>{name || (ratio + (packType && packType.name)) || 'id' + id + ' ...'}</>;\r\n            }),\r\n            rowContent: productPackRowContent,\r\n        }\r\n    },\r\n    form: {\r\n        items: {\r\n            packType: {\r\n                autoList: true,\r\n            } as FieldTuidUI,\r\n            pack: {\r\n                rowContent: productPackRowContent,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst packType:TuidUI = {\r\n    content: (values) => {\r\n        let {id, name, discription} = values;\r\n        return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name, discription} = row;\r\n        let right = <Muted>{discription}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\r\n    },\r\n};\r\n\r\nexport default {\r\n    manufactor: manufactor,\r\n    customer: customer,\r\n    product: product,\r\n    packType: packType,\r\n}\r\n","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\r\nimport { MyVTuidMain } from \"./vTuidMain\";\r\n\r\nexport class MyCTuid extends CTuidMain {\r\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\r\n\r\n    // protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\r\n    //     let {name} = field;\r\n    //     switch (arr) {\r\n    //     case undefined:\r\n    //         switch (name) {\r\n    //         case 'fromUser':\r\n    //             return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n    //                 let {_tuid} = field;\r\n    //                 let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n    //                 let ret = await cTuidSelect.call();\r\n    //                 return ret.id;\r\n    //             };\r\n    //         }\r\n    //         break;\r\n    //     }\r\n    //     return super.buildSelect(field, arr, fieldTuidUI);\r\n    // }\r\n}\r\n","import { UqUI } from 'tonva-react-uq';\r\n//import res from './res';\r\nimport tuid from './tuid';\r\nimport res from './res';\r\n//import sheet from './sheet';\r\n//import map from './map';\r\n\r\nconst uqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    res: res\r\n}\r\n\r\n\r\nconst uqUIs = uqUI;\r\n/*\r\n{\r\n    $: uqUI,\r\n    \"aa-bb\": aa_BB_UsqUI,\r\n}\r\n*/\r\nexport default uqUIs;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\nimport _ from 'lodash';\n\nexport default {\n  x: {\n    no: '编号',\n    team: '部门',\n    staff: '员工',\n    noStaff: '无员工',\n    post: '职位',\n    noPost: '无职位',\n    a: 'aaa',\n    b: {\n      s: 'sss',\n      d: () => <span className=\"text-success\">ddd</span>,\n    },\n    c: () => <span className=\"text-danger\">ccc</span>,\n  },\n  usq: 'scmbasedata',\n  tuid: '基础档案',\n  map: '对照表',\n  tuidPlaceHolder: '选择',\n  submit: '提交',\n  arrNew: '新增',\n  arrEdit: '保存',\n  entity: {\n    customer: {\n      label: '客户信息',\n      fields: {\n        name: '客户名称'\n      }\n    },\n    manufactor: {\n      label: '生产厂商',\n      fields: {\n        name: '名称'\n      }\n    },\n    product: {\n      label: '商品信息',\n      fields: {\n        discription: '名称',\n        packType: '计量类型',\n      },\n      arrs: {\n        pack: {\n          label: '包装单位',\n          fields: {\n            ratio: '换算率(相对基本单位)',\n            name: '名称'\n          }\n        }\n      }\n    },\n    packtype: {\n      label: '计量类型',\n      fields: {\n        name: '计量单位(如 g,ml,台,个)',\n        discription: '计量类型(如 重量，长度,单体)',\n      },\n    },\n    department: {\n      label: '部门信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    goodslocation: {\n      label: '货位信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    staff: {\n      label: '职员信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    supplier: {\n      label: '供应商信息',\n      fields: {\n        name: '名称',\n      }\n    },\n    warehouse: {\n      label: '库区信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    purchase: {\n      label: '采购订单',\n    },\n    message: {\n      label: '消息-message',\n      arrNew: '新增消息',\n      arrEdit: '保存消息',\n      fields: {\n        fromUser: '发送人',\n        fromUnit: '发送部门',\n        type: '类型',\n        date: '日期',\n        subject: '主题',\n        discription: '描述',\n        content: '内容'\n      },\n    },\n    getMessage: {\n      label: '获取Message',\n      submit: '获取消息',\n      fields: {\n        msg: '消息'\n      }\n    },\n    newMessage: {\n      label: '新建消息',\n      fields: {\n        type: '类型',\n        subject: '主题',\n      },\n      arrs: {\n        to: {\n          label: '发送',\n          newSubmit: '新增to',\n          editSumbit: '保存to',\n        },\n        cc: {\n          label: '抄送',\n          newSubmit: '新增cc',\n          editSumbit: '保存cc',\n        }\n      }\n    },\n    sectionTeam: {\n      label: '大部设置',\n    },\n    teamPerson: {\n      label: '部门员工职位',\n      fields: {\n      },\n      confirmDelete: _.template('真的要删除${label}吗'),\n    },\n    user: {\n      label: '用户'\n    }\n  }\n}\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { FA } from \"tonva-react-form\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { CQuery, VQueryMain } from \"tonva-react-uq\";\r\nimport { tv } from 'tonva-react-uq';\r\n\r\nexport class CGetMessage extends CQuery {\r\n    protected get VQueryMain() {return VMain}\r\n}\r\n\r\nexport class VMain extends VQueryMain {\r\n    protected queryResult = observer((result:any) => {\r\n        let ret0 = result.ret[0];\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            重载的CGetMessage <br/>\r\n            {tv(ret0.fromUser)/*ret0.fromUser.content()*/}\r\n            <pre>{JSON.stringify(ret0, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { VTuidMain } from \"tonva-react-uq\";\r\nimport { Page } from 'tonva-tools';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class MyVTuidMain extends VTuidMain {\r\n    protected get view() {\r\n        let {label, proxyLinks} = this.controller;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                改写的TuidMain\r\n                <div className='my-3'>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}","import { AppUI, CApp } from \"tonva-react-uq\";\r\nimport { VHome } from './main';\r\nimport { CSCMApp } from '../CSCMApp';\r\nimport scmbaseUI from './scmbase';\r\nimport $unitx from './$unitx';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"bruce/SCMBase\",\r\n    CApp: CSCMApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '$$$/$unitx': $unitx,\r\n        'bruce/scmbasedata': scmbaseUI\r\n    }\r\n}\r\n\r\nexport const uiorg: AppUI = {\r\n    appName: \"bruce/SCMBase\",\r\n    CApp: CSCMApp,\r\n    main: VHome,\r\n    uqs: {\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport tuid from './tuid';\r\nimport map from './map';\r\nimport query from './query';\r\nimport res from './res';\r\nimport { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    map: map,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default usqUI;","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\r\nimport { MyVTuidMain } from \"./vTuidMain\";\r\n\r\nexport class MyCTuid extends CTuidMain {\r\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\r\n        let {name} = field;\r\n        switch (arr) {\r\n        case undefined:\r\n            switch (name) {\r\n            case 'fromUser':\r\n                return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n                    let {_tuid} = field;\r\n                    let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n                    let ret = await cTuidSelect.call();\r\n                    return ret.id;\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        return super.buildSelect(field, arr, fieldTuidUI);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { TuidUI } from 'tonva-react-uq';\r\n\r\nconst organization:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (values) => {\r\n                let {id, title} = values;\r\n                return <>{title}</>\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    user: {\r\n        content: (values) => {\r\n            let {id, name, nick, assigned} = values;\r\n            if (assigned !== undefined) {\r\n                return <>{assigned} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (nick != undefined) {\r\n                return <>{nick} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (name !== undefined) return name;\r\n            return 'id ' + id + ' ...';\r\n        }\r\n    },\r\n    section: {\r\n        content: (values) => {\r\n            let {id, name} = values;\r\n            return <>{name}</>;\r\n        }\r\n    },\r\n    organization: organization,\r\n}\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\n//import { dictionary as x } from '../../res';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    //label: '部门员工对照表',\r\n    //main: VMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.team}</Muted> {name}</>,\r\n            none: (x)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.staff}</Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({x, title, id}:any) => <><Muted>{x.post}</Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import getMessage from './getMessage';\r\nimport teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    getMessage: getMessage,\r\n    teamPosts: teamPosts,\r\n};\r\n","import { QueryUI } from \"tonva-react-uq\";\r\nimport { VMain } from \"./cGetMessge\";\r\n\r\nconst ui:QueryUI = {\r\n    main: VMain,\r\n}\r\n\r\nexport default ui;\r\n","import React from 'react';\r\nimport { QueryUI, tv } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((values:any) => <div className=\"px-3 py-2\">{tv(values.post)/*.content()*/}</div>),\r\n}\r\n\r\nexport default ui;","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    usq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    tuidPlaceHolder: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部设置',\r\n        },\r\n        teamPerson: {\r\n            label: '部门员工职位',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '部门机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '部门职位',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '组织结构',\r\n            arrs: {\r\n                post: {\r\n                    label: '职位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva-tools';\r\nimport { startApp } from 'tonva-react-uq';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\nclass App extends React.Component {\r\n\r\n  private onLogined = async () => {\r\n    await startApp(ui);\r\n    /*\r\n    let page = <Page header={false}>\r\n      <Tabs tabs={faceTabs} />\r\n    </Page>\r\n    nav.push(page);\r\n    */\r\n    //let b = new B('b');\r\n    //await b.d();\r\n    //nav.push(<div>ddd</div>)\r\n  }\r\n  public render() {\r\n    return <NavView onLogined={this.onLogined} />\r\n  }\r\n}\r\n\r\nexport default App;","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}