{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/index.ts","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","home/consts.ts","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/IconText.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","images/logo.svg","tonva-tools/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","functionCategory/VRootCategory.tsx","functionCategory/VCategory.tsx","functionCategory/funcCategories.tsx","pages/testpage2.tsx","pages/index.tsx","functionCategory/CFunctionCategory.tsx","CSCMApp.tsx","ui/scmbase/tuid/vTuidMain.tsx","ui/scmbase/tuid/index.tsx","ui/scmbase/tuid/myCTuid.ts","ui/scmbase/index.tsx","ui/scmbase/res/index.ts","ui/scmbase/res/zh/CN.tsx","ui/$unitx/query/getMessage/cGetMessge.tsx","ui/$unitx/cTuid/vTuidMain.tsx","ui/index.tsx","ui/$unitx/index.ts","ui/$unitx/cTuid/myCTuid.ts","ui/$unitx/tuid/index.tsx","ui/$unitx/map/index.ts","ui/$unitx/map/teamPerson/index.tsx","ui/$unitx/query/index.ts","ui/$unitx/query/getMessage/index.ts","ui/$unitx/query/teamPosts.tsx","ui/$unitx/res/index.ts","ui/$unitx/res/zh/CN.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_1__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_11__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_10__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getUnitName","unitId","unitFromName","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","exHash","mif","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_9__","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_3__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","startApp","convertUIKeyToLowercase","obj","toLowerCase","Array","isArray","cApp","CApp","_controllers__WEBPACK_IMPORTED_MODULE_2__","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_4__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","clone","_ui__WEBPACK_IMPORTED_MODULE_2__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","tslib_es6","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_3___default","_titleBar__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","vTuidList_VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickControl_PickControl","Content","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","entity_Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","tuid_TuidMain","Main","tuid_TuidDiv","cacheIds","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_8__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_7__","_resUploader__WEBPACK_IMPORTED_MODULE_4__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_6__","mobx__WEBPACK_IMPORTED_MODULE_3__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_3__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_4__","onRowClick","selectUnitPage","appUnits","tonvaApp","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_2___default","CUq","_uq__WEBPACK_IMPORTED_MODULE_5__","cUqArr","VAppMain","loadAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_6__","userAppUnits","appContent","appPage","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_5__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_4__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidEdit","CTuidList","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","_nav__WEBPACK_IMPORTED_MODULE_1__","consts","uqBasedata","appIcon","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_3__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","idWidget_IdWidget","pickId","clearContextError","required-item","cursor-pointer","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageItemEdit","imageSrc","end","ui_image","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","pull","pulse","rotate","flip","inverse","IconText_IconText","iconClass","textClass","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","userSetProp","Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","FetchErrorView","reApi","errContent","LocalData","Data","homeTabCur","module","exports","meTab","LoadableComponent","lib_default","loader","main_VHome","cHome","faceTabs","VSiteHeader_VSiteHeader","logo_default","alt","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","renderCategoryRootList","CHome_CHome","cFunctionCategory","renderRootList","renderHome","startDebug","titleTitle","textOverflow","whiteSpace","VRootCategory_subStyle","fontSize","VRootCategory_VRootCategory","categoryClick","categoryWapper","openMainPage","renderRootCategory","renderSubCategory","marginRight","renderThirdCategory","categories","VCategory_VCategory","renderChild","childWapper","categoryWaper","funcs","pid","testpage2_TestPage2","cUsqArr","baseInfoNames","sheetNames","pages_NavTuidMainPage","cuq","getCUq","pages_NavSheetPage","navToPage","showOneVPage","CFunctionCategory_CFunctionCategory","CSCMApp_CSCMApp","tonva_react_uq","initTabName","vTuidMain_MyVTuidMain","Button","customer","manufactor","productPackRowContent","ratio","rText","packType","packName","product","scmbase","CN","team","staff","noStaff","noPost","usq","arrNew","arrEdit","packtype","department","goodslocation","supplier","warehouse","purchase","fromUser","fromUnit","subject","getMessage","newMessage","editSumbit","sectionTeam","teamPerson","cGetMessge_VMain","ret0","cTuid_vTuidMain_MyVTuidMain","src_ui","$$$/$unitx","fieldTuidUI","assigned","section","organization","_super","searchOnPost","querySelect","teamPosts","teamOrganization","person","given","sur","gender","bruce/scmbasedata","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.498bb7bd.chunk.js","sourcesContent":["export {left0} from './left0';\r\nexport * from './user';\r\nexport * from './net';\r\nexport * from './ui';\r\nexport * from './uid';\r\nexport {PageItems} from './pageItems';\r\nexport {CacheIds} from './cacheIds';\r\nexport * from './entry';\r\n\r\n","export * from './form';\r\nexport * from './list';\r\nexport * from './dropDownActions';\r\nexport * from './easyDate';\r\nexport * from './propGrid';\r\nexport * from './components';\r\nexport * from './media';\r\nexport * from './listView';\r\nexport * from './searchBox';\r\nexport * from './multiStep';\r\nexport * from './uid';\r\n\r\n//test fork","import * as React from 'react';\r\nimport { Controller, VPage, View } from 'tonva-tools';\r\nimport { Entity, Field, TuidMain } from '../entities';\r\nimport { CUq } from './uq/cUq';\r\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\r\nimport { CQuerySelect } from './query';\r\nimport { FormUI, FieldTuidUI } from './formUI';\r\nimport { entityIcons } from './icons';\r\nimport { ControllerUq } from './ControllerUq';\r\n\r\nexport interface EntityUI {\r\n    form?: FormUI;\r\n}\r\n\r\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\r\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\r\n        super(cUq, res);\r\n        Object.setPrototypeOf(this.x, cUq.x);\r\n        let {name, typeName} = entity;\r\n        this.entity = entity;\r\n        this.ui = ui; // || entityUI.ui;\r\n        this.label = this.res.label || name;\r\n        this.icon = entityIcons[typeName];\r\n    }\r\n    readonly entity: T;\r\n    readonly ui: UI;\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        return true;\r\n    }\r\n\r\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\r\n        let options = this.buildFormOptions(mode);\r\n        let ret = new VForm(options, onSubmit);\r\n        ret.setValues(values);\r\n        return ret;\r\n    }\r\n\r\n    private buildFormOptions(mode?:FormMode):FormOptions {\r\n        let {fields, arrFields} = this.entity;\r\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\r\n        if (this.res !== undefined) {\r\n            none = this.res['none'];\r\n            submitCaption = this.res['submit'];\r\n            arrNewCaption = this.res['arrNew'];\r\n            arrEditCaption = this.res['arrEdit'];\r\n            arrTitleNewButton = this.res['arrTitleNewButton'];\r\n        }\r\n        if (none === undefined) {\r\n            none = this.cUq.res['none'] || 'none';\r\n        }\r\n        if (submitCaption === undefined)\r\n            submitCaption = this.cUq.res['submit'] || 'Submit';\r\n        if (arrNewCaption === undefined)\r\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\r\n        if (arrEditCaption === undefined)\r\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\r\n        if (arrTitleNewButton === undefined)\r\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\r\n        if (mode === undefined) mode = FormMode.new;\r\n        let formUI = this.ui.form;\r\n        let ret:FormOptions = {\r\n            fields: fields,\r\n            arrs: arrFields,\r\n            ui: formUI,\r\n            res: this.res || {},\r\n            inputs: this.buildInputs(formUI),\r\n            none: none,\r\n            submitCaption: submitCaption,\r\n            arrNewCaption: arrNewCaption,\r\n            arrEditCaption: arrEditCaption,\r\n            arrTitleNewButton: arrTitleNewButton,\r\n            mode: mode,\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildInputs(formUI: FormUI):FieldInputs {\r\n        let {fields, arrFields} = this.entity;\r\n        let ret:FieldInputs = {};\r\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\r\n        if (arrFields !== undefined) {\r\n            for (let arr of arrFields) {\r\n                let {name, fields} = arr;\r\n                let items = formUI && formUI.items;\r\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\r\n        if (arr !== undefined) {\r\n            let arrFieldInputs = ret[arr];\r\n            if (arrFieldInputs === undefined) {\r\n                ret[arr] = arrFieldInputs = {};\r\n                ret = arrFieldInputs;\r\n            }\r\n        }\r\n        for (let field of fields) {\r\n            let {name, _tuid} = field;\r\n            if (_tuid === undefined) continue;\r\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\r\n            ret[name] = {\r\n                select: this.buildSelect(field, arr, fieldUI),\r\n                content: this.buildContent(field, arr),\r\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\r\n            };\r\n        }\r\n    }\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\r\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n            let {_tuid, _ownerField} = field;\r\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\r\n            let param:any = undefined;\r\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\r\n            if (fieldUI && fieldUI.autoList === true) {\r\n                console.log('select search set param=empty string');\r\n                param = '';\r\n            }\r\n            let ret = await cTuidSelect.call(param);\r\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\r\n            if (ret === undefined) return undefined;\r\n            let id = cTuidSelect.idFromItem(ret);\r\n            _tuid.useId(id);\r\n            return id;\r\n        };\r\n    }\r\n\r\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\r\n        return;\r\n    }\r\n\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        return this.cUq.cQuerySelect(queryName);\r\n    }\r\n}\r\n\r\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\r\n    protected readonly entity: T;\r\n    protected readonly ui: UI;\r\n    constructor(controller: C) {\r\n        super(controller);\r\n        this.entity = controller.entity;\r\n        this.ui = controller.ui;\r\n    }\r\n\r\n    get label():string {return this.controller.label}\r\n\r\n    //private _form_$: VForm;\r\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\r\n        //if (this._form_$ !== undefined) return this._form_$;\r\n        return this.controller.createForm(onSubmit, values, mode);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, has} from 'mobx';\r\nimport {User, Guest/*, UserInNav*/} from '../user';\r\nimport {Page} from './page';\r\nimport {netToken} from '../net/netToken';\r\nimport FetchErrorView from './fetchErrorView';\r\nimport {FetchError} from '../fetchError';\r\nimport {appUrl, setMeInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\r\nimport {LocalData} from '../local';\r\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\r\nimport { WsBase, wsBridge } from '../net/wsChannel';\r\nimport { resOptions } from './res';\r\nimport { Loading } from './loading';\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../css/va-form.css';\r\nimport '../css/va.css';\r\nimport '../css/animation.css';\r\n\r\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\r\n    'BlackBerry|Windows Phone|'  +\r\n    'Opera Mini|IEMobile|Mobile' , \r\n    'i');\r\nconst isMobile = regEx.test(navigator.userAgent);\r\nexport const mobileHeaderStyle = isMobile? {\r\n    minHeight:  '3em'\r\n} : undefined;\r\n\r\nconst logo = require('../img/logo.svg');\r\nlet logMark: number;\r\nconst logs:string[] = [];\r\n\r\nexport interface Props //extends React.Props<Nav>\r\n{\r\n    //view: JSX.Element | (()=>JSX.Element);\r\n    //start?: ()=>Promise<void>;\r\n    onLogined: ()=>Promise<void>;\r\n    notLogined?: ()=>Promise<void>;\r\n};\r\nlet stackKey = 1;\r\nexport interface StackItem {\r\n    key: number;\r\n    view: JSX.Element;\r\n    ceased: boolean;\r\n    confirmClose?: ()=>Promise<boolean>;\r\n    disposer?: ()=>void;\r\n}\r\nexport interface State {\r\n    stack: StackItem[];\r\n    wait: 0|1|2;\r\n    fetchError: FetchError\r\n}\r\n\r\nexport class NavView extends React.Component<Props, State> {\r\n    private stack: StackItem[];\r\n    private htmlTitle: string;\r\n    private waitCount: number = 0;\r\n    private waitTimeHandler?: NodeJS.Timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.back = this.back.bind(this);\r\n        this.navBack = this.navBack.bind(this);\r\n        this.stack = [];\r\n        this.state = {\r\n            stack: this.stack,\r\n            wait: 0,\r\n            fetchError: undefined\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        window.addEventListener('popstate', this.navBack);\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        nav.set(this);\r\n        /*\r\n        let start = this.props.start;\r\n        if (start !== undefined) {\r\n            await start();\r\n        }\r\n        else {\r\n        */\r\n            await nav.start();\r\n        //}\r\n    }\r\n\r\n    get level(): number {\r\n        return this.stack.length;\r\n    }\r\n\r\n    startWait() {\r\n        if (this.waitCount === 0) {\r\n            this.setState({wait: 1});\r\n            this.waitTimeHandler = global.setTimeout(\r\n                () => {\r\n                    this.waitTimeHandler = undefined;\r\n                    this.setState({wait: 2});\r\n                },\r\n                1000) as NodeJS.Timer;\r\n        }\r\n        ++this.waitCount;\r\n        this.setState({\r\n            fetchError: undefined,\r\n        });\r\n    }\r\n\r\n    endWait() {\r\n        setTimeout(() => {\r\n            /*\r\n            this.setState({\r\n                fetchError: undefined,\r\n            });*/\r\n            --this.waitCount;\r\n            if (this.waitCount === 0) {\r\n                if (this.waitTimeHandler !== undefined) {\r\n                    clearTimeout(this.waitTimeHandler);\r\n                    this.waitTimeHandler = undefined;\r\n                }\r\n                this.setState({wait: 0});\r\n            }\r\n        },100);\r\n    }\r\n\r\n    async onError(fetchError: FetchError)\r\n    {\r\n        let err = fetchError.error;\r\n        if (err !== undefined && err.unauthorized === true) {\r\n            await nav.showLogin(undefined);\r\n            return;\r\n        }\r\n        this.setState({\r\n            fetchError: fetchError,\r\n        });\r\n    }\r\n\r\n    show(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.clear();\r\n        return this.push(view, disposer);\r\n    }\r\n\r\n    push(view: JSX.Element, disposer?: ()=>void): number {\r\n        this.removeCeased();\r\n        if (this.stack.length > 0) {\r\n            window.history.pushState('forward', null, null);\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key,\r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        this.refresh();\r\n        //console.log('push: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    replace(view: JSX.Element, disposer?: ()=>void): number {\r\n        let item:StackItem = undefined;\r\n        let stack = this.stack;\r\n        if (stack.length > 0) {\r\n            item = stack.pop();\r\n            //this.popAndDispose();\r\n        }\r\n        let key = stackKey++;\r\n        this.stack.push({\r\n            key: key, \r\n            view: view, \r\n            ceased: false,\r\n            disposer: disposer\r\n        });\r\n        if (item !== undefined) this.dispose(item.disposer);\r\n        this.refresh();\r\n        //console.log('replace: %s pages', this.stack.length);\r\n        return key;\r\n    }\r\n\r\n    ceaseTop(level:number = 1) {\r\n        let p = this.stack.length - 1;\r\n        for (let i=0; i<level; i++, p--) {\r\n            if (p < 0) break;\r\n            let item = this.stack[p];\r\n            item.ceased = true;\r\n        }\r\n    }\r\n\r\n    pop(level:number = 1) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        //console.log('pop start: %s pages level=%s', len, level);\r\n        if (level <= 0 || len <= 1) return;\r\n        if (len < level) level = len;\r\n        let backLevel = 0;\r\n        for (let i = 0; i < level; i++) {\r\n            if (stack.length === 0) break;\r\n            //stack.pop();\r\n            this.popAndDispose();\r\n            ++backLevel;\r\n        }\r\n        if (backLevel >= len) backLevel--;\r\n        this.refresh();\r\n        if (this.isHistoryBack !== true) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(backLevel);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n        //console.log('pop: %s pages', stack.length);\r\n    }\r\n\r\n    popTo(key: number) {\r\n        if (key === undefined) return;\r\n        if (this.stack.find(v => v.key === key) === undefined) return;\r\n        while (this.stack.length >0) {\r\n            let len = this.stack.length;\r\n            let top = this.stack[len-1];\r\n            if (top.key === key) break;\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    topKey():number {\r\n        let len = this.stack.length;\r\n        if (len === 0) return undefined;\r\n        return this.stack[len-1].key;\r\n    }\r\n\r\n    removeCeased() {\r\n        for (;;) {\r\n            let p=this.stack.length-1;\r\n            if (p < 0) break;\r\n            let top = this.stack[p];\r\n            if (top.ceased === false) break;\r\n            let item = this.stack.pop();\r\n            let {disposer} = item;\r\n            this.dispose(disposer);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    private popAndDispose() {\r\n        this.removeCeased();\r\n        let item = this.stack.pop();\r\n        if (item === undefined) return;\r\n        let {disposer} = item;\r\n        this.dispose(disposer);\r\n        this.removeCeased();\r\n        return item;\r\n    }\r\n\r\n    private dispose(disposer:()=>void) {\r\n        if (disposer === undefined) return;\r\n        let item = this.stack.find(v => v.disposer === disposer);\r\n        if (item === undefined) disposer();\r\n    }\r\n\r\n    clear() {\r\n        let len = this.stack.length;\r\n        while (this.stack.length > 0) this.popAndDispose();\r\n        //this.refresh();\r\n        if (len > 1) {\r\n            //window.removeEventListener('popstate', this.navBack);\r\n            //window.history.back(len-1);\r\n            //window.addEventListener('popstate', this.navBack);\r\n        }\r\n    }\r\n\r\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        let top = stack[len-1];\r\n        top.confirmClose = confirmClose;\r\n    }\r\n\r\n    private isHistoryBack:boolean = false;\r\n    navBack() {\r\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\r\n        this.isHistoryBack = true;\r\n        this.back(true);\r\n        this.isHistoryBack = false;\r\n    }\r\n\r\n    async back(confirm:boolean = true) {\r\n        let stack = this.stack;\r\n        let len = stack.length;\r\n        if (len === 0) return;\r\n        if (len === 1) {\r\n            if (self != window.top) {\r\n                window.top.postMessage({type:'pop-app'}, '*');\r\n            }\r\n            return;\r\n        }\r\n        let top = stack[len-1];\r\n        if (confirm===true && top.confirmClose) {\r\n            if (await top.confirmClose()===true) this.pop();\r\n        }\r\n        else {\r\n            this.pop();\r\n        }\r\n    }\r\n\r\n    confirmBox(message?:string): boolean {\r\n        return window.confirm(message);\r\n    }\r\n    clearError = () => {\r\n        this.setState({fetchError: undefined});\r\n    }\r\n    render() {\r\n        const {wait, fetchError} = this.state;\r\n        let stack = this.state.stack;\r\n        let top = stack.length - 1;\r\n        let elWait = null, elError = null;\r\n        switch (wait) {\r\n            case 1:\r\n                elWait = <li className=\"va-wait va-wait1\">\r\n                </li>;\r\n                break;\r\n            case 2:\r\n                elWait = <li className=\"va-wait va-wait2\">\r\n                    <Loading />\r\n                </li>;\r\n                break;\r\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\r\n                //<span className=\"sr-only\">Loading...</span>\r\n        }\r\n        if (fetchError)\r\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\r\n        return (\r\n        <ul className='va'>\r\n            {\r\n                stack.map((item, index) => {\r\n                    let {key, view} = item;\r\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\r\n                        {view}\r\n                    </li>\r\n                })\r\n            }\r\n            {elWait}\r\n            {elError}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    private refresh() {\r\n        // this.setState({flag: !this.state.flag});\r\n        this.setState({stack: this.stack });\r\n        // this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class Nav {\r\n    private nav:NavView;\r\n    private ws: WsBase;\r\n    private wsHost: string;\r\n    private local: LocalData = new LocalData();\r\n    @observable user: User/*InNav*/ = undefined;\r\n    language: string;\r\n    culture: string;\r\n    resUrl: string;\r\n\r\n    constructor() {\r\n        let {lang, district} = resOptions;\r\n        this.language = lang;\r\n        this.culture = district;\r\n    }\r\n\r\n    get guest(): number {\r\n        let guest = this.local.guest;\r\n        if (guest === undefined) return 0;\r\n        let g = guest.get();\r\n        if (g === undefined) return 0;\r\n        return g.guest;\r\n    }\r\n\r\n    set(nav:NavView) {\r\n        //this.logo = logo;\r\n        this.nav = nav;\r\n    }\r\n\r\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\r\n        if (this.ws === undefined) return;\r\n        return this.ws.onWsReceiveAny(handler);\r\n    }\r\n\r\n    unregisterReceiveHandler(handlerId:number) {\r\n        if (this.ws === undefined) return;\r\n        if (handlerId === undefined) return;\r\n        this.ws.endWsReceive(handlerId);\r\n    }\r\n\r\n    async onReceive(msg:any) {\r\n        if (this.ws === undefined) return;\r\n        await this.ws.receive(msg);\r\n    }\r\n\r\n    private async getUnitName() {\r\n        try {\r\n            let unitRes = await fetch('unit.json', {});\r\n            //if (unitRes)\r\n            let res = await unitRes.json();\r\n            return res.unit;\r\n        }\r\n        catch (err) {\r\n            this.local.unit.clear();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async loadUnit() {\r\n        let unitName:string;\r\n        let unit = this.local.unit.get();\r\n        if (unit !== undefined) {\r\n            if (isDevelopment !== true) return unit.id;\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n            if (unit.name === unitName) return unit.id;\r\n        }\r\n        else {\r\n            unitName = await this.getUnitName();\r\n            if (unitName === undefined) return;\r\n        }\r\n        let unitId = await guestApi.unitFromName(unitName);\r\n        if (unitId !== undefined) {\r\n            this.local.unit.set({id: unitId, name: unitName});\r\n        }\r\n        return unitId;\r\n    }\r\n\r\n    hashParam: string;\r\n    private centerHost: string;\r\n    async start() {\r\n        try {\r\n            let hash = document.location.hash;\r\n            if (hash !== undefined && hash.length > 0) {\r\n                let pos = getExHashPos();\r\n                if (pos < 0) pos = undefined;\r\n                this.hashParam = hash.substring(1, pos);\r\n            }\r\n            nav.clear();\r\n            this.startWait();\r\n            await host.start();\r\n            let {url, ws, resHost} = host;\r\n            this.centerHost = url;\r\n            this.resUrl = 'http://' + resHost + '/res/';\r\n            this.wsHost = ws;\r\n            setCenterUrl(url);\r\n            \r\n            let unit = await this.loadUnit();\r\n            meInFrame.unit = unit;\r\n\r\n            let guest:Guest = this.local.guest.get();\r\n            if (guest === undefined) {\r\n                guest = await guestApi.guest();\r\n            }\r\n            nav.setGuest(guest);\r\n\r\n            let exHash = getExHash();\r\n            let mif = setMeInFrame(exHash);\r\n            if (exHash !== undefined && window !== window.parent) {\r\n                if (mif !== undefined) {\r\n                    this.ws = wsBridge;\r\n                    console.log('this.ws = wsBridge in sub frame');\r\n                    //nav.user = {id:0} as User;\r\n                    if (self !== window.parent) {\r\n                        window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\r\n                    }\r\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\r\n                    //await this.showAppView();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let user: User = this.local.user.get();\r\n            if (user === undefined) {\r\n                let {notLogined} = this.nav.props;\r\n                if (notLogined !== undefined) {\r\n                    await notLogined();\r\n                }\r\n                else {\r\n                    await nav.showLogin(undefined);\r\n                }\r\n                return;\r\n            }\r\n\r\n            await nav.logined(user);\r\n        }\r\n        catch (err) {\r\n        }\r\n        finally {\r\n            this.endWait();\r\n        }\r\n    }\r\n\r\n    async showAppView() {\r\n        let {onLogined} = this.nav.props;\r\n        if (onLogined === undefined) {\r\n            nav.push(<div>NavView has no prop onLogined</div>);\r\n            return;\r\n        }\r\n        nav.clear();\r\n        await onLogined();\r\n        console.log('logined: AppView shown');\r\n    }\r\n\r\n    setGuest(guest: Guest) {\r\n        this.local.guest.set(guest);\r\n        netToken.set(0, guest.token);\r\n    }\r\n\r\n    saveLocalUser() {\r\n        this.local.user.set(this.user);\r\n    }\r\n\r\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\r\n        logoutApis();\r\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\r\n        ws.connect();\r\n\r\n        console.log(\"logined: %s\", JSON.stringify(user));\r\n        this.user = user;\r\n        this.saveLocalUser();\r\n        netToken.set(user.id, user.token);\r\n        if (callback !== undefined) //this.loginCallbacks.has)\r\n            callback(user);\r\n            //this.loginCallbacks.call(user);\r\n        else {\r\n            await this.showAppView();\r\n        }\r\n    }\r\n\r\n    async showLogin(callback?: (user:User)=>Promise<void>, top?:any, withBack?:boolean) {\r\n        let lv = await import('../entry/login');\r\n         let loginView = <lv.default withBack={withBack} callback={callback} top={top} />;\r\n        if (withBack !== true) {\r\n            this.nav.clear();\r\n            this.pop();\r\n        }\r\n        this.nav.push(loginView);\r\n    }\r\n\r\n    async showLogout(callback?: ()=>Promise<void>) {\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n    }\r\n\r\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\r\n        this.local.logoutClear();\r\n        this.user = undefined; //{} as User;\r\n        logoutApis();\r\n        let guest = this.local.guest.get();\r\n        setCenterToken(0, guest && guest.token);\r\n        this.ws = undefined;\r\n        /*\r\n        if (this.loginCallbacks.has)\r\n            this.logoutCallbacks.call();\r\n        else {\r\n            if (notShowLogin === true) return;\r\n        }\r\n        await nav.start();\r\n        */\r\n        if (callback === undefined)\r\n            await nav.start();\r\n        else\r\n            await callback();\r\n    }\r\n\r\n    async changePassword() {\r\n        let cp = await import('../entry/changePassword');\r\n        nav.push(<cp.ChangePasswordPage />);\r\n    }\r\n\r\n    get level(): number {\r\n        return this.nav.level;\r\n    }\r\n    startWait() {\r\n        this.nav.startWait();\r\n    }\r\n    endWait() {\r\n        this.nav.endWait();\r\n    }\r\n    async onError(error: FetchError) {\r\n        await this.nav.onError(error);\r\n    }\r\n    show (view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.show(view, disposer);\r\n    }\r\n    push(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.push(view, disposer);\r\n    }\r\n    replace(view: JSX.Element, disposer?: ()=>void): void {\r\n        this.nav.replace(view, disposer);\r\n    }\r\n    pop(level:number = 1) {\r\n        this.nav.pop(level);\r\n    }\r\n    topKey():number {\r\n        return this.nav.topKey();\r\n    }\r\n    popTo(key:number) {\r\n        this.nav.popTo(key);\r\n    }\r\n    clear() {\r\n        this.nav.clear();\r\n    }\r\n    navBack() {\r\n        this.nav.navBack();\r\n    }\r\n    ceaseTop(level?:number) {\r\n        this.nav.ceaseTop(level);\r\n    }\r\n    removeCeased() {\r\n        this.nav.removeCeased();\r\n    }\r\n    async back(confirm:boolean = true) {\r\n        await this.nav.back(confirm);\r\n    }\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.nav.regConfirmClose(confirmClose);\r\n    }\r\n    confirmBox(message?:string): boolean {\r\n        return this.nav.confirmBox(message);\r\n    }\r\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\r\n            let uh = sheetId === undefined?\r\n                    appUrl(url, unitId) :\r\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\r\n            console.log('navToApp: %s', JSON.stringify(uh));\r\n            nav.push(<article className='app-container'>\r\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\r\n                    <i className=\"fa fa-arrow-left\" />\r\n                </span>\r\n                <iframe src={uh.url} />\r\n            </article>, \r\n            ()=> {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    navToSite(url: string) {\r\n        // show in new window\r\n        window.open(url);\r\n    }\r\n\r\n    get logs() {return logs};\r\n    log(msg:string) {\r\n        logs.push(msg);\r\n    }\r\n    logMark() {\r\n        let date = new Date();\r\n        logMark = date.getTime();\r\n        logs.push('log-mark: ' + date.toTimeString());\r\n    }\r\n    logStep(step:string) {\r\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\r\n    }\r\n}\r\nexport const nav: Nav = new Nav();\r\n","import * as React from 'react';\r\nimport { CApp, AppUI } from './controllers';\r\nexport * from './entities';\r\nexport * from './controllers';\r\nexport * from './centerApi';\r\nexport * from './tools';\r\n\r\nfunction convertUIKeyToLowercase(obj: any) {\r\n    for (let i in obj) {\r\n        let v = obj[i];\r\n        obj[i.toLowerCase()] = v;\r\n        if (typeof v !== 'object') continue;\r\n        if (React.isValidElement(v)) continue;\r\n        if (Array.isArray(v) !== true) {\r\n            convertUIKeyToLowercase(v);\r\n            continue;\r\n        }\r\n        for (let i of (v as any[])) {\r\n            convertUIKeyToLowercase(i);\r\n        }\r\n    }\r\n}\r\n\r\nexport async function startApp(ui: AppUI) {\r\n    convertUIKeyToLowercase(ui);\r\n    let cApp = new (ui && ui.CApp || CApp)(ui);\r\n    await cApp.start();\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport type TypeViewModel = typeof ViewModel;\r\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\r\nexport type TypeContent = React.StatelessComponent<any>;\r\n\r\nexport abstract class ViewModel {\r\n    protected abstract get view(): TypeView;\r\n    render(className?:string|string[]):JSX.Element {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view, {vm: this, className:className});\r\n    }\r\n}\r\n\r\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\r\nexport const JSONContent = observer(PureJSONContent);\r\nexport const RowContent = \r\n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\r\n;\r\n","import { decodeGuestToken } from '../user';\r\nimport { CenterApi } from './uqApi';\r\n\r\nexport class GuestApi extends CenterApi {\r\n    async guest(): Promise<any> {\r\n        //let guest = nav.local.guest.get();\r\n        let ret = await this.get('', {});\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeGuestToken(ret);\r\n            case 'object':\r\n                let guest = decodeGuestToken(ret.token);\r\n                return guest;\r\n        }\r\n    }\r\n\r\n    async unitFromName(unitName:string): Promise<number> {\r\n        let ret = await this.get(unitName);\r\n        return ret && ret.unit;\r\n    }\r\n}\r\n\r\nexport const guestApi = new GuestApi('tv/guest/', undefined);\r\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\r\nexport * from './apiBase';\r\nexport * from './guestApi';\r\nexport * from './uqApi';\r\nexport {meInFrame, isBridged, getExHash} from './appBridge';\r\nexport * from './host';\r\nexport {httpGet} from './httpChannel';\r\n","function replacer(key:string, value:any) {\r\n    let first = key.substr(0, 1);\r\n    switch (first) {\r\n        default: return value;\r\n        case '$':\r\n        case '_': return;\r\n    }\r\n}\r\n\r\nexport function jsonStringify(value:any) {\r\n    return JSON.stringify(value, replacer, ' ');\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BoxId, Tuid } from \"../entities\";\r\nimport { PureJSONContent } from '../controllers';\r\n\r\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\r\n\r\ninterface Props {\r\n    tuidValue: number|BoxId, \r\n    ui?: TvTemplet,\r\n    x?: any,\r\n    nullUI?: ()=>JSX.Element\r\n}\r\n\r\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\r\n    if (typeof bi === 'number') return <>{bi}</>;\r\n    let {id, _$tuid, _$com} = bi as BoxId;\r\n    let t:Tuid = _$tuid;\r\n    if (t === undefined) {\r\n        if (ui !== undefined) return ui(bi, x);\r\n        return PureJSONContent(bi, x);\r\n    }\r\n    let com = ui || _$com;\r\n    if (com === undefined) {\r\n        com = bi._$com = t.getTuidContent();\r\n    }\r\n    let val = t.valueFromId(id);\r\n    if (typeof val === 'number') val = {id: val};\r\n    if (ui !== undefined) {\r\n        let ret = ui(val, x);\r\n        if (ret !== undefined) return ret;\r\n        return <>{id}</>;\r\n    }\r\n    return React.createElement(com, val);\r\n}\r\n\r\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\r\n    let ttv = typeof tuidValue;\r\n    switch (ttv) {\r\n        default:\r\n            if (ui === undefined)\r\n                return <>{ttv}-{tuidValue}</>;\r\n            else {\r\n                let ret = ui(tuidValue, x);\r\n                if (ret !== undefined) return ret;\r\n                return <>{tuidValue}</>;\r\n            }\r\n        case 'undefined':\r\n            break;\r\n        case 'object':\r\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\r\n            break;\r\n        case 'number':\r\n            return <>id...{tuidValue}</>;\r\n    }       \r\n    if (nullUI === undefined) return <>null</>;\r\n    return nullUI();\r\n});\r\n\r\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\r\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\r\n};\r\n","export * from './jsonStringify';\r\nexport * from './tv';\r\n","export * from './nav';\r\nexport * from './titleBar';\r\nexport * from './page';\r\nexport * from './VM';\r\nexport * from './schema';\r\nexport * from './form';\r\nexport * from './edit';\r\nexport * from './res';\r\nexport * from './tabs';\r\nexport * from './loading';\r\nexport * from './image';\r\nexport * from './resUploader';","import _ from 'lodash';\r\nimport {nav} from '../ui';\r\nimport {uid} from '../uid';\r\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\r\nimport {setSubAppWindow} from './wsChannel';\r\nimport { host } from './host';\r\n\r\nexport interface UqToken {\r\n    name: string;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\ninterface UqTokenAction extends UqToken {\r\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\r\n    reject: (reason?: any) => void;\r\n}\r\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\r\nexport function logoutUqTokens() {\r\n    for (let i in uqTokens) uqTokens[i] = undefined;\r\n}\r\n\r\nexport interface AppInFrame {\r\n    hash: string;\r\n    unit: number;       // unit id\r\n    page?: string;\r\n    param?: string[];\r\n}\r\nconst appsInFrame:{[key:string]:AppInFrame} = {};\r\n\r\nclass AppInFrameClass implements AppInFrame {\r\n    hash: string;\r\n    private _unit: number;\r\n    get unit(): number {return this._unit;}       // unit id\r\n    set unit(val:number) { this._unit=val;}\r\n    page?: string;\r\n    param?: string[];\r\n}\r\n\r\nexport let meInFrame:AppInFrame = new AppInFrameClass();\r\n/* {\r\n    hash: undefined,\r\n    get unit():number {return } undefined, //debugUnitId,\r\n    page: undefined;\r\n    param: undefined,\r\n}*/\r\n\r\nexport function isBridged():boolean {\r\n    return self !== window.parent;\r\n}\r\n\r\nwindow.addEventListener('message', async function(evt) {\r\n    var message = evt.data;\r\n    switch (message.type) {\r\n        case 'sub-frame-started':\r\n            subFrameStarted(evt);\r\n            break;\r\n        case 'ws':\r\n            //wsBridge.receive(message.msg);\r\n            await nav.onReceive(message.msg);\r\n            break;\r\n        case 'init-sub-win':\r\n            await initSubWin(message);\r\n            break;\r\n        case 'pop-app':\r\n            nav.navBack();\r\n            break;\r\n        case 'center-api':\r\n            await callCenterApiFromMessage(evt.source as Window, message);\r\n            break;\r\n        case 'center-api-return':\r\n            bridgeCenterApiReturn(message);\r\n            break;\r\n        case 'app-api':\r\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\r\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\r\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\r\n            (evt.source as Window).postMessage({\r\n                type: 'app-api-return', \r\n                apiName: message.apiName,\r\n                url: ret.url,\r\n                urlDebug: ret.urlDebug,\r\n                token: ret.token} as any, \"*\");\r\n            break;\r\n        case 'app-api-return':\r\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\r\n            console.log('await onAppApiReturn(message);');\r\n            await onAppApiReturn(message);\r\n            break;\r\n        default:\r\n            this.console.log('message: %s', JSON.stringify(message));\r\n            break;\r\n    }\r\n});\r\n\r\nfunction subFrameStarted(evt:any) {\r\n    var message = evt.data;\r\n    let subWin = evt.source as Window;\r\n    setSubAppWindow(subWin);\r\n    hideFrameBack(message.hash);\r\n    let msg:any = _.clone(nav.user);\r\n    msg.type = 'init-sub-win';\r\n    subWin.postMessage(msg, '*');\r\n}\r\nfunction hideFrameBack(hash:string) {\r\n    let el = document.getElementById(hash);\r\n    if (el !== undefined) el.hidden = true;\r\n}\r\nasync function initSubWin(message:any) {\r\n    console.log('initSubWin: set nav.user', message);\r\n    let user = nav.user = message; // message.user;\r\n    setCenterToken(user.id, user.token);\r\n    await nav.showAppView();\r\n}\r\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\r\n    let appInFrame = appsInFrame[hash];\r\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\r\n    let {unit} = appInFrame;\r\n    let parts = apiName.split('/');\r\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\r\n    if (ret === undefined) {\r\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\r\n        throw 'api not found';\r\n    }\r\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\r\n}\r\n\r\nasync function onAppApiReturn(message:any) {\r\n    let {apiName, url, urlDebug, token} = message;\r\n    let action = uqTokens[apiName];\r\n    if (action === undefined) {\r\n        throw 'error app api return';\r\n        //return;\r\n    }\r\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\r\n    action.url = realUrl;\r\n    action.token = token;\r\n    action.resolve(action);\r\n}\r\n\r\nexport function setMeInFrame(appHash: string):AppInFrame {\r\n    if (appHash) {\r\n        let parts = appHash.split('-');\r\n        let len = parts.length;\r\n        if (len > 0) {\r\n            let p = 1;\r\n            meInFrame.hash = parts[p++];\r\n            if (len>0) meInFrame.unit = Number(parts[p++]);\r\n            if (len>1) meInFrame.page = parts[p++];\r\n            if (len>2) meInFrame.param = parts.slice(p++);\r\n        }\r\n    }\r\n    return meInFrame;\r\n}\r\n\r\nexport function getExHashPos():number {\r\n    let hash = document.location.hash;\r\n    if (hash !== undefined && hash.length > 0) {\r\n        let pos = hash.lastIndexOf('#tv-');\r\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\r\n        return pos;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function getExHash():string {\r\n    let pos = getExHashPos();\r\n    if (pos < 0) return undefined;\r\n    return document.location.hash.substring(pos);\r\n}\r\n\r\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\r\n    let u:string;\r\n    for (;;) {\r\n        u = uid();\r\n        let a = appsInFrame[u];\r\n        if (a === undefined) {\r\n            appsInFrame[u] = {hash:u, unit:unitId};\r\n            break;\r\n        }\r\n    }\r\n    url += '#tv-' + u + '-' + unitId;\r\n    if (page !== undefined) {\r\n        url += '-' + page;\r\n        if (param !== undefined) {\r\n            for (let i=0; i<param.length; i++) {\r\n                url += '-' + param[i];\r\n            }\r\n        }\r\n    }\r\n    return {url: url, hash: u};\r\n}\r\n\r\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\r\n    let uqToken = uqTokens[uq];\r\n    if (uqToken !== undefined) return uqToken;\r\n    if (!isBridged()) {\r\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\r\n        if (uqToken === undefined) {\r\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\r\n            throw err;\r\n        }\r\n        if (uqToken.token === undefined) uqToken.token = centerToken;\r\n        let {url, urlDebug} = uqToken;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        console.log('realUrl: %s', realUrl);\r\n        uqToken.url = realUrl;\r\n        uqTokens[uq] = uqToken;\r\n        return uqToken;\r\n    }\r\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\r\n    uqToken = {\r\n        name: uq,\r\n        url: undefined,\r\n        urlDebug: undefined,\r\n        token: undefined,\r\n        resolve: undefined,\r\n        reject: undefined,\r\n    };\r\n    uqTokens[uq] = uqToken;\r\n    return new Promise<UqToken>((resolve, reject) => {\r\n        uqToken.resolve = async (at) => {\r\n            let a = await at;\r\n            console.log('return from parent window: %s', JSON.stringify(a));\r\n            uqToken.url = a.url;\r\n            uqToken.urlDebug = a.urlDebug;\r\n            uqToken.token = a.token;\r\n            resolve(uqToken);\r\n        }\r\n        uqToken.reject = reject;\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'app-api',\r\n            apiName: uq,\r\n            hash: meInFrame.hash,\r\n        }, \"*\");\r\n    });\r\n}\r\n\r\ninterface BridgeCenterApi {\r\n    id: string;\r\n    resolve: (value?:any)=>any;\r\n    reject: (reason?:any)=>void;\r\n}\r\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\r\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\r\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\r\n    return await new Promise<any>(async (resolve, reject) => {\r\n        let callId:string;\r\n        for (;;) {\r\n            callId = uid();\r\n            let bca = brideCenterApis[callId];\r\n            if (bca === undefined) {\r\n                brideCenterApis[callId] = {\r\n                    id: callId,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        (window.opener || window.parent).postMessage({\r\n            type: 'center-api',\r\n            callId: callId,\r\n            url: url,\r\n            method: method,\r\n            body: body\r\n        }, '*');\r\n    });\r\n}\r\n\r\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\r\n    let {callId, url, method, body} = message;\r\n    let result = await callCenterapi.directCall(url, method, body);\r\n    from.postMessage({\r\n        type: 'center-api-return',\r\n        callId: callId,\r\n        result: result,\r\n    }, '*');\r\n}\r\n\r\nfunction bridgeCenterApiReturn(message:any) {\r\n    let {callId, result} = message;\r\n    let bca = brideCenterApis[callId];\r\n    if (bca === undefined) return;\r\n    brideCenterApis[callId] = undefined;\r\n    bca.resolve(result);\r\n}\r\n","import {nav} from '../ui/nav';\r\nimport {FetchError} from '../fetchError';\r\n\r\nexport interface HttpChannelUI {\r\n    startWait():void;\r\n    endWait():void;\r\n    showError(error:FetchError):Promise<void>;\r\n}\r\n\r\nexport class HttpChannelNavUI implements HttpChannelUI {\r\n    startWait() {\r\n        nav.startWait();\r\n    }\r\n    endWait() {\r\n        nav.endWait();\r\n    }\r\n    async showError(error:FetchError):Promise<void> {\r\n        nav.endWait();\r\n        /*\r\n        if (error.name === 'SyntaxError') {\r\n            error = {\r\n                name: error.name,\r\n                message: error.message,\r\n            }\r\n        }*/\r\n        await nav.onError(error);\r\n    }\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {HttpChannel} from './httpChannel';\r\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\r\nimport {appUq, meInFrame, logoutUqTokens} from './appBridge';\r\nimport {ApiBase} from './apiBase';\r\nimport { host } from './host';\r\nimport { nav } from '../ui';\r\n\r\nlet channelUIs:{[name:string]: HttpChannel} = {};\r\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\r\n\r\nexport function logoutApis() {\r\n    channelUIs = {};\r\n    channelNoUIs = {};\r\n    logoutUnitxApis();\r\n    logoutUqTokens();\r\n}\r\n\r\ninterface UqLocal {\r\n    value: any;\r\n    tick?: number;\r\n    isNet?: boolean;\r\n}\r\ninterface UqLocals {\r\n    user: number;\r\n    unit: number;\r\n    uqs: {[uq:string]: UqLocal};\r\n}\r\n\r\nconst uqLocalEntities = 'uqLocalEntities';\r\nclass CacheUqLocals {\r\n    private local:UqLocals;\r\n\r\n    async loadAccess(uqApi: UqApi):Promise<any> {\r\n        try {\r\n            let {uqOwner, uqName} = uqApi;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqLocalEntities);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {user, uqs} = this.local;\r\n                if (user !== loginedUserId || uqs === undefined) {\r\n                    this.local = undefined;\r\n                }\r\n                else {\r\n                    for (let i in uqs) {\r\n                        let ul = uqs[i];\r\n                        ul.isNet = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: undefined,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let ret: any;\r\n            let un = uqOwner+'/'+uqName;\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {value} = uq;\r\n                ret = value;\r\n            }\r\n            if (ret === undefined) {\r\n                ret = await uqApi.__loadAccess();\r\n                this.saveLocal(un, ret);\r\n            }\r\n            return _.cloneDeep(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqLocalEntities);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private saveLocal(uqName:string, accessValue: any) {\r\n        this.local.uqs[uqName] = {\r\n            value: accessValue,\r\n            isNet: true,\r\n        }\r\n        let str = JSON.stringify(this.local);\r\n        localStorage.setItem(uqLocalEntities, str);\r\n    }\r\n\r\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\r\n        let {uqOwner, uqName} = uqApi;\r\n        let un = uqOwner+'/'+uqName;\r\n        let uq = this.local.uqs[un];\r\n        if (uq === undefined) return false;\r\n        let {isNet, value} = uq;\r\n        if (isNet === true) return true;\r\n        let ret = await uqApi.__loadAccess();\r\n        let isMatch = _.isMatch(value, ret);\r\n        if (isMatch === false) {\r\n            this.saveLocal(un, ret);\r\n            return false;\r\n        }\r\n        uq.isNet = true;\r\n        return true;\r\n    }\r\n}\r\n\r\nconst localUqs = new CacheUqLocals;\r\nexport class UqApi extends ApiBase {\r\n    private access:string[];\r\n    uqOwner: string;\r\n    uqName: string;\r\n    uq: string;\r\n\r\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\r\n        super(basePath, showWaiting);\r\n        if (uqName) {\r\n            this.uqOwner = uqOwner;\r\n            this.uqName = uqName;\r\n            this.uq = uqOwner + '/' + uqName;\r\n        }\r\n        this.access = access;\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channels: {[name:string]: HttpChannel};\r\n        let channelUI: HttpChannelNavUI;\r\n        if (this.showWaiting === true || this.showWaiting === undefined) {\r\n            channels = channelUIs;\r\n            channelUI = new HttpChannelNavUI();\r\n        }\r\n        else {\r\n            channels = channelNoUIs;\r\n        }\r\n        let channel = channels[this.uq];\r\n        if (channel !== undefined) return channel;\r\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\r\n        this.token = uqToken.token;\r\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\r\n        return channels[this.uq] = channel;\r\n    }\r\n\r\n\r\n    async update():Promise<string> {\r\n        return await this.get('update');\r\n    }\r\n\r\n    async __loadAccess():Promise<any> {\r\n        let acc = this.access === undefined?\r\n            '' :\r\n            this.access.join('|');\r\n        let ret = await this.get('access', {acc:acc});\r\n        return ret;\r\n    }\r\n\r\n    async loadAccess():Promise<any> {\r\n        return await localUqs.loadAccess(this);\r\n    }\r\n\r\n    async loadEntities():Promise<any> {\r\n        return await this.get('entities');\r\n    }\r\n\r\n    async checkAccess():Promise<boolean> {\r\n        return await localUqs.checkAccess(this);\r\n    }\r\n\r\n    async schema(name:string):Promise<any> {\r\n        return await this.get('schema/' + name);\r\n    }\r\n\r\n    async schemas(names:string[]):Promise<any[]> {\r\n        return await this.post('schema', names);\r\n    }\r\n\r\n    async tuidGet(name:string, id:number):Promise<any> {\r\n        return await this.get('tuid/' + name + '/' + id);\r\n    }\r\n\r\n    async tuidGetAll(name:string):Promise<any[]> {\r\n        return await this.get('tuid-all/' + name + '/');\r\n    }\r\n\r\n    async tuidSave(name:string, params):Promise<any> {\r\n        return await this.post('tuid/' + name, params);\r\n    }\r\n\r\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret = await this.post('tuids/' + name, {\r\n            arr: arr,\r\n            owner: owner,\r\n            key: key,\r\n            pageStart: pageStart,\r\n            pageSize: pageSize\r\n        });\r\n        return ret;\r\n    }\r\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\r\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\r\n    }\r\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\r\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\r\n    }\r\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\r\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\r\n    }\r\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\r\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\r\n            id: id,\r\n            $order: order\r\n        });\r\n    }\r\n\r\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\r\n        try {\r\n            let url = 'tuidids/' + name + '/';\r\n            if (arr !== undefined) url += arr;\r\n            else url += '$';\r\n            let ret = await this.post(url, ids);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\r\n        try {\r\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\r\n            let ret = await this.get(url);\r\n            return ret;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async sheetSave(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name, data);\r\n    }\r\n\r\n    async sheetAction(name:string, data:object) {\r\n        return await this.put('sheet/' + name, data);\r\n    }\r\n\r\n    async stateSheets(name:string, data:object) {\r\n        return await this.post('sheet/' + name + '/states', data);\r\n    }\r\n\r\n    async stateSheetCount(name:string):Promise<any> {\r\n        return await this.get('sheet/' + name + '/statecount');\r\n    }\r\n\r\n    async getSheet(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/get/' + id);\r\n    }\r\n\r\n    async sheetArchives(name:string, data:object):Promise<any> {\r\n        return await this.post('sheet/' + name + '/archives', data);\r\n    }\r\n\r\n    async sheetArchive(name:string, id:number):Promise<any> {\r\n        return await this.get('sheet/' + name + '/archive/' + id);\r\n    }\r\n\r\n    async action(name:string, data:object):Promise<any> {\r\n        return await this.post('action/' + name, data);\r\n    }\r\n\r\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p:any;\r\n        switch (typeof params) {\r\n            case 'undefined': p = {key: ''}; break;\r\n            default: p = _.clone(params); break;\r\n        }\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        return await this.post('query-page/' + name, p);\r\n    }\r\n\r\n    async query(name:string, params:any):Promise<any> {\r\n        let ret = await this.post('query/' + name, params);\r\n        return ret;\r\n    }\r\n/*\r\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n\r\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\r\n        let p = _.clone(params);\r\n        p['$pageStart'] = pageStart;\r\n        p['$pageSize'] = pageSize;\r\n        let ret = await this.post('history/' + name, p);\r\n        return ret;\r\n    }\r\n*/\r\n    async user():Promise<any> {\r\n        return await this.get('user');\r\n    }\r\n}\r\n\r\nlet channels:{[unitId:number]: HttpChannel} = {};\r\n\r\nexport function logoutUnitxApis() {\r\n    channels = {};\r\n}\r\n\r\nexport class UnitxApi extends UqApi {\r\n    private unitId:number;\r\n    constructor(unitId:number) {\r\n        super('tv/', undefined, undefined, undefined, true);\r\n        this.unitId = unitId;\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        let channel = channels[this.unitId];\r\n        if (channel !== undefined) return channel;\r\n        return channels[this.unitId] = await this.buildChannel();\r\n    }\r\n\r\n    private async buildChannel():Promise<HttpChannel> {\r\n        let channelUI = new HttpChannelNavUI();\r\n        let centerAppApi = new CenterAppApi('tv/', undefined);\r\n        let ret = await centerAppApi.unitxUq(this.unitId);\r\n        let {token, url, urlDebug} = ret;\r\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\r\n        this.token = token;\r\n        return new HttpChannel(false, realUrl, token, channelUI);\r\n    }\r\n}\r\n\r\nlet centerHost:string;\r\n\r\nexport function setCenterUrl(url:string) {\r\n    console.log('setCenterUrl %s', url);\r\n    centerHost = url;\r\n    centerToken = undefined;\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nexport let centerToken:string|undefined = undefined;\r\n\r\nlet loginedUserId:number = 0;\r\nexport function setCenterToken(userId:number, t?:string) {\r\n    loginedUserId = userId;\r\n    centerToken = t;\r\n    console.log('setCenterToken %s', t);\r\n    centerChannel = undefined;\r\n    centerChannelUI = undefined;\r\n}\r\n\r\nlet centerChannelUI:HttpChannel;\r\nlet centerChannel:HttpChannel;\r\nfunction getCenterChannelUI():HttpChannel {\r\n    if (centerChannelUI !== undefined) return centerChannelUI;\r\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\r\n}\r\nfunction getCenterChannel():HttpChannel {\r\n    if (centerChannel !== undefined) return centerChannel;\r\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\r\n}\r\n\r\nexport abstract class CenterApi extends ApiBase {\r\n    constructor(path: string, showWaiting?: boolean) {\r\n        super(path, showWaiting);\r\n    }\r\n\r\n    protected async getHttpChannel(): Promise<HttpChannel> {\r\n        return (this.showWaiting === true || this.showWaiting === undefined)?\r\n            getCenterChannelUI():\r\n            getCenterChannel();\r\n    }\r\n}\r\n\r\nconst uqTokens = 'uqTokens';\r\nexport class UqTokenApi extends CenterApi {\r\n    private local: UqLocals;\r\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\r\n        try {\r\n            let {unit:unitParam, uqOwner, uqName} = params;\r\n            if (this.local === undefined) {\r\n                let ls = localStorage.getItem(uqTokens);\r\n                if (ls !== null) {\r\n                    this.local = JSON.parse(ls);\r\n                }\r\n            }\r\n            if (this.local !== undefined) {\r\n                let {unit, user} = this.local;\r\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\r\n            }\r\n            if (this.local === undefined) {\r\n                this.local = {\r\n                    user: loginedUserId,\r\n                    unit: params.unit,\r\n                    uqs: {}\r\n                };\r\n            }\r\n\r\n            let un = uqOwner+'/'+uqName;\r\n            let nowTick = new Date().getTime();\r\n            let uq = this.local.uqs[un];\r\n            if (uq !== undefined) {\r\n                let {tick, value} = uq;\r\n                if ((nowTick - tick) < 24*3600*1000) {\r\n                    return _.clone(value);\r\n                }\r\n            }\r\n            let ret = await this.get('app-uq', params);\r\n            this.local.uqs[un] = {\r\n                tick: nowTick,\r\n                value: ret,\r\n            }\r\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\r\n            return _.clone(ret);\r\n        }\r\n        catch (err) {\r\n            this.local = undefined;\r\n            localStorage.removeItem(uqTokens);\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\r\n\r\nexport class CallCenterApi extends CenterApi {\r\n    directCall(url:string, method:string, body:any):Promise<any> {\r\n        return this.call(url, method, body);\r\n    }\r\n}\r\nexport const callCenterapi = new CallCenterApi('', undefined);\r\n\r\nexport interface App {\r\n    id: number;\r\n    uqs: AppUq[];\r\n}\r\n\r\nexport interface AppUq {\r\n    id: number;\r\n    uqOwner: string;\r\n    uqName: string;\r\n    access: string;\r\n}\r\n\r\nexport interface UqService {\r\n    id: number;\r\n    url: string;\r\n    urlDebug: string;\r\n    token: string;\r\n}\r\n\r\nconst appUqs = 'appUqs';\r\n\r\nexport class CenterAppApi extends CenterApi {\r\n    private cachedUqs: App;\r\n    async uqs(appOwner:string, appName:string):Promise<App> {\r\n        let ret:any;\r\n        let ls = localStorage.getItem(appUqs);\r\n        if (ls !== null) {\r\n            let rLs = JSON.parse(ls);\r\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\r\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\r\n        }\r\n        if (ret === undefined) {\r\n            ret = await this.uqsPure(appOwner, appName);\r\n            let obj = {\r\n                appOwner:appOwner, \r\n                appName:appName, \r\n                value: ret,\r\n            }\r\n            localStorage.setItem(appUqs, JSON.stringify(obj));\r\n        }\r\n        return this.cachedUqs = _.cloneDeep(ret);\r\n    }\r\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\r\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\r\n    }\r\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\r\n        let ret = await this.uqsPure(appOwner, appName);\r\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\r\n        let {id:retId, uqs:retUqs} = ret;\r\n        if (cachedId !== retId) return false;\r\n        if (cachedUqs.length !== retUqs.length) return false;\r\n        let len = cachedUqs.length;\r\n        for (let i=0; i<len; i++) {\r\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    async unitxUq(unit:number):Promise<UqService> {\r\n        return await this.get('tie/unitx-uq', {unit:unit});\r\n    }\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\r\n    let centerAppApi = new CenterAppApi('tv/', undefined);\r\n    //let unit = meInFrame.unit;\r\n    let ret = await centerAppApi.uqs(appOwner, appName);\r\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\r\n        if (v === false) {\r\n            localStorage.removeItem(appUqs);\r\n            nav.start();\r\n        }\r\n    });\r\n    return ret;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Controller } from 'tonva-tools';\r\n\r\nexport abstract class Link {\r\n    abstract onClick: () => void;\r\n    abstract render(className?:string):JSX.Element;\r\n}\r\n\r\nexport class CLink extends Link {\r\n    private controller: Controller;\r\n    protected icon:string|JSX.Element;\r\n    protected label:string|JSX.Element;\r\n\r\n    constructor(controller:Controller) {\r\n        super();\r\n        this.controller = controller;\r\n        this.icon = controller.icon;\r\n        this.label = controller.label;\r\n    }\r\n\r\n    onClick = async () => {\r\n        await this.controller.start();\r\n    }\r\n\r\n    render(className?:string) {\r\n        return <div\r\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\r\n            onClick={this.onClick}>\r\n            {this.icon} &nbsp; {this.label}\r\n        </div>;\r\n        //return React.createElement(this.view, className);\r\n    }\r\n}\r\n","export * from './cLink';\r\n","\r\nlet subAppWindow:Window;\r\nfunction postWsToSubApp(msg:any) {\r\n    if (subAppWindow === undefined) return;\r\n    subAppWindow.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport function setSubAppWindow(win:Window) {\r\n    subAppWindow = win;\r\n}\r\n\r\nexport function postWsToTop(msg:any) {\r\n    window.top.postMessage({\r\n        type: 'ws',\r\n        msg: msg\r\n    }, '*');\r\n}\r\n\r\nexport abstract class WsBase {\r\n    wsBaseId:string;\r\n    private handlerSeed = 1;\r\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\r\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\r\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.anyHandlers[seed] = handler;\r\n        return seed;\r\n    }\r\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\r\n        let seed = this.handlerSeed++;\r\n        this.msgHandlers[seed] = {type:type, handler: handler};\r\n        return seed;\r\n    }\r\n    endWsReceive(handlerId:number) {\r\n        delete this.anyHandlers[handlerId];\r\n        delete this.msgHandlers[handlerId];\r\n    }\r\n    async receive(msg:any) {\r\n        let {$type} = msg;\r\n        for (let i in this.anyHandlers) {\r\n            await this.anyHandlers[i](msg);\r\n        }\r\n        for (let i in this.msgHandlers) {\r\n            let {type, handler} = this.msgHandlers[i];\r\n            if (type !== $type) continue;\r\n            await handler(msg);\r\n        }\r\n    }\r\n}\r\n\r\nlet wsBaseSeed = 1;\r\nexport class WsBridge extends WsBase {\r\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\r\n}\r\n\r\nexport const wsBridge = new WsBridge();\r\n\r\nexport class WSChannel extends WsBase {\r\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\r\n    static centerToken:string;\r\n    private wsHost: string;\r\n    private token: string;\r\n    private ws: WebSocket;\r\n\r\n    constructor(wsHost: string, token: string) {\r\n        super();\r\n        this.wsHost = wsHost;\r\n        this.token = token;\r\n    }\r\n\r\n    static setCenterToken(token?: string) {\r\n        WSChannel.centerToken = token;\r\n    }\r\n    \r\n    connect():Promise<void> {\r\n        //this.wsHost = wsHost;\r\n        //this.token = token || WSChannel.centerToken;\r\n        if (this.ws !== undefined) return;\r\n        let that = this;\r\n        return new Promise((resolve, reject) => {\r\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\r\n            console.log('connect webSocket %s', this.wsHost);\r\n            ws.onopen = (ev) => {\r\n                console.log('webSocket connected %s', this.wsHost);\r\n                that.ws = ws;\r\n                resolve();\r\n            };\r\n            ws.onerror = (ev) => {\r\n                reject('webSocket can\\'t open!');\r\n            };\r\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\r\n            ws.onclose = (ev) => {\r\n                that.ws = undefined;\r\n                console.log('webSocket closed!');\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        if (this.ws !== undefined) {\r\n            this.ws.close();\r\n            this.ws = undefined;\r\n        }\r\n    }\r\n    private async wsMessage(event:any):Promise<void> {\r\n        try {\r\n            console.log('websocket message: %s', event.data);\r\n            let msg = JSON.parse(event.data);\r\n            postWsToSubApp(msg);\r\n            await this.receive(msg);\r\n        }\r\n        catch (err) {\r\n            console.log('ws msg error: ', err);\r\n        }\r\n    }\r\n    sendWs(msg:any) {\r\n        let netThis = this;\r\n        this.connect().then(() => {\r\n            netThis.ws.send(msg);\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {TitleBar} from './titleBar';\r\n\r\nexport interface ScrollProps {\r\n    onScroll?: (e:any) => void;\r\n    onScrollTop?: () => void;\r\n    onScrollBottom?: () => void;\r\n}\r\ninterface ScrollViewProps extends ScrollProps {\r\n    className?: string;\r\n}\r\nconst scrollTimeGap = 100;\r\nclass ScrollView extends React.Component<ScrollViewProps, null> {\r\n    private bottomTime:number = 0;\r\n    private topTime:number = 0;\r\n\r\n    private onScroll = async (e) => {\r\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\r\n        if (onScroll) this.props.onScroll(e);\r\n        let el = e.target as HTMLBaseElement;\r\n        if (el.scrollTop < 30) {\r\n            //this.eachChild(this, 'top');\r\n            if (onScrollTop !== undefined) {\r\n                let topTime = new Date().getTime();\r\n                if (topTime-this.topTime > scrollTimeGap) {\r\n                    this.topTime = topTime;\r\n                    onScrollTop();\r\n                }\r\n            }\r\n        }\r\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\r\n            //this.eachChild(this, 'bottom');\r\n            if (onScrollBottom !== undefined) {\r\n                let bottomTime = new Date().getTime();\r\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\r\n                    this.bottomTime = bottomTime;\r\n                    onScrollBottom();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private eachChild(c:any, direct:'top'|'bottom') {\r\n        let { props } = c;\r\n        if (props === undefined)\r\n            return;\r\n        let { children } = props;\r\n        if (children === undefined)\r\n            return;\r\n        React.Children.forEach(children, (child, index) => {\r\n            let {_$scroll} = child as any;\r\n            if (_$scroll) _$scroll(direct);\r\n            console.log(child.toString());\r\n            this.eachChild(child, direct);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <main className={this.props.className} onScroll={this.onScroll}>\r\n                {this.props.children}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface Tab extends ScrollProps {\r\n    title: string;\r\n    icon?: string;\r\n    content?: JSX.Element | (()=>JSX.Element);\r\n    header?: string;\r\n    isSelected?: boolean;\r\n    redDot?: IComputedValue<number>;\r\n    load?: () => Promise<void>;\r\n}\r\nexport interface TabState extends Tab {\r\n    isMounted?: boolean;\r\n}\r\nexport interface PageProps extends ScrollProps {\r\n    back?: 'close' | 'back' | 'none';\r\n    header?: boolean | string | JSX.Element;\r\n    keepHeader?: boolean;\r\n    right?: JSX.Element;\r\n    sideBar?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    tabs?: Tab[];\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface PageState {\r\n    cur?: Tab;\r\n    tabs?: TabState[];\r\n}\r\n\r\n@observer\r\nexport class Page extends React.Component<PageProps, PageState> {\r\n    private tabs:TabState[];\r\n    constructor(props: PageProps) {\r\n        super(props);\r\n        let {tabs} = props;\r\n        if (tabs === undefined || tabs.length === 0) return;\r\n        this.tabs = tabs;\r\n        let cur:Tab;\r\n        let tabStates:Tab[] = [];\r\n        for (let tab of tabs) {\r\n            let t:TabState = _.clone(tab);\r\n            if (cur === undefined) {\r\n                if (t.isSelected === true)\r\n                    cur = t;\r\n                else\r\n                    t.isSelected = false;\r\n            }\r\n            else {\r\n                t.isSelected = false;\r\n            }\r\n            t.isMounted = false;\r\n            tabStates.push(t);\r\n        }\r\n        this.state = {\r\n            cur: cur,\r\n            tabs: tabStates,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.tabs === undefined) return;\r\n        let t0 = this.state.tabs[0];\r\n        if (t0 === undefined) return;\r\n        await this.onTabClick(t0);\r\n    }\r\n\r\n    private async onTabClick(tab: TabState) {\r\n        if (tab.isSelected === true) return;\r\n        let cur:TabState;\r\n        let tabs = this.state.tabs;\r\n        for (let t of tabs) {\r\n            if (t === tab) {\r\n                t.isSelected = true;\r\n                cur = t;\r\n            }\r\n            else\r\n                t.isSelected = false;\r\n        }\r\n        if (cur.isMounted !== true) {\r\n            let {load} = cur;\r\n            if (load !== undefined) {\r\n                await load();\r\n            }\r\n        }\r\n        this.setState({\r\n            cur: cur,\r\n            tabs: tabs\r\n        });\r\n    }\r\n\r\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\r\n    }\r\n\r\n    private renderTabs(footer: JSX.Element) {\r\n        const {header, back, right, keepHeader} = this.props;\r\n        let cur = this.state.cur;\r\n        let tabs = <div>{\r\n                this.state.tabs.map((tab, index) => {\r\n                    const {icon, isSelected, title, redDot} = tab;\r\n                    let img:any, redDotView:any, cn:any;\r\n                    if (icon !== undefined) img = <img src={icon} />;\r\n                    if (redDot !== undefined) {\r\n                        let v = redDot.get();\r\n                        if (v < 0) {\r\n                            cn = classNames('red-dot');\r\n                            redDotView = <u />;\r\n                        }\r\n                        else if (v > 0) {\r\n                            cn = classNames('red-dot', 'num');\r\n                            redDotView = <u>{v}</u>;\r\n                        }\r\n                    }\r\n                    return <div key={index}\r\n                        className= {classNames('va-tab', {cur: isSelected})}\r\n                        onClick={() => this.onTabClick(tab)}>\r\n                        {img}<div className={cn}>{title}{redDotView}</div>\r\n                    </div>\r\n                })\r\n            }</div>;\r\n        let titleBar;\r\n        if (header !== false) {\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\r\n                right={right} \r\n            />;\r\n        }\r\n\r\n        return <article className='page-container'>\r\n            {titleBar}\r\n            <section className=\"position-relative\">\r\n            {this.props.sideBar}\r\n            {\r\n                this.state.tabs.map((tab, index) => {\r\n                    let {isSelected, isMounted, content} = tab;\r\n                    if (isSelected === true || isMounted === true) {\r\n                        tab.isMounted = true;\r\n                        return <ScrollView key={index}\r\n                            className={classNames({invisible: isSelected===false})}\r\n                            onScroll={tab.onScroll}\r\n                            onScrollTop={tab.onScrollTop}\r\n                            onScrollBottom={tab.onScrollBottom}\r\n                        >\r\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\r\n                        </ScrollView>;\r\n                    }\r\n                })\r\n            }\r\n            </section>\r\n            {tabs}\r\n            {footer}\r\n        </article>;\r\n    }\r\n    private renderSingle(footer: JSX.Element) {\r\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\r\n        let titleBar;\r\n        if (header !== false)\r\n            titleBar = <TitleBar \r\n                back={back} \r\n                center={header as any}\r\n                right={right}\r\n                logout={this.props.logout}\r\n            />;\r\n        return (\r\n            <article className='page-container' onTouchStart={this.onTouchStart}>\r\n                {titleBar}\r\n                <section className=\"position-relative\">\r\n                    {this.props.sideBar}\r\n                    <ScrollView\r\n                        onScroll={onScroll}\r\n                        onScrollTop={onScrollTop}\r\n                        onScrollBottom={onScrollBottom}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </section>\r\n                {footer}\r\n            </article>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {footer} = this.props;\r\n        let elFooter;\r\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\r\n        if (this.tabs !== undefined)\r\n            return this.renderTabs(elFooter);\r\n        else\r\n            return this.renderSingle(elFooter);\r\n    }\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav } from './nav';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport function Image(props: ImageProps) {\r\n    let {className, style, src} = props;\r\n    if (!src) {\r\n        return <div className={classNames(className, 'image-none')} style={style}>\r\n            <i className=\"fa fa-camera\" />\r\n        </div>;\r\n    }\r\n    if (src.startsWith(':') === true) {\r\n        src = nav.resUrl + src.substr(1);\r\n    }\r\n    return <img src={src} className={className} style={style} />;\r\n}\r\n","export const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\r\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\r\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\r\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\r\nconst uqDebugBuilderHost = 'localhost:3009';\r\ninterface HostValue {\r\n    value: string;\r\n    local: boolean;\r\n}\r\nconst hosts:{[name:string]:HostValue} = {\r\n    centerhost: {\r\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \r\n        local: false\r\n    },\r\n    reshost: {\r\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\r\n        local: false\r\n    },\r\n    uqhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    unitxhost: {\r\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \r\n        local: false\r\n    },\r\n    \"uq-build\": {\r\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \r\n        local: false\r\n    }\r\n}\r\n\r\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\r\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\r\n\r\nconst fetchOptions = {\r\n    method: \"GET\",\r\n    mode: \"no-cors\", // no-cors, cors, *same-origin\r\n    headers: {\r\n        \"Content-Type\": \"text/plain\"\r\n    },\r\n};\r\n\r\nclass Host {\r\n    url: string;\r\n    ws: string;\r\n    resHost: string;\r\n\r\n    async start() {\r\n        if (isDevelopment === true) {\r\n            await this.tryLocal();\r\n        }\r\n        let host = this.getCenterHost();\r\n        this.url = centerUrlFromHost(host);\r\n        this.ws = centerWsFromHost(host);\r\n        this.resHost = this.getResHost();\r\n    }\r\n\r\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\r\n    private async tryLocal() {\r\n        let promises:PromiseLike<any>[] = [];\r\n        let hostArr:string[] = [];\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            let {value} = hostValue;\r\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\r\n        }\r\n\r\n        for (let host of hostArr) {\r\n            let fetchUrl = this.debugHostUrl(host);\r\n            promises.push(localCheck(fetchUrl));\r\n        }\r\n        let results = await Promise.all(promises);\r\n        let len = hostArr.length;\r\n        for (let i=0; i<len; i++) {\r\n            let local = results[i];\r\n            let host = hostArr[i];\r\n            for (let j in hosts) {\r\n                let hostValue = hosts[j];\r\n                if (hostValue.value === host) {\r\n                    hostValue.local = local;\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        let p = 0;\r\n        for (let i in hosts) {\r\n            let hostValue = hosts[i];\r\n            hostValue.local = results[p];\r\n            ++p;\r\n        }\r\n        */\r\n    }\r\n\r\n    private getCenterHost():string {\r\n        let {value, local} = hosts.centerhost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return centerHost;\r\n    }\r\n\r\n    private getResHost():string {\r\n        let {value, local} = hosts.reshost;\r\n        let hash = document.location.hash;\r\n        if (hash.includes('sheet_debug') === true) {\r\n            return value;\r\n        }\r\n        if (isDevelopment === true) {\r\n            if (local === true) return value;\r\n        }\r\n        return resHost;\r\n    }\r\n\r\n    getUrlOrDebug(url:string, urlDebug:string):string {\r\n        if (isDevelopment !== true) return url;\r\n        if (!urlDebug) return url;\r\n        for (let i in hosts) {\r\n            let host = hosts[i];\r\n            let {value, local} = host;\r\n            let hostString = `://${i}/`;\r\n            let pos = urlDebug.indexOf(hostString);\r\n            if (pos > 0) {\r\n                if (local === false) return url;\r\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\r\n                return urlDebug;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    async localCheck(urlDebug: string):Promise<boolean> {\r\n        return await localCheck(urlDebug);\r\n    }\r\n}\r\n\r\nexport const host:Host = new Host();\r\n\r\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\r\n// 网上找了上面的fetch timeout代码。\r\n// 尽管timeout了，fetch仍然继续，没有cancel\r\n\r\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\r\n//const timeout = 2000;\r\nconst timeout = 200;\r\n\r\nfunction fetchLocalCheck(url:string):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, fetchOptions as any)\r\n      .then(v => {\r\n          v.text().then(resolve).catch(reject);\r\n      })\r\n      .catch(reject);\r\n      const e = new Error(\"Connection timed out\");\r\n      setTimeout(reject, timeout, e);\r\n    });\r\n}\r\n\r\nasync function localCheck(url:string):Promise<boolean> {\r\n    try {\r\n        await fetchLocalCheck(url);\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import jwtDecode from 'jwt-decode';\r\n\r\nexport interface Unit {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface Guest {\r\n    id: number;             // id = 0\r\n    guest: number;\r\n    token: string;\r\n}\r\n\r\nexport interface User extends Guest {\r\n    id: number;\r\n    name: string;\r\n    nick?: string;\r\n    icon?: string;\r\n}\r\n\r\n/*\r\nexport class UserInNav {\r\n    private user: User;\r\n    constructor(user: User) {\r\n        this.user = user;\r\n    }\r\n    get id():number {return this.user.id}\r\n    get name(): string {return this.user.name}\r\n    get nick(): string {return this.user.nick}\r\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\r\n    get guest(): number {return this.user.guest}\r\n    get token(): string {return this.user.token}\r\n}\r\n*/\r\nexport function decodeUserToken(token: string): User {\r\n    let ret:any = jwtDecode(token);\r\n    let user: User = {\r\n        id: ret.id,\r\n        name: ret.name,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return user;\r\n}\r\n\r\nexport function decodeGuestToken(token: string): Guest {\r\n    let ret:any = jwtDecode(token);\r\n    let guest: Guest = {\r\n        id: 0,\r\n        guest: ret.guest,\r\n        token: token,\r\n    };\r\n    return guest;\r\n}\r\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst ID_LENGTH = 8;\r\n\r\nexport function uid():string {\r\n    let len = ALPHABET.length;\r\n    let rtn = '';\r\n    for (let i = 0; i < ID_LENGTH; i++) {\r\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\r\n    }\r\n    return rtn;\r\n}\r\n","import * as React from 'react';\r\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\r\nimport { TuidMain, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { CLink } from '../link';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\n\r\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected controller: CTuidMain;\r\n    onNew = () => this.event('new');\r\n    onList = () => this.event('list');\r\n    onSearch = async (key:string) => this.event('list', key);\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected entityRender(link: CLink, index: number): JSX.Element {\r\n        return link.render();\r\n    }\r\n\r\n    protected async entityClick(link: CLink) {\r\n        await link.onClick();\r\n    }\r\n\r\n    protected get view() {\r\n        let {label, proxyLinks, isFrom} = this.controller;\r\n        let newButton:any;\r\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\r\n        let content:any;\r\n        if (proxyLinks === undefined) {\r\n            let right = <>\r\n                {newButton}\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\r\n            </>;\r\n            content = <LMR className='m-3' right={right}>\r\n                <SearchBox className=\"w-100\" size=\"md\"\r\n                    onSearch={this.onSearch} \r\n                    placeholder={'搜索'+label} />\r\n            </LMR>;\r\n        }\r\n        else {\r\n            content = <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n        }\r\n        return () => <Page header={label}>\r\n            {content}\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CTuidMain, TuidUI } from './cTuid';\r\nimport { TuidMain, Tuid } from '../../entities';\r\n\r\nexport type TypeVTuidEdit = typeof VTuidEdit;\r\n\r\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\r\n    private vForm: VForm;\r\n    private id: number;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        if (param !== undefined) {\r\n            this.id = param.id;\r\n        }\r\n        this.openPage(this.editView);\r\n    }\r\n\r\n    protected get editView() {\r\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\r\n            {this.vForm.render('py-3')}\r\n        </Page>;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n        this.event('edit-end');\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.controller.entity.save(this.id, values);\r\n        let {id} = ret;\r\n        if (id < 0) {\r\n            let {unique} = this.controller.entity;\r\n            if (unique !== undefined) {\r\n                for (let u of unique) {\r\n                    this.vForm.setError(u, '不能重复');\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.controller.isCalling) {\r\n            this.returnCall(id);\r\n            this.closePage();\r\n            return;\r\n        }\r\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n\r\n        this.event('item-changed', {id: this.id, values: values});\r\n        return;\r\n    }\r\n\r\n    //protected view = TuidNewPage;\r\n}\r\n/*\r\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\r\n    let {label, id, vmForm} = vm;\r\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\r\n        {vmForm.render('mx-3 my-2')}\r\n    </Page>;\r\n});\r\n*/","import { nav, Page } from 'tonva-tools';\r\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Tuid } from '../../entities';\r\nimport { CTuid, TuidUI } from './cTuid';\r\nimport { SearchBox, List } from 'tonva-react-form';\r\nimport React from 'react';\r\nimport { RowContent } from '../form/viewModel';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\r\n    protected mainRowContent: (row:any) => JSX.Element;\r\n    protected divRowContent: (row:any) => JSX.Element;\r\n\r\n    async open(param?:any): Promise<void> {\r\n        if (param === undefined)\r\n            await this.showMain(param);\r\n        else\r\n            await this.showDiv(param);\r\n    }\r\n\r\n    private async showMain(param) {\r\n        this.mainRowContent = this.ui.rowContent || RowContent;\r\n        await this.controller.searchMain(param);\r\n        this.openPage(this.mainView);\r\n    }\r\n\r\n    private async showDiv(ownerValue: any) {\r\n        let {divs} = this.ui;\r\n        if (divs !== undefined) {\r\n            this.divRowContent = divs[this.entity.name].rowContent;\r\n        }\r\n        if (this.divRowContent === undefined) {\r\n            this.divRowContent = RowContent;\r\n        }\r\n        let divItems = await this.controller.getDivItems(ownerValue);\r\n        this.openPage(this.divView, {items: divItems});\r\n    }\r\n\r\n    protected mainView = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header} back=\"close\">\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n\r\n    onSearchMain = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\r\n    clickMainRow = async (item:any) => {\r\n        this.ceasePage();\r\n        if (this.controller.entity.owner === undefined) {\r\n            this.returnCall(item);\r\n            return;\r\n        }\r\n        await this.showDiv(this.entity.getIdFromObj(item));\r\n    }\r\n\r\n    protected divView = (param:any) => {\r\n        return <Page header=\"选择Div\">\r\n            <List\r\n                items={param.items}\r\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\r\n        </Page>;\r\n    }\r\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\r\n    clickDivRow = (item:any) => {\r\n        this.ceasePage();\r\n        this.returnCall(item);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidMain } from '../../entities';\r\nimport { TuidUI, CTuidMain } from './cTuid';\r\n\r\nexport type TypeVTuidView = typeof VTuidView;\r\n\r\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    vForm: VForm;\r\n    id: number;\r\n\r\n    protected buildForm(param:any) {\r\n        this.vForm = this.createForm(undefined, param);\r\n    }\r\n\r\n    async open(param:any) {\r\n        this.buildForm(param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    render(param:any) {\r\n        this.buildForm(param);\r\n        return this.vForm.render();\r\n    }\r\n\r\n    async loadId(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    protected next = async () => {\r\n        this.vForm.reset();\r\n        this.closePage();\r\n    }\r\n\r\n    protected finish = () => {\r\n        this.closePage(2);\r\n    }\r\n\r\n    protected resetForm() {\r\n        this.vForm.reset();\r\n    }\r\n\r\n    protected onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        let ret = await this.entity.save(this.id, values);\r\n        if (ret) {\r\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\r\n        }\r\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\r\n            <div className='m-3'>\r\n                <span className=\"text-success\">\r\n                    <FA name='check-circle' size='lg' /> 成功提交！\r\n                </span>\r\n                <div className='mt-5'>\r\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n            {this.vForm.render('py-3')}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport { VTuidView } from './vTuidView';\r\n\r\nexport class VTuidInfo  extends VTuidView {\r\n/*\r\n    async open(param?:any) {\r\n        this.open(this.view);\r\n    }\r\n*/\r\n/*\r\n    private view = () => {\r\n        return <Page>\r\n            TuidInfo\r\n        </Page>\r\n    }\r\n*/\r\n}\r\n","import { PageItems } from 'tonva-tools';\r\nimport { Tuid } from \"../../entities\";\r\n\r\nexport class TuidPageItems<T> extends PageItems<T> {\r\n    private tuid: Tuid;\r\n    constructor(tuid: Tuid) {\r\n        super(true);\r\n        this.tuid = tuid;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.tuid.search(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\r\nimport { JSONContent, RowContent } from '../form/viewModel';\r\n\r\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\r\n    protected rowContent: (row:any) => JSX.Element;\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        this.rowContent = this.ui.rowContent || RowContent;\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n    private rowKey = (item:any) => {\r\n        let {id} = item;\r\n        return id;\r\n    }\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidMainList extends VTuidMainListBase {\r\n    protected async onSelected(item:any) {\r\n        if (this.controller.isFrom === false)\r\n            this.event('edit', item.id);\r\n        else\r\n            this.event('info', item.id);\r\n    }\r\n}\r\n\r\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\r\n    protected ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        //this.PageItems = new TuidPageItems(this.entity);\r\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\r\n        // 初始查询, key是空的\r\n        //await this.onSearch('');\r\n        await this.controller.searchMain('');\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSearch = async (key:string) => {\r\n        await this.controller.searchMain(key);\r\n        //await this.PageItems.first(key);\r\n    }\r\n    renderRow = (item:any, index:number):JSX.Element => {\r\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\r\n    }\r\n\r\n    protected abstract onSelected(item:any): Promise<void>;\r\n    private callOnSelected(item:any) {\r\n        if (this.onSelected === undefined) {\r\n            alert('onSelect is undefined');\r\n            return;\r\n        }\r\n        this.onSelected(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        let {owner} = this.entity;\r\n        let ownerTop;\r\n        if (owner !== undefined) {\r\n            let ownerObj = owner.valueFromId(this.ownerId);\r\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\r\n        }\r\n        return <Page header={header}>\r\n            {ownerTop}\r\n            <List\r\n                items={this.controller.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    });\r\n}\r\n\r\nexport class VTuidDivList extends VTuidDivListBase {\r\n    protected async onSelected(item:any) {\r\n        this.event('edit', item.id);\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { TypeVPage, PageItems } from 'tonva-tools';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\r\nimport { VTuidMain } from './vTuidMain';\r\nimport { VTuidEdit } from './vTuidEdit';\r\nimport { VTuidSelect } from './vTuidSelect';\r\nimport { CUq } from \"../uq/cUq\";\r\nimport { CLink } from \"../link\";\r\nimport { VTuidInfo } from \"./vTuidInfo\";\r\nimport { TuidPageItems } from \"./pageItems\";\r\nimport { VTuidMainList } from './vTuidList';\r\n\r\nexport interface TuidUI extends EntityUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    content?: React.StatelessComponent<any>;\r\n    rowContent?: React.StatelessComponent<any>;\r\n    divs?: {\r\n        [div:string]: {\r\n            CTuidSelect?: typeof CTuidSelect;\r\n            content?: React.StatelessComponent<any>;\r\n            rowContent?: React.StatelessComponent<any>;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\r\n    PageItems:PageItems<any>;\r\n\r\n    protected buildPageItems():PageItems<any> {\r\n        return new TuidPageItems(this.entity.owner || this.entity);\r\n    }\r\n\r\n    async searchMain(key:string) {\r\n        if (this.PageItems === undefined) {\r\n            this.PageItems = this.buildPageItems();\r\n        }\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async getDivItems(ownerId:number):Promise<any[]> {\r\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport class CTuidMain extends CTuid<TuidMain> {\r\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\r\n        super(cUq, entity, ui, res);\r\n        let tuid = this.entity;\r\n        this.proxies = tuid.proxies;\r\n        if (this.proxies !== undefined) {\r\n            this.proxyLinks = [];\r\n            for (let i in this.proxies) {\r\n                let link = this.cUq.linkFromName('tuid', i);\r\n                this.proxyLinks.push(link);\r\n            }\r\n        }\r\n    }\r\n\r\n    async from():Promise<CTuidMain> {\r\n        let ret = await this.entity.cFrom();\r\n        if (ret === undefined) return this;\r\n        return ret;\r\n    }\r\n\r\n    async cUqFrom():Promise<CUq> {\r\n        return await this.entity.cUqFrom();\r\n    }\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidEditFromName(this.entity.name);\r\n    }\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidInfoFromName(this.entity.name);\r\n    }\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.entity.cUqFrom();\r\n        return await cUq.cTuidSelectFromName(this.entity.name);\r\n    }\r\n\r\n    getLable(tuid:Tuid):string {\r\n        if (tuid === this.entity) return this.label;\r\n        let {name} = tuid;\r\n        let {arrs} = this.res;\r\n        if (arrs !== undefined) {\r\n            let arr = arrs[name];\r\n            if (arr !== undefined) {\r\n                let label = arr.label;\r\n                if (label !== undefined) return label;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    proxies: {[name:string]: TuidMain};\r\n    proxyLinks: CLink[];\r\n    isFrom: boolean;\r\n\r\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\r\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\r\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\r\n\r\n    protected async internalStart(param?:any):Promise<void> {\r\n        this.isFrom = this.entity.schemaFrom !== undefined;\r\n        await this.openVPage(this.VTuidMain);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n        let v: TypeVPage<CTuidMain>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': v = this.VTuidEdit; break;\r\n            case 'list': v = this.VTuidList; break;\r\n            case 'edit': await this.edit(value); return;\r\n            case 'item-changed': this.itemChanged(value); return;\r\n            case 'info': \r\n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\r\n                await cTuidInfo.start(value);\r\n                return;\r\n        }\r\n        await this.openVPage(v, value);\r\n    }\r\n\r\n    protected async edit(id:number) {\r\n        let values:any = undefined;\r\n        if (id !== undefined) {\r\n            values = await this.entity.load(id);\r\n        }\r\n        let v = this.VTuidEdit;\r\n        await this.openVPage(v, values);\r\n    }\r\n\r\n    private itemChanged({id, values}:{id:number, values: any}) {\r\n        if (this.PageItems === undefined) return;\r\n        let items = this.PageItems.items;\r\n        let item = items.find(v => v.id === id);\r\n        if (item !== undefined) {\r\n            _.merge(item, values);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CTuidEdit extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.edit(id);\r\n    }\r\n}\r\n\r\nexport class CTuidList extends CTuidMain {\r\n    protected async internalStart(id:number):Promise<void> {\r\n        await this.openVPage(this.VTuidList);\r\n    }\r\n}\r\n\r\nexport class CTuidDiv extends CTuid<TuidDiv> {\r\n    protected async internalStart():Promise<void> {\r\n        alert('tuid div: ' + this.entity.name);\r\n    }\r\n}\r\n\r\nexport class CTuidSelect extends CTuid<Tuid> {\r\n    protected async internalStart(param?: any):Promise<void> {\r\n        await this.openVPage(this.VTuidSelect, param);\r\n    }\r\n    protected async beforeStart():Promise<boolean> {\r\n        //if (await super.beforeStart() === false) return false;\r\n        await this.entity.loadSchema();\r\n        if (this.PageItems !== undefined) this.PageItems.reset();\r\n        return true;\r\n    }\r\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\r\n    idFromItem(item:any) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CTuidInfo extends CTuid<Tuid> {\r\n    protected async internalStart(id: any):Promise<void> {\r\n        let data = await this.entity.load(id)\r\n        await this.openVPage(this.VTuidInfo, data);\r\n    }\r\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\r\n}\r\n","export * from './cTuid';\r\nexport * from './vTuidMain';\r\nexport * from './vTuidEdit';\r\nexport * from './vTuidInfo';\r\nexport * from './vTuidView';\r\n","import * as React from 'react';\r\nimport { VField } from './vField';\r\nimport { VArr } from './vArr';\r\nimport { VSubmit } from './vSubmit';\r\nimport { uid } from 'tonva-react-form';\r\n\r\nexport abstract class VBand {\r\n    protected label: string;\r\n    protected view = () => <div />;\r\n\r\n    constructor(label:string) {\r\n        this.label = label;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        //text-sm-right\r\n        return <div key={this.key} className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">\r\n                    {this.label}\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {}\r\n    get key() {return this.label}\r\n    public getVFields():VField[] {return;}\r\n    public getVArr():VArr {return;}\r\n    public getVSubmit():VSubmit {return;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\r\n    }\r\n}\r\n\r\nexport interface FieldRes {\r\n    label: string;\r\n    placeHolder: string;\r\n    suffix: string;\r\n}\r\nexport class VFieldBand extends VBand {\r\n    protected vField:VField;\r\n    constructor(label:string, vField:VField) {\r\n        super(label);\r\n        this.vField = vField;\r\n    }\r\n\r\n    get key() {return this.vField.name}\r\n    public getVFields():VField[] {return [this.vField];}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return this.vField.render();\r\n        /*\r\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            {this.vField.render()}\r\n        </div>;*/\r\n    }\r\n}\r\n\r\nexport class VArrBand extends VBand {\r\n    protected vArr:VArr;\r\n    constructor(label:string, vArr:VArr) {\r\n        super(label);\r\n        this.vArr = vArr;\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\r\n    get key() {return this.vArr.name}\r\n    public getVArr():VArr {return this.vArr;}\r\n\r\n    render():JSX.Element {\r\n        return <React.Fragment key={this.key}>\r\n            {this.vArr && this.vArr.render()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport class VFieldsBand extends VBand {\r\n    protected vFields: VField[];\r\n    constructor(label:string, vFields:VField[]) {\r\n        super(label);\r\n        this.vFields = vFields;\r\n    }\r\n\r\n    get key() {return this.vFields[0].name}\r\n    public getVFields():VField[] {return this.vFields;}\r\n\r\n    protected renderContent():JSX.Element {\r\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\r\n            fields\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class VSubmitBand extends VBand {\r\n    protected vSubmit: VSubmit;\r\n    constructor(vSubmit:VSubmit) {\r\n        super(undefined);\r\n        this.vSubmit = vSubmit;\r\n    }\r\n\r\n    get key() {return '$submit'}\r\n\r\n    public getVSubmit():VSubmit {return this.vSubmit;}\r\n\r\n    render():JSX.Element {\r\n        return <div key=\"$submit\" className=\"px-3\">\r\n            <div className=\"form-group row\">\r\n                <div className=\"offset-sm-2 col-sm-10\">\r\n                    {this.vSubmit.render()}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames'\r\nimport { ViewModel } from \"./viewModel\";\r\nimport { VForm } from './vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class VSubmit extends ViewModel {\r\n    private vForm: VForm;\r\n    constructor(vForm: VForm) {\r\n        super();\r\n        this.vForm = vForm;\r\n        this.caption = this.vForm.submitCaption;\r\n        this.className = 'btn btn-primary w-25';\r\n    }\r\n    @observable caption: string;\r\n    @observable className: string;\r\n\r\n    private onClickSubmit = async () => {\r\n        this.vForm.submit();\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let {isOk} = this.vForm;\r\n        return <button type=\"button\" \r\n            onClick={this.onClickSubmit}\r\n            className={this.className}\r\n            disabled={isOk === false}>\r\n            {this.caption}\r\n        </button>;\r\n    });\r\n}","\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any);\r\n}\r\n\r\nexport class RuleRequired extends Rule {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push('不能为空');\r\n    }\r\n}\r\n\r\nexport class RuleNum extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) defy.push('必须是数字');\r\n    }\r\n}\r\n\r\nexport class RuleInt extends Rule {\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\r\n            defy.push('必须是整数');\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleMin extends RuleNum {\r\n    constructor(min: number) {\r\n        super();\r\n        this.min = min;\r\n    }\r\n    min: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\r\n    }\r\n}\r\n\r\nexport class RuleMax extends RuleNum {\r\n    constructor(max: number) {\r\n        super();\r\n        this.max = max;\r\n    }\r\n    max: number;\r\n    check(defy:string[], value:any) {\r\n        super.check(defy, value);\r\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { computed, action } from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { observer } from 'mobx-react';\r\nimport { FA } from 'tonva-react-form';\r\nimport { ViewModel } from \"../viewModel\";\r\nimport { VForm, FormMode } from '../vForm';\r\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\r\n\r\nexport abstract class VField extends ViewModel {\r\n    protected form: VForm;\r\n    protected fieldUI: FieldUI;\r\n    protected fieldRes:FieldRes;\r\n    protected field: Field;\r\n    protected rules: Rule[];\r\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super();\r\n        this.form = form;\r\n        this.field = field;\r\n        this.name = field.name;\r\n        this.fieldUI = fieldUI || {} as any;\r\n        this.fieldRes = fieldRes || {} as any;\r\n        this.init();\r\n    }\r\n\r\n    name: string;\r\n\r\n    protected init() {\r\n        this.buildRules();\r\n    }\r\n\r\n    protected buildRules() {\r\n        this.rules = [];\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field !== undefined && this.field.null === false) {\r\n            this.rules.push(new RuleRequired);\r\n        }\r\n    }\r\n\r\n    @computed get checkRules(): string[] {\r\n        let defy = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        return defy;\r\n    }\r\n\r\n    @computed get isOk() {\r\n        if (this.rules.length === 0) return true;\r\n        let defy = this.checkRules;\r\n        return defy.length === 0;\r\n    }\r\n\r\n    @computed get value() { return this.form.values[this.name]; }\r\n    setValue(v:any) {\r\n        this.form.values[this.name]=v; \r\n    }\r\n    get error() { return this.form.errors[this.name]; }\r\n    set error(err:any) { this.form.errors[this.name]=err; }\r\n    protected parse(str:string):any {return str;}\r\n    get readonly():boolean {\r\n        let {mode} = this.form;\r\n        return mode === FormMode.readonly || \r\n            mode === FormMode.edit && this.fieldUI.editable === false;\r\n    }\r\n}\r\n\r\nexport class VUnknownField extends VField {\r\n    protected view = () => {\r\n        //let {name, type} = this.fieldUI;\r\n        let type='', name = '';\r\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\r\n            placeholder={'unkown control: ' + type + '-' + name} />;\r\n    }\r\n}\r\n\r\nexport abstract class VInputControl extends VField {\r\n    protected fieldUI: FieldInputUI;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected inputType:string;\r\n    protected get maxLength():number {return}\r\n\r\n    protected renderError = (className:string) => {\r\n        let {errors} = this.form;\r\n        let error = errors[this.name];\r\n        if (error === undefined) return;\r\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\r\n    }\r\n\r\n    /*\r\n    get value() {\r\n        return super.value;\r\n    }*/\r\n    setValue(v:any) {\r\n        super.setValue(v); this.setInputValue(); \r\n    }\r\n\r\n    protected ref = (input:HTMLInputElement) => {\r\n        this.input = input;\r\n        this.setInputValue();\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onFocus = () => {\r\n        this.error = undefined;\r\n    }\r\n\r\n    protected onBlur = () => {\r\n        let defy = this.checkRules;\r\n        if (defy.length > 0) {\r\n            this.error = defy[0];\r\n        }\r\n        this.form.computeFields();\r\n    }\r\n\r\n    protected onChange = (evt: React.ChangeEvent<any>) => {\r\n        let v = this.parse(evt.currentTarget.value);\r\n        if (v === null) {\r\n            return;\r\n        }\r\n        this.setValue(v);\r\n    }\r\n\r\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\r\n    \r\n    protected view = observer(() => {\r\n        let {required} = this.fieldUI;\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = ['form-control', 'form-control-input'];\r\n        let errCN = 'text-danger small mt-1 mx-2';\r\n    \r\n        let redDot;\r\n        let input;\r\n        if (this.readonly === true) {\r\n            input = <input className={classNames(ctrlCN, 'bg-light')}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                readOnly={true}\r\n            />;\r\n        }\r\n        else {\r\n            input = <input className={classNames(ctrlCN)}\r\n                ref={this.ref}\r\n                type={this.inputType}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                onChange={this.onChange}\r\n                placeholder={placeHolder}\r\n                readOnly={false}\r\n                maxLength={this.maxLength}\r\n                onKeyPress={this.onKeyPress}\r\n            />;\r\n            if (required === true || this.field.null === false) {\r\n                redDot = <RedMark />;\r\n            }\r\n        }\r\n\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n\r\n        return <>\r\n            {redDot}\r\n            {inputGroup}\r\n            {this.renderError(errCN)}\r\n        </>\r\n    });\r\n}\r\n\r\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\r\n\r\nexport class VStringField extends VInputControl {\r\n    protected fieldUI: FieldStringUI;\r\n    protected inputType:string = 'text';\r\n    protected get maxLength():number {return this.field.size}\r\n}\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport abstract class VNumberControl extends VInputControl {\r\n    protected fieldUI: FieldNumberUI;\r\n    protected extraChars: number[];\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        if (this.fieldUI !== undefined) {\r\n            let {min, max} = this.fieldUI;\r\n            if (min !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n            }\r\n            else {\r\n                this.extraChars.push(KeyCode_Neg);\r\n            }\r\n    \r\n            if (max !== undefined) {\r\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n            }\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'bigint':\r\n            case 'int':\r\n            case 'smallint':\r\n            case 'tinyint':\r\n                this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleNum);\r\n        let {min, max} = this.fieldUI;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n    }\r\n\r\n    inputType:string = 'number';\r\n\r\n    protected parse(text:string):any {\r\n        try {\r\n            if (text.trim().length === 0) return undefined;\r\n            let ret = Number(text);\r\n            return (ret === NaN)? null : ret;\r\n        }\r\n        catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected setInputValue() {\r\n        if (!this.input) return;\r\n        let v = this.value;\r\n        if (this.parse(this.input.value) == v) return;\r\n        this.input.value = v === null || v === undefined? '' : v;\r\n    }\r\n\r\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.input.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.input.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.input.value = v;\r\n    }\r\n}\r\n\r\nexport class VIntField extends VNumberControl {\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        this.rules.push(new RuleInt);\r\n    }\r\n}\r\n\r\nexport class VDecField extends VNumberControl {\r\n}\r\n\r\nexport class VTextField extends VStringField {\r\n\r\n}\r\n\r\nexport class VDateTimeField extends VStringField {\r\n\r\n}\r\n","import React from 'react';\r\nimport { VField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { VForm } from '../vForm';\r\nimport { observer } from 'mobx-react';\r\nimport { FieldRes } from '../vBand';\r\n\r\nexport class VComputeField extends VField {\r\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\r\n        super(form, field, undefined, fieldRes);\r\n    }\r\n    protected view = observer(() => {\r\n        let value = this.form.values[this.field.name];\r\n        let {placeHolder, suffix} = this.fieldRes;\r\n        let ctrlCN = 'form-control form-control-input bg-light';\r\n        if (value === null) value = '';\r\n        let input = <input className={ctrlCN}\r\n            type=\"text\"\r\n            placeholder={placeHolder}\r\n            readOnly={true}\r\n            value={value}/>\r\n        let inputGroup;\r\n        if (suffix === undefined)\r\n            inputGroup = input;\r\n        else\r\n            inputGroup = <div className=\"input-group\">\r\n                {input}\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{suffix}</span>\r\n                </div>\r\n            </div>;\r\n        return inputGroup;\r\n        /*\r\n            return <div \r\n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\r\n            {value} &nbsp;\r\n        </div>;\r\n        */\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { IObservableArray, observable } from 'mobx';\r\nimport _ from 'lodash';\r\nimport { List, FA, Muted } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\r\nimport { ArrFields, Field } from '../../entities';\r\nimport { VForm, FieldInputs, FormMode } from './vForm';\r\nimport { FormArr } from '../formUI';\r\n\r\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\r\n\r\nexport class VArr extends ViewModel {\r\n    protected mode: FormMode;\r\n    protected label: any;\r\n    protected header: any;\r\n    protected footer: any;\r\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\r\n    protected onEditRow: ArrEditRow;\r\n    protected ownerForm:VForm;\r\n    protected vForm:VForm;\r\n    protected rowContent:TypeContent;\r\n    protected none: string;\r\n    protected newSubmitCaption: string;\r\n    protected editSubmitCaption: string;\r\n    protected addRow: ()=>Promise<void>;\r\n\r\n    name:string;\r\n    list: IObservableArray<any>;\r\n\r\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\r\n        super();\r\n        this.ownerForm = ownerForm;\r\n        let {name, fields} = arr;\r\n        this.name = name;\r\n        let {ui, res, mode, inputs, values} = ownerForm;\r\n        let arrsRes = res.arrs;\r\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\r\n        let {label, none, newSubmit, editSubmit} = arrRes;\r\n        this.none = none || ownerForm.none;\r\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\r\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\r\n        this.label = label || name;\r\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\r\n        this.rowContent = arrUI.rowContent;// || JSONContent;\r\n        this.mode = mode;\r\n        if (this.onEditRow === undefined) {\r\n            this.vForm = new VForm({\r\n                fields: fields,\r\n                arrs: undefined,\r\n                ui: arrUI,\r\n                res: arrRes,\r\n                inputs: inputs[name] as FieldInputs,\r\n                none: ownerForm.none,\r\n                submitCaption: 'submit',\r\n                arrNewCaption: undefined,\r\n                arrEditCaption: undefined,\r\n                arrTitleNewButton: undefined,\r\n                mode: mode,\r\n            }, \r\n            mode===FormMode.readonly? undefined: this.onSubmit);\r\n        }\r\n        else {\r\n            this.onEditRow = onEditRow;\r\n        }\r\n        this.list = values[name];\r\n    }\r\n\r\n    reset() {\r\n        this.vForm.reset();\r\n        this.list.clear();\r\n    }\r\n\r\n    setAddRow(addRow:()=>Promise<void>) {\r\n        this.addRow = addRow;\r\n    }\r\n\r\n    protected rowPage = () => {\r\n        return <Page header={this.label} back=\"close\">\r\n            {this.vForm.render('py-3')}\r\n        </Page>\r\n    }\r\n    private onSubmit = async () => {\r\n        let {valueBoxs} = this.vForm;\r\n        await this.onRowChanged(valueBoxs);\r\n    }\r\n\r\n    private onRowChanged = async (rowValues:any) => {\r\n        if (this.rowValues === undefined) {\r\n            rowValues.$owner = this.ownerForm.values;\r\n            this.list.push(rowValues);\r\n            if (this.onEditRow === undefined)\r\n                this.vForm.reset();\r\n            else\r\n                await this.onEditRow(undefined, this.onRowChanged);\r\n        }\r\n        else {\r\n            _.merge(this.rowValues, rowValues);\r\n            if (this.onEditRow === undefined) nav.pop();\r\n        }\r\n    }\r\n\r\n    private renderItem = (item:any, index:number) => {\r\n        if (this.rowContent === undefined)\r\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\r\n        return <this.rowContent {...item} />;\r\n    }\r\n    private showRow = async (rowValues:any):Promise<any> => {\r\n        if (this.onEditRow !== undefined) {\r\n            await this.onEditRow(rowValues, this.onRowChanged);\r\n            return;\r\n        }\r\n        this.vForm.reset();\r\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\r\n        nav.push(<this.rowPage />);\r\n    }\r\n    private editRow = async (rowValues:any): Promise<void> => {\r\n        this.rowValues = rowValues;\r\n        let {vSubmit} = this.vForm;\r\n        if (vSubmit !== undefined) {\r\n            vSubmit.caption = this.editSubmitCaption;\r\n            vSubmit.className = 'btn btn-outline-success';\r\n        }\r\n        this.vForm.mode = this.ownerForm.mode;\r\n        await this.showRow(rowValues);\r\n    }\r\n    private internalAddRow = async () => {\r\n        this.rowValues = undefined;\r\n        let {vSubmit} = this.vForm;\r\n        vSubmit.caption = this.newSubmitCaption;\r\n        vSubmit.className = 'btn btn-outline-success';\r\n        this.vForm.reset();\r\n        this.vForm.mode = FormMode.new;\r\n        await this.showRow(undefined);\r\n    }\r\n\r\n    protected view = () => {\r\n        let button;\r\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\r\n            button = <button onClick={this.addRow || this.internalAddRow}\r\n                type=\"button\" \r\n                className=\"btn btn-link p-0\">\r\n                {this.ownerForm.arrTitleNewButton}\r\n            </button>;\r\n        }\r\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\r\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\r\n            {button}\r\n        </div>;\r\n        return <List className=\"pb-3\"\r\n            header={header}\r\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\r\n            items={this.list}\r\n            item={{render: this.renderItem, onClick: this.editRow}} />;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { tv } from '../../../tools';\r\nimport { Field, Tuid } from '../../../entities';\r\nimport { VField, RedMark } from \"./vField\";\r\nimport { FieldUI } from '../../formUI';\r\nimport { VForm, FieldInput, FormMode } from '../vForm';\r\nimport { FieldRes } from '../vBand';\r\n\r\nconst buttonStyle:React.CSSProperties = {\r\n    textAlign:'left', \r\n    paddingLeft:'0.75rem', \r\n    paddingRight:'0.75rem', \r\n    overflow: 'hidden'\r\n};\r\n\r\nexport class VTuidField extends VField {\r\n    protected vForm: VForm;\r\n    protected input: FieldInput;\r\n    protected tuid: Tuid;\r\n\r\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\r\n        super(vForm, field, fieldUI, fieldRes);\r\n        this.tuid = field._tuid;\r\n        this.vForm = vForm;\r\n        this.input = vForm.inputs[field.name] as FieldInput;\r\n    }\r\n\r\n    onClick = async () => {\r\n        if (this.readonly === true) {\r\n            if (!this.value) return;\r\n            await this.tuid.showInfo(this.value.id);\r\n            return;\r\n        }\r\n        let id:number;\r\n        if (this.input !== undefined) {\r\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\r\n        }\r\n        else {\r\n            alert('call undefined');\r\n            id = 0;\r\n        }\r\n        this.setValue(this.tuid.boxId(id));\r\n    }\r\n    protected view = observer(() => {\r\n        let {placeHolder} = this.fieldRes;\r\n        let disabled:boolean = false;\r\n        let {_ownerField} = this.field;\r\n        if (_ownerField !== undefined) {\r\n            let {name, arr} = _ownerField;\r\n            disabled = this.vForm.getValue(name) === null;\r\n        }\r\n        let content;\r\n        if (this.value === null)\r\n            content = <>{placeHolder || this.input.placeHolder}</>;\r\n        else if (typeof this.value === 'object') {\r\n            content = tv(this.value);\r\n        }\r\n        else {\r\n            let idBox = this.tuid.boxId(this.value);\r\n            content = tv(idBox); // idBox.content();\r\n        }\r\n        if (this.readonly === true)\r\n        {\r\n            return <div \r\n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </div>;\r\n        }\r\n        let redDot;\r\n        let {required} = this.fieldUI;\r\n        if (required === true || this.field.null === false) {\r\n            redDot = <RedMark />;\r\n        }\r\n        return <>\r\n            {redDot}\r\n            <button className=\"form-control btn btn-outline-info\"\r\n                type=\"button\"\r\n                disabled={disabled}\r\n                style={buttonStyle}\r\n                onClick={this.onClick}>\r\n                {content}\r\n            </button>\r\n        </>;\r\n    })\r\n}\r\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\r\nimport { Field, ArrFields } from \"../../entities\";\r\nimport { VForm, FormOptions } from \"./vForm\";\r\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\r\nimport { VSubmit } from \"./vSubmit\";\r\nimport { VField, buildVField, VComputeField } from \"./vField\";\r\nimport { VArr } from \"./vArr\";\r\nimport { VTuidField } from \"./vField/vTuidField\";\r\n\r\nexport class BandsBuilder {\r\n    private vForm: VForm;\r\n    private onSubmit: (values:any)=>Promise<void>;\r\n    private fields: Field[];\r\n    private arrs: ArrFields[];\r\n    private formItems: FormItems;\r\n    private layout: string[];\r\n    private res: any;\r\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.vForm = vForm;\r\n        this.onSubmit = onSubmit;\r\n        let {fields, arrs, ui, res} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        if (ui !== undefined) {\r\n            let {items, layout} = ui;\r\n            this.formItems = items;\r\n            this.layout = layout;\r\n        }\r\n        this.res = res;\r\n    }\r\n\r\n    build():VBand[] {\r\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\r\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\r\n    }\r\n\r\n    private resFromName(name:string, res:any):string|FieldRes {\r\n        if (res === undefined) return;\r\n        let {fields} = res;\r\n        if (fields === undefined) return;\r\n        return fields[name] || name;\r\n    }\r\n\r\n    private bandsOnFly():VBand[] {\r\n        let bands:VBand[] = [];\r\n        this.bandsFromFields(bands, this.fields, this.res);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\r\n        }\r\n        if (this.onSubmit !== undefined) {\r\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\r\n        }\r\n        return bands;\r\n    }\r\n\r\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\r\n        if (fields === undefined) return;\r\n        for (let field of fields) bands.push(this.bandFromField(field, res));\r\n    }\r\n\r\n    private bandsFromLayout():VBand[] {\r\n        let bands:VBand[] = [];\r\n        /*\r\n        for (let bandUI of this.bandUIs)  {\r\n            let band = this.bandFromUI(bandUI);\r\n            bands.push(band);\r\n        }\r\n        */\r\n        return bands;\r\n    }\r\n\r\n    /*\r\n    private bandFromUI(bandUI:BandUI):VBand {\r\n        let {band} = bandUI;\r\n        switch (band) {\r\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\r\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\r\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\r\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\r\n        }\r\n    }\r\n    \r\n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\r\n        let {label} = bandUI;\r\n        let vField = this.vFieldFromUI(bandUI);\r\n        return new VFieldBand(label, vField);\r\n    }\r\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\r\n        let {label, name} = bandUI;\r\n        let vArr = this.vArrFromUI(bandUI);\r\n        return new VArrBand(label, vArr);\r\n    }\r\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\r\n        let {label, fieldUIs} = bandUI;\r\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\r\n        return new VFieldsBand(label, vFields);\r\n    }\r\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\r\n        if (this.onSubmit === undefined) return;\r\n        let vSubmit = new VSubmit(this.vForm);\r\n        return new VSubmitBand(vSubmit);\r\n    }\r\n    */\r\n/*\r\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\r\n        let fieldUI:FieldUI = undefined;\r\n        if (formItem !== undefined) {\r\n            if (typeof formItem === 'function') {\r\n                return new VComputeField(this.vForm, field, fieldRes);\r\n            }\r\n        }\r\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\r\n        if (ret !== undefined) return ret;\r\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\r\n    }\r\n*/\r\n    private bandFromField(field:Field, res:any):VBand {\r\n        let {name} = field;\r\n        let fieldRes:FieldRes;\r\n        let rfn = this.resFromName(name, res);\r\n        let label:string;\r\n        if (typeof rfn === 'object') {\r\n            label = rfn.label;\r\n            fieldRes = rfn;\r\n        }\r\n        else {\r\n            label = rfn as string;\r\n            fieldRes = undefined;\r\n        }\r\n        let vField:VField;\r\n        let formItem:FormItem;\r\n        if (this.formItems !== undefined) formItem = this.formItems[name];\r\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\r\n        //let fieldUI:FieldUI = undefined;\r\n        if (typeof formItem === 'function') {\r\n            vField = new VComputeField(this.vForm, field, fieldRes);\r\n        }\r\n        else {\r\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        if (vField === undefined) {\r\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\r\n        }\r\n        return new VFieldBand(label || name, vField);\r\n    }\r\n\r\n    private bandFromArr(arr: ArrFields):VBand {\r\n        let {name, fields} = arr;\r\n        //let row = JSONContent;\r\n        //let bands:VBand[] = [];\r\n        //this.bandsFromFields(bands, fields, res);\r\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\r\n        return new VArrBand(name, vArr);\r\n    }\r\n\r\n    /*\r\n    private vFieldFromUI(fieldUI:FieldUI):VField {\r\n        return;\r\n    }\r\n\r\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\r\n        return;\r\n    }\r\n    */\r\n}\r\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\r\nimport { Field } from '../../../entities';\r\nimport { FieldRes } from '../vBand';\r\nimport { VForm } from '../vForm';\r\nimport { FieldUI } from '../../formUI';\r\n\r\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\r\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\r\n    switch (field.type) {\r\n        default: return;\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n            vField = VIntField;\r\n            break;\r\n        case 'bigint':\r\n            let {_tuid} = field;\r\n            if (_tuid !== undefined) return;\r\n            vField = VIntField;\r\n            break;\r\n        case 'dec':\r\n            vField = VDecField;\r\n            break;\r\n        case 'char':\r\n            vField = VStringField;\r\n            break;\r\n        case 'text':\r\n            vField = VTextField;\r\n            break;\r\n        case 'datetime':\r\n            vField = VDateTimeField;\r\n            break;\r\n    }\r\n    return new vField(form, field, fieldUI, fieldRes);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { observer } from \"mobx-react\";\r\nimport { VBand } from './vBand';\r\nimport { BandsBuilder } from './bandsBuilder';\r\nimport { Field, ArrFields } from '../../entities';\r\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\r\nimport { VArr } from './vArr';\r\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\r\nimport { VField } from './vField';\r\nimport { VSubmit } from './vSubmit';\r\nimport { IObservableArray } from 'mobx';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\r\nexport interface FieldInput {\r\n    select: FieldCall;\r\n    content: React.StatelessComponent<any>;\r\n    placeHolder: string;\r\n}\r\nexport interface FieldInputs {\r\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\r\n}\r\nexport enum FormMode {new, edit, readonly}\r\n\r\nexport interface FormOptions {\r\n    fields: Field[];\r\n    arrs?: ArrFields[];\r\n    ui: FormUIBase;\r\n    res: any;\r\n    inputs: FieldInputs;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n    none: string;\r\n    mode: FormMode;\r\n}\r\n\r\nexport class VForm {\r\n    protected fields: Field[];\r\n    protected arrs: ArrFields[];\r\n    protected bands: VBand[];\r\n    protected bandColl: {[key:string]: VBand};\r\n    protected onSubmit: ()=>Promise<void>;\r\n\r\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\r\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\r\n        this.fields = fields;\r\n        this.arrs = arrs;\r\n        this.ui = ui;\r\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\r\n        this.res = res;\r\n        this.inputs = inputs;\r\n        this.none = none;\r\n        this.submitCaption = submitCaption;\r\n        this.arrNewCaption = arrNewCaption;\r\n        this.arrEditCaption = arrEditCaption;\r\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\r\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\r\n        else this.mode = mode;\r\n        this.buildFormValues();\r\n        this.buildBands(options, onSubmit);\r\n        this.onSubmit = onSubmit;\r\n    }\r\n\r\n    ui: FormUI;\r\n    res: any;\r\n    values: any;\r\n    errors: any;\r\n    formItems: FormItems;\r\n    mode: FormMode;\r\n    vFields: {[name:string]:VField} = {};\r\n    vArrs: {[name:string]: VArr} = {};\r\n    vSubmit: VSubmit;\r\n    inputs: FieldInputs;\r\n    none: string;\r\n    submitCaption: string;\r\n    arrNewCaption: string;\r\n    arrEditCaption: string;\r\n    arrTitleNewButton: JSX.Element;\r\n\r\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\r\n        this.bandColl = {};\r\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\r\n        this.bands = bandsBuilder.build();\r\n        for (let band of this.bands) {\r\n            this.bandColl[band.key] = band;\r\n            let vFields = band.getVFields();\r\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\r\n            let vArr = band.getVArr();\r\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\r\n            let vSubmit = band.getVSubmit();\r\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\r\n        }\r\n    }\r\n\r\n    private onFormSubmit = (event:React.FormEvent<any>) => {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    protected view = observer(({className}:{className:string}) => {\r\n        return <form className={className} onSubmit={this.onFormSubmit}>\r\n            {this.bands.map(v => v.render())}\r\n        </form>;\r\n    });\r\n\r\n    getBand(name:string) {\r\n        return this.bandColl[name];\r\n    }\r\n\r\n    computeFields() {\r\n        if (this.formItems === undefined) return;\r\n        let values = this.values;\r\n        for (let i in this.formItems) {\r\n            let item = this.formItems[i];\r\n            if (typeof item !== 'function') continue;\r\n            values[i] = item.call(this, values);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.onSubmit === undefined) return;\r\n        await this.onSubmit();\r\n    }\r\n    \r\n    getValues() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name} = f;\r\n            let v = values[name]\r\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\r\n        }\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                let {name, fields, id, order} = arr;\r\n                let list = ret[name] = [];\r\n                let rows = this.vArrs[name].list;\r\n                for (let row of rows) {\r\n                    let item = {} as any;\r\n                    if (id !== undefined) item[id] = row[id];\r\n                    if (order !== undefined) item[order] = row[order];\r\n                    for (let f of fields) {\r\n                        let {name:fn} = f;\r\n                        let v = row[fn]\r\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\r\n                    }\r\n                    list.push(item);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    get valueBoxs() {\r\n        let ret:any = {};\r\n        let values = this.values;\r\n        for (let f of this.fields) {\r\n            let {name, _tuid} = f;\r\n            let v = values[name]\r\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n        }\r\n        if (this.arrs === undefined) return ret;\r\n        for (let arr of this.arrs) {\r\n            let {name, fields, id, order} = arr;\r\n            let list = ret[name] = this.vArrs[name].list.slice();\r\n            for (let row of list) {\r\n                for (let f of fields) {\r\n                    let {name:fn, _tuid} = f;\r\n                    let v = row[fn]\r\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    setValues(initValues:any) {\r\n        if (initValues === undefined) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            errors[fn] = undefined;\r\n            let v =  initValues[fn];\r\n            values[fn] = v;\r\n        }\r\n        // 还要设置arrs的values\r\n        for (let i in this.vArrs) {\r\n            let list = initValues[i];\r\n            if (list === undefined) continue;\r\n            let arrList = values[i] as IObservableArray<any>;\r\n            arrList.clear();\r\n            arrList.push(...list);\r\n        }\r\n    }\r\n\r\n    @computed get isOk():boolean {\r\n        for (let i in this.vFields) {\r\n            if (this.vFields[i].isOk === false) return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        let values = this.values;\r\n        let errors = this.errors;\r\n        for (let f of this.fields) {\r\n            let fn = f.name;\r\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\r\n            values[fn] = null;\r\n            errors[fn] = undefined;\r\n        }\r\n        for (let i in this.vFields) {\r\n            let ctrl = this.vFields[i];\r\n            let cn = ctrl.name;\r\n            if (cn === undefined) continue;\r\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\r\n            ctrl.setValue(null);\r\n        }\r\n        for (let i in this.vArrs) {\r\n            let vArr = this.vArrs[i];\r\n            vArr.reset();\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        return this.values[fieldName];\r\n    }\r\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\r\n\r\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\r\n\r\n    private buildFieldValues(fields: Field[]):any {\r\n        let v: {[p:string]: any} = {\r\n            valueFromFieldName: function(propName:string) {\r\n                return this[propName];\r\n            }\r\n        };\r\n        for (let f of fields) {\r\n            let fn = f.name;\r\n            v[fn] = null;\r\n        }\r\n        return v;\r\n    }\r\n    private buildObservableValues():IObservableObject {\r\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\r\n        if (this.arrs !== undefined) {\r\n            for (let arr of this.arrs) {\r\n                v[arr.name] = observable.array([], {deep:true});\r\n            }\r\n        }\r\n        let ret = observable(v);\r\n        return ret;\r\n    }\r\n    private buildFormValues() {\r\n        this.values = this.buildObservableValues();\r\n        this.errors = observable(this.buildFieldValues(this.fields));\r\n    }\r\n\r\n    render(className:string = \"py-3\"):JSX.Element {\r\n        return <this.view className={className} />\r\n    }\r\n}\r\n","export * from './vForm';\r\n","import {bridgeCenterApi, isBridged} from './appBridge';\r\nimport {FetchError} from '../fetchError';\r\nimport {HttpChannelUI} from './httpChannelUI';\r\nimport {nav} from '../ui/nav';\r\nimport { isDevelopment } from './host';\r\n\r\nexport async function httpGet(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.get('', params);\r\n    return ret;\r\n}\r\n\r\nexport async function httpPost(url:string, params?:any):Promise<any> {\r\n    let channel = new HttpChannel(false, url, undefined, undefined);\r\n    let ret = await channel.post('', params);\r\n    return ret;\r\n}\r\n\r\nexport class HttpChannel {\r\n    private isCenter: boolean;\r\n    private hostUrl: string;\r\n    private apiToken: string;\r\n    private ui?: HttpChannelUI;\r\n    private timeout: number;\r\n\r\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\r\n        this.isCenter = isCenter;\r\n        this.hostUrl = hostUrl;\r\n        this.apiToken = apiToken;\r\n        this.ui = ui;\r\n        this.timeout = isDevelopment === true? 500000:5000;\r\n    }\r\n\r\n    private startWait = () => {\r\n        if (this.ui !== undefined) this.ui.startWait();\r\n    }\r\n\r\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\r\n        if (this.ui !== undefined) this.ui.endWait();\r\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\r\n    }\r\n\r\n    private showError = async (error:FetchError) => {\r\n        if (this.ui !== undefined) await this.ui.showError(error);\r\n    }\r\n\r\n    used() {\r\n        this.post('', {});\r\n    }\r\n\r\n    async get(url: string, params: any = undefined): Promise<any> {\r\n        if (params) {\r\n            let keys = Object.keys(params);\r\n            if (keys.length > 0) {\r\n                let c = '?';\r\n                for (let k of keys) {\r\n                    let v = params[k];\r\n                    if (v === undefined) continue;\r\n                    url += c + k + '=' + params[k];\r\n                    c = '&';\r\n                }\r\n            }\r\n        }\r\n        let options = this.buildOptions();\r\n        options.method = 'GET';\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async post(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'POST';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async put(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'PUT';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n\r\n    async delete(url: string, params: any): Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = 'DELETE';\r\n        options.body = JSON.stringify(params);\r\n        return await this.innerFetch(url, options);\r\n    }\r\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\r\n        let that = this;\r\n        this.startWait();\r\n        let path = url;\r\n        function buildError(err: string) {\r\n            return {\r\n                channel: that,\r\n                url: path,\r\n                options: options,\r\n                resolve: resolve,\r\n                reject: reject,\r\n                error: err,\r\n            }\r\n        }\r\n        try {\r\n            console.log('%s %s', options.method, path);\r\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\r\n            let res = await fetch(encodeURI(path), options);\r\n            if (res.ok === false) {\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                console.log('call error %s', res.statusText);\r\n                throw res.statusText;\r\n            }\r\n            let ct = res.headers.get('content-type');\r\n            if (ct && ct.indexOf('json')>=0) {\r\n                return res.json().then(async retJson => {\r\n                    clearTimeout(timeOutHandler);\r\n                    that.endWait();\r\n                    if (retJson.ok === true) {\r\n                        return resolve(retJson.res);\r\n                    }\r\n                    if (retJson.error === undefined) {\r\n                        await that.showError(buildError('not valid tonva json'));\r\n                    }\r\n                    else {\r\n                        await that.showError(buildError(retJson.error));\r\n                        reject(retJson.error);\r\n                    }\r\n                    //throw retJson.error;\r\n                }).catch(async error => {\r\n                    await that.showError(buildError(error.message));\r\n                });\r\n            }\r\n            else {\r\n                let text = await res.text();\r\n                clearTimeout(timeOutHandler);\r\n                that.endWait();\r\n                resolve(text);\r\n            }\r\n        }\r\n        catch(error) {\r\n            if (typeof error === 'string') {\r\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\r\n                    nav.logout();\r\n                    return;\r\n                }\r\n            }\r\n            await this.showError(buildError(error.message));\r\n        };\r\n    }\r\n\r\n    private async innerFetch(url: string, options: any): Promise<any> {\r\n        let u = this.hostUrl + url;\r\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\r\n            return await bridgeCenterApi(u, options.method, options.body);\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(u, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    async callFetch(url:string, method:string, body:any):Promise<any> {\r\n        let options = this.buildOptions();\r\n        options.method = method;\r\n        options.body = body;\r\n        return await new Promise<any>(async (resolve, reject) => {\r\n            await this.fetch(url, options, resolve, reject);\r\n        });\r\n    }\r\n\r\n    private buildOptions(): any {\r\n        let {language, culture} = nav;\r\n        let headers = new Headers();\r\n        //headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n        let lang = language;\r\n        if (culture) lang += '-' + culture;\r\n        headers.append('Accept-Language', lang);\r\n        if (this.apiToken) { \r\n            headers.append('Authorization', this.apiToken); \r\n        }\r\n        let options = {\r\n            headers: headers,\r\n            // cache: 'no-cache',\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport interface KeyValueRes {\r\n    [key:string]: any;\r\n}\r\n\r\nexport interface Res<T extends KeyValueRes> {\r\n    [lang:string]: T | {[district:string]: T};\r\n}\r\n\r\nexport const resOptions:{lang:string, district:string} = {\r\n    lang: undefined,\r\n    district: undefined,\r\n}\r\n\r\nexport function setResOptions(lang:string, district:string) {\r\n    resOptions.lang = lang;\r\n    resOptions.district = district;\r\n}\r\n\r\n(function() {\r\n    let lang: string, district: string;\r\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\r\n        navigator.language; // ||   // All browsers\r\n    //navigator.userLanguage; // IE <= 10\r\n    if (!language) {\r\n        lang = 'zh';\r\n        district = 'CN';\r\n    }\r\n    else {\r\n        let parts = language.split('-');\r\n        lang = parts[0];\r\n        if (parts.length > 1) district = parts[1];\r\n    }\r\n    setResOptions(lang, district);\r\n}());\r\n\r\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\r\n    let {lang, district} = resOptions;\r\n    let ret:T = {} as T;\r\n    if (res === undefined) return ret;\r\n    _.merge(ret, res._);\r\n    let l = res[lang];\r\n    if (l === undefined) return ret;\r\n    _.merge(ret, l._);\r\n    let d = l[district];\r\n    if (d === undefined) return ret;\r\n    _.merge(ret, d);\r\n    let {entity} = ret;\r\n    if (entity !== undefined) {\r\n        for (let i in entity) {\r\n            entity[i.toLowerCase()] = entity[i];\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","export * from './CApp';\r\nexport * from './startApp';\r\nexport * from './uq';\r\nexport * from './action';\r\nexport * from './tuid';\r\nexport * from './sheet';\r\nexport * from './query';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\nexport * from './form/viewModel';\r\nexport * from './form';\r\nexport * from './formUI';\r\nexport * from './ControllerUq';\r\nexport * from './CVEntity';\r\nexport * from './link';\r\nexport * from './icons';\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Rule} from '../rule';\r\n\r\nexport abstract class ControlBase {\r\n    protected formView: FormView;\r\n    constructor(formView:FormView) {\r\n        this.formView = formView;\r\n    }\r\n    render():JSX.Element {\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n        </div>;\r\n    }\r\n    protected abstract renderControl():JSX.Element;\r\n    @computed get hasError():boolean {return false;}\r\n    @computed get filled():boolean {return false;}\r\n    clear() {}\r\n    clearErrors() {}\r\n    readValues(values:any):any {}\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    isOk():boolean {this.validate(); return !this.hasError;}\r\n    protected validate() {}\r\n}\r\n\r\nexport abstract class Control extends ControlBase {\r\n    protected field: Field;\r\n    protected face: Face;\r\n    protected props: any;\r\n    protected rules: Rule[];\r\n\r\n    protected element: HTMLElement;\r\n    @observable protected isOK?: boolean;\r\n    @observable protected error: string;\r\n    @observable protected value: any;\r\n\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView);\r\n        this.field = field;\r\n        this.face = face;\r\n        this.init();\r\n        this.setProps();\r\n    }\r\n    protected ref(element: HTMLElement) {\r\n        this.element = element;\r\n    }\r\n    protected init() {\r\n        this.rules = [];\r\n        let r = this.field.rules;\r\n        if (r !== undefined) {\r\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\r\n            else this.rules.push(r as Rule);\r\n        }\r\n    };\r\n    protected setProps():any {\r\n        return this.props = {\r\n            ref: this.ref.bind(this),\r\n            name: this.field.name,\r\n        }\r\n    };\r\n    @computed get hasError():boolean {return this.error !== undefined;}\r\n    @computed get filled():boolean {\r\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\r\n        return ret;\r\n    }\r\n    clearValue() { this.value = undefined; }\r\n    clear() { this.clearErrors(); this.clearValue(); }\r\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\r\n    readValues(values:any):any {\r\n        values[this.field.name] = this.value;\r\n    }\r\n    setError(fieldName:string, error:string) {}\r\n    setInitValues(values: any) {}\r\n    protected getValueFromElement():any {return this.value;}\r\n    protected validate() {\r\n        try {\r\n            let v = this.getValueFromElement();\r\n            if (this.rules.length > 0) {\r\n                let isOk:boolean;\r\n                for (let rule of this.rules) {\r\n                    console.log('validate: %s', v);\r\n                    let err = rule(v);\r\n                    console.log('validate: %s err: %s', v, err);\r\n                    if (err === true) {\r\n                        this.error = undefined;\r\n                        isOk = true;\r\n                    }\r\n                    else if (err !== undefined) {\r\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \r\n                        //    this.field.name, JSON.stringify(v), rule, err);\r\n                        this.error = err;\r\n                        this.isOK = false;\r\n                        return;\r\n                    }\r\n                }\r\n                this.isOK = isOk;\r\n            }\r\n            this.value = v;\r\n        }\r\n        catch (e) {\r\n            this.error = e.message;\r\n        }\r\n    }\r\n    render():JSX.Element {\r\n        let n;\r\n        if (this.face !== undefined) {\r\n            let {notes} = this.face;\r\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\r\n        }\r\n        return <div className=\"col-sm-10\">\r\n            {this.renderControl()}\r\n            {n}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {ControlBase} from './control';\r\n\r\nexport class ButtonsControl extends ControlBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.otherClick = this.otherClick.bind(this);\r\n    }\r\n    private otherClick() {\r\n        let onOther = this.formView.props.onOther;\r\n        if (onOther === undefined) return;\r\n        let values = this.formView.readValues();\r\n        onOther(values);\r\n    }\r\n    renderControl():JSX.Element {\r\n        console.log('buttons.renderControl');\r\n        let nothing = this.formView.nothing;\r\n        let hasError = this.formView.hasError;\r\n        let props = this.formView.props;\r\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\r\n        let {submitButton, otherButton, onOther} = props;\r\n        let btnOther;\r\n        if (otherButton !== undefined) {\r\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\r\n                {otherButton}\r\n            </button>\r\n        }\r\n        return <div className=\"d-flex justify-content-start\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\" \r\n                disabled={nothing || hasError}>\r\n                {submitButton || '提交'}\r\n            </button>\r\n            {btnOther}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, Placeholder} from '../face';\r\nimport {Control} from './control';\r\n\r\nconst TxtRequired = '必须填入要求内容';\r\n\r\nexport abstract class CharsControl extends Control {\r\n    protected init() {\r\n        super.init();\r\n        if (this.field.required === true) {\r\n            this.rules.push((v) => {\r\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected element: HTMLInputElement;\r\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onBlur: this.onBlur.bind(this),\r\n            onFocus: this.onFocus.bind(this),\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n        let face = this.face as Placeholder;\r\n        if (face !== undefined) {\r\n            _.assign(this.props, {\r\n                placeholder: face.placeholder,\r\n            });\r\n        }\r\n        return this.props;\r\n    };\r\n    protected parseValue(value?:string):any {return value;}\r\n    private onBlur() {\r\n        //console.log('field %s onBlure', this.field.name);\r\n        this.validate();\r\n    }\r\n    private onChange() {\r\n        console.log('onChange');\r\n        this.validate();\r\n    }\r\n    private onFocus() {\r\n        this.clearErrors();\r\n        //this.error = undefined;\r\n        //this.formView.clearErrors();\r\n    }\r\n    protected className() {\r\n        return classNames({\r\n            \"form-control\": true,\r\n            \"has-success\": this.isOK === true,\r\n            \"is-invalid\": this.error !== undefined,\r\n            \"is-valid\": this.error === undefined && this.isOK === true,\r\n        });\r\n    }\r\n    protected renderInput():JSX.Element {\r\n        return <input className={this.className()} {...this.props} />;\r\n    }\r\n    protected ref(element: HTMLInputElement) {\r\n        super.ref(element);\r\n        if (element) {\r\n            element.value = this.value === undefined? '':this.value;\r\n        }\r\n    }\r\n    protected renderError():JSX.Element {\r\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\r\n        if (this.error === undefined) return null;\r\n        return <div className=\"invalid-feedback\">{this.error}</div>\r\n    }\r\n    clearValue() { super.clearValue(); this.element.value = ''; }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.field.name === fieldName) this.error = error;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) return;\r\n        //this.element.value = v;\r\n        this.value = v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <React.Fragment>\r\n            {this.renderInput()}\r\n            {this.renderError()}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\n\r\nexport class StringControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'text',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class PasswordControl extends StringControl {\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        _.assign(p, {\r\n            type: 'password',\r\n            maxLength: this.field.maxLength,\r\n        });\r\n        return p;\r\n    };\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {IntField, DecField, NumberField} from '../field';\r\nimport {CharsControl} from './charsControl';\r\n\r\nconst ErrInvalidNumber = '无效的数字';\r\nconst ErrMin = '最小值为';\r\nconst ErrMax = '最大值为';\r\n\r\nconst KeyCode_Neg = 45;\r\nconst KeyCode_Dot = 46;\r\n\r\nexport class NumberControl extends CharsControl {\r\n    protected field: IntField | DecField | NumberField;\r\n    protected value: number;\r\n    protected extraChars: number[];\r\n    \r\n    protected init() {\r\n        super.init();\r\n        this.extraChars = [];\r\n        let {min, max} = this.field;\r\n        if (min !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\r\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\r\n        }\r\n        else {\r\n            this.extraChars.push(KeyCode_Neg);\r\n        }\r\n\r\n        if (max !== undefined) {\r\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\r\n        }\r\n        switch (this.field.type) {\r\n            case 'dec':\r\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\r\n        }\r\n    }\r\n\r\n    protected parseValue(value?:string):any {\r\n        if (value === undefined) return undefined;\r\n        if (value.trim().length === 0) return undefined;\r\n        let n = Number.parseFloat(value);\r\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\r\n        return n;\r\n    }\r\n\r\n    protected setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            type: 'number',\r\n            step: (this.field as DecField).step,\r\n            onKeyPress: this.onKeyPress.bind(this),\r\n        });\r\n    }\r\n\r\n    onKeyPress(event:KeyboardEvent) {\r\n        let ch = event.charCode;\r\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\r\n        if (this.extraChars !== undefined) {\r\n            if (this.extraChars.indexOf(ch) >= 0) {\r\n                switch (ch) {\r\n                    case KeyCode_Dot: this.onKeyDot(); break;\r\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    private onKeyDot() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('.');\r\n        if (p >= 0) this.element.value = v.replace('.', '');\r\n    }\r\n    private onKeyNeg() {\r\n        let v = this.element.value;\r\n        let p = v.indexOf('-');\r\n        if (p >= 0) v = v.replace('-', '');\r\n        else v = '-'+v;\r\n        this.element.value = v;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Control, ControlBase} from './control';\r\nimport {FormView} from '../formView';\r\n\r\nexport class UnknownControl extends Control {\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n            don't know how to create control<br/>\r\n            field: {JSON.stringify(this.field)} must be object <br/>\r\n            face: {JSON.stringify(this.face)} must be object <br/>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class EmptyControl extends ControlBase {\r\n    private element:JSX.Element;\r\n    constructor(formView:FormView, element:JSX.Element) {\r\n        super(formView);\r\n        this.element = element;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.element}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, IdPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickIdControl extends Control {\r\n    protected face: IdPickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    onPicked = (value: any) => {\r\n        this.value = value.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private controlContent():string|JSX.Element {\r\n        let {itemFromId, fromPicked, initCaption} = this.face;\r\n        if (this.value === undefined) {\r\n            return initCaption || '请选择Id';\r\n        }\r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        if (itemFromId !== undefined) {\r\n            if (fromPicked !== undefined) {\r\n                let item = itemFromId(this.value);\r\n                if (item) {\r\n                    let ret = fromPicked(item);\r\n                    if (ret !== undefined) return ret.caption;\r\n                }\r\n            }\r\n        }\r\n        return String(this.value);\r\n    }\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\r\n                onClick={this.onClick}>\r\n                {this.controlContent()}\r\n            </div>;\r\n        }\r\n        return <div className=\"form-control-static \">\r\n            <input.component id={this.value} \r\n                ui={tuid}\r\n                //input={input}\r\n                //entitiesUI={this.formView.props.context} \r\n                //params={this.formView.readValues()}\r\n                //onPicked={this.onPicked}\r\n                />\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, TuidPickFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class PickTuidControl extends Control {\r\n    protected face: TuidPickFace;\r\n    // protected value: number;\r\n    @observable private caption: string|JSX.Element;\r\n    constructor(formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.onIdChanged = this.onIdChanged.bind(this);\r\n        //this.onClick = this.onClick.bind(this);\r\n    }\r\n    /*\r\n    private async onClick() {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        if (fromPicked === undefined) {\r\n            this.value = item.id;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }*/\r\n    onIdChanged(id: any) {\r\n        this.value = id.id;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    private buildContent():JSX.Element {\r\n        //let {tuid, input} = this.face;\r\n        return <this.face.input.component \r\n            {...this.face}\r\n            id={this.value}\r\n            //ui={this.face.ui}\r\n            //input={input}\r\n            //entitiesUI={this.formView.props.context} \r\n            onFormValues={()=>this.formView.readValues()}\r\n            onIdChanged={this.onIdChanged} />;\r\n    }\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static \">\r\n            {this.buildContent()}\r\n        </div>;\r\n    }\r\n}\r\n/*\r\n<button className=\"form-control btn btn-outline-info\"\r\ntype=\"button\"\r\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\r\nonClick={this.onClick}>\r\n{this.buildContent()}\r\n</button>\r\n*/","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, PickFace} from '../face';\r\nimport {Control} from './control';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class PickControl extends Control {\r\n    protected face: PickFace;\r\n    @observable private caption: string|JSX.Element;\r\n\r\n    private onClick = async () => {\r\n        let {pick, fromPicked} = this.face;\r\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\r\n        if (item === undefined) {\r\n            this.value = undefined;\r\n            return;\r\n        }\r\n        let {id, caption} = fromPicked(item);\r\n        this.value = id;\r\n        this.caption = caption;\r\n    }\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        this.value = v;\r\n    }\r\n    /*\r\n    private controlContent():string|JSX.Element {\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined) {\r\n            return '请选择';\r\n        }\r\n        \r\n        if (this.caption !== undefined) {\r\n            return this.caption;\r\n        }\r\n        return <Content id={this.value} />;\r\n    }*/\r\n    /*\r\n    private buildContent():string|JSX.Element {\r\n        let {tuid, input} = this.face;\r\n        if (input === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\r\n        }\r\n        return <input.component id={this.value} \r\n            tuid={tuid}\r\n            input={input}\r\n            entitiesUI={this.formView.props.context} \r\n            params={this.formView.readValues()}\r\n            onPicked={this.onPicked} />;\r\n    }*/\r\n    renderControl():JSX.Element {\r\n        return <this.view />;\r\n        /*\r\n        let {content:Content} = this.face;\r\n        //if (this.value === undefined) {\r\n            //return <div>no input on idpick</div>;\r\n        //}\r\n        //return <div className=\"form-control-static \">\r\n        //    <Content />\r\n        //</div>;\r\n        */\r\n    }\r\n\r\n    private view = observer(() => {\r\n        let content;\r\n        let {content: Content} = this.face;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = '请选择';\r\n        }\r\n        /*\r\n        else if (this.caption !== undefined) {\r\n            content = this.caption;\r\n        }*/\r\n        else {\r\n            content = <Content id={this.value} />;\r\n        } \r\n        return <div\r\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\r\n            onClick={this.onClick}>\r\n            {content}\r\n        </div>\r\n    });\r\n}\r\n","export * from './control';\r\nexport * from './buttonsControl';\r\nexport * from './stringControl';\r\nexport * from './numberControl';\r\n\r\nimport {Field} from '../field';\r\nimport {Face} from '../face';\r\nimport {Control, ControlBase} from './control';\r\nimport {ButtonsControl} from './buttonsControl';\r\nimport {CheckControl} from './checkControl';\r\nimport {RadioControl} from './radioControl';\r\nimport {TextAreaControl} from './textAreaControl';\r\nimport {SelectControl} from './selectControl';\r\nimport {UnknownControl, EmptyControl} from './unknownControl';\r\nimport {StringControl, PasswordControl} from './stringControl';\r\nimport {NumberControl} from './numberControl';\r\n\r\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\r\nimport { PickIdControl } from './pickIdControl';\r\nimport { PickTuidControl } from './pickTuidControl';\r\nimport { PickControl } from './pickControl';\r\n\r\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\r\n\r\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\r\n    let label = row.label;\r\n    if ((<GroupRow>row).group !== undefined)\r\n        return createGroupControl(form, label, row as GroupRow);\r\n    if ((<FieldRow>row).field !== undefined)\r\n        return createFieldControl(form, label, row as FieldRow);\r\n    return new EmptyControl(form, row.help);\r\n}\r\n\r\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\r\n    \"string\": StringControl,\r\n    \"password\": PasswordControl,\r\n    \"number\": NumberControl,\r\n    \"checkbox\": CheckControl,\r\n    \"radiobox\": RadioControl,\r\n    \"select\": SelectControl,\r\n    \"pick-id\": PickIdControl,\r\n    \"pick-tuid\": PickTuidControl,\r\n    \"textarea\": TextAreaControl,\r\n    \"pick\": PickControl,\r\n};\r\nconst defaultFaces:{[type:string]: Face} = {\r\n    \"string\": {type:'string'},\r\n    \"number\": {type:'number'},\r\n    \"int\": {type:'number'},\r\n    \"dec\": {type:'number'},\r\n    \"bool\": {type:'checkbox'},\r\n}\r\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\r\n    let {field, face} = fieldRow;\r\n    switch (typeof field) {\r\n        case 'string':\r\n            field = {\r\n                name: (field as any) as string,\r\n                type: 'string',\r\n            }\r\n            break;\r\n        case 'object':\r\n            break;\r\n        default:\r\n            return new UnknownControl(form, field, face);\r\n    }\r\n    let fieldType = field.type || 'string';\r\n    if (face === undefined) {\r\n        face = defaultFaces[fieldType];\r\n        if (face === undefined) return new UnknownControl(form, field, face);\r\n    }\r\n    else if (face.type === undefined) {\r\n        let f = defaultFaces[fieldType];\r\n        face.type = f===undefined? 'string' : f.type;\r\n    }\r\n    let control = controls[face.type || fieldType] || UnknownControl;\r\n    return new control(form, field, face);\r\n}\r\n\r\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\r\n    return new UnknownControl(form, groupRow as any, undefined);\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field, BoolField} from '../field';\r\nimport {Face, CheckBoxFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class CheckControl extends Control {    \r\n    protected element: HTMLInputElement;\r\n    protected field: BoolField;\r\n    protected face: CheckBoxFace;\r\n    private trueValue: any;\r\n    private falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        let {trueValue, falseValue} = this.field;\r\n        if (trueValue === undefined) this.trueValue = 1;\r\n        if (falseValue === undefined) this.falseValue = 0;\r\n    }\r\n\r\n    setProps() {\r\n        super.setProps();\r\n        _.assign(this.props, {\r\n            onChange: this.onChange.bind(this),\r\n        });\r\n    }\r\n\r\n    clearValue() {\r\n        this.element.checked = this.field.defaultValue === this.trueValue;\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    setInitValues(values: any) {\r\n        let v = values[this.field.name];\r\n        if (v === undefined) {\r\n            v = this.field.defaultValue;\r\n        }\r\n        if (v !== undefined) {\r\n            //this.element.checked = v === this.trueValue;\r\n            //this.value = this.getValueFromElement();\r\n        }\r\n    }\r\n\r\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\r\n\r\n    private onChange() {\r\n        this.value = this.getValueFromElement();\r\n    }\r\n\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <label className=\"form-control\">\r\n                <label className=\"custom-control custom-checkbox mb-0\">\r\n                    <input type='checkbox'\r\n                        name={this.field.name}\r\n                        ref={this.props.ref}\r\n                        onChange={this.props.onChange}\r\n                        className=\"custom-control-input\" />\r\n                    <span className=\"custom-control-indicator\" />\r\n                    <span className=\"custom-control-description\">{this.face.label}</span>\r\n                </label>\r\n            </label>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, RadioFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class RadioControl extends Control {\r\n    protected face: RadioFace;\r\n    renderControl():JSX.Element {\r\n        return <div className=\"form-control-static\">\r\n            <div className=\"form-control\">\r\n            {\r\n                this.face.list.map((item, index) => {\r\n                    let t, v;\r\n                    if (typeof item !== 'object') t = v = item;\r\n                    else {\r\n                        t = item.text;\r\n                        v = item.value;\r\n                    }\r\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\r\n                        <input type='radio'\r\n                            name={this.field.name} \r\n                            className=\"custom-control-input\" />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                        <span className=\"custom-control-description\">{t}</span>\r\n                    </label>;\r\n                })\r\n            }\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport * as _ from 'lodash';\r\nimport {FormView} from '../formView';\r\nimport {Field} from '../field';\r\nimport {Face, SelectFace} from '../face';\r\nimport {Control} from './control';\r\n\r\nexport class SelectControl extends Control {\r\n    constructor (formView:FormView, field:Field, face:Face) {\r\n        super(formView, field, face);\r\n        this.ref = this.ref.bind(this);\r\n    }\r\n    protected face: SelectFace;\r\n    protected element: HTMLSelectElement;\r\n    protected getValueFromElement():any {\r\n        let {selectedIndex, selectedOptions} = this.element;\r\n        let v:any = selectedOptions[0].value;\r\n        switch (this.field.type) {\r\n            case 'number': v = Number(v); break;\r\n            case 'date': v = new Date(v); break;\r\n            case 'bool': \r\n                if (typeof v === 'string') {\r\n                    v = ((v as string).toLowerCase() === 'true');\r\n                }\r\n                break;\r\n        }\r\n        return v;\r\n    }\r\n    renderControl():JSX.Element {\r\n        let {list} = this.face;\r\n        let def = this.face.default;\r\n        let options: any[] = [];\r\n        if (def === undefined)\r\n            options.push(<option key={-1} value={undefined}>请选择</option>);\r\n        options.push(...list.map((item, index) => {\r\n            let t, v;\r\n            if (typeof item !== 'object') t = v = item;\r\n            else {\r\n                t = item.text;\r\n                v = item.value;\r\n            }\r\n            return <option key={index} value={v}>{t}</option>;\r\n        }));\r\n        return <div className=\"form-control-static\">\r\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\r\n                {options}\r\n            </select>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport {CharsControl} from './charsControl';\r\nimport {StringField} from '../field';\r\nimport {TextAreaFace} from '../face';\r\n\r\nexport class TextAreaControl extends CharsControl {\r\n    protected field: StringField;\r\n    protected face: TextAreaFace;\r\n    private el: HTMLTextAreaElement;\r\n    protected setProps() {\r\n        let p = super.setProps();\r\n        let {maxLength} = this.field;\r\n        let {rows} = this.face;\r\n        _.assign(p, {\r\n            maxLength: maxLength,\r\n            rows: rows,\r\n        });\r\n        return p;\r\n    };\r\n    protected renderInput():JSX.Element {\r\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\r\n    }\r\n}\r\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\r\nimport { TuidMain, Tuid } from './tuid';\r\n\r\nconst tab = '\\t';\r\nconst ln = '\\n';\r\n\r\nexport abstract class Entity {\r\n    protected entities: Entities;\r\n    protected schema: any;\r\n    private jName: string;\r\n    sys?: boolean;\r\n    readonly name: string;\r\n    readonly typeId: number;\r\n    abstract get typeName(): string;\r\n    get sName():string {return this.jName || this.name}\r\n    fields: Field[];\r\n    arrFields: ArrFields[];\r\n    returns: ArrFields[];\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        this.entities = entities;\r\n        this.name = name;\r\n        this.typeId = typeId;\r\n        this.sys = this.name.indexOf('$') >= 0;\r\n    }\r\n\r\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\r\n\r\n    protected get tvApi() {return this.entities.uqApi;}\r\n    async getApiFrom() {return this.entities.uqApi;}\r\n\r\n    private fieldMaps: {[arr:string]: FieldMap} = {};\r\n    fieldMap(arr?:string): FieldMap {\r\n        if (arr === undefined) arr = '$';\r\n        let ret = this.fieldMaps[arr];\r\n        if (ret === undefined) {\r\n            let fields:Field[];\r\n            if (arr === '$') fields = this.fields;\r\n            else if (this.arrFields !== undefined) {\r\n                let arrFields = this.arrFields.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            else if (this.returns !== undefined) {\r\n                let arrFields = this.returns.find(v => v.name === arr);\r\n                if (arrFields !== undefined) fields = arrFields.fields;\r\n            }\r\n            if (fields === undefined) return {};\r\n            ret = {};\r\n            for (let f of fields) ret[f.name] = f;\r\n            this.fieldMaps[arr] = ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public async loadSchema():Promise<void> {\r\n        if (this.schema !== undefined) return;\r\n        let schema = await this.entities.uqApi.schema(this.name);\r\n        this.setSchema(schema);\r\n    }\r\n\r\n    public setSchema(schema:any) {\r\n        if (schema === undefined) return;\r\n        if (this.schema !== undefined) return;\r\n        this.schema = schema;\r\n        let {name, fields, arrs, returns} = schema;\r\n        if (name !== this.name) this.jName = name;\r\n        this.entities.buildFieldTuid(this.fields = fields);\r\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\r\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\r\n        //this.newMain = this.buildCreater(fields);\r\n        //this.newArr = this.buildArrCreater(arrs);\r\n        //this.newRet = this.buildArrCreater(returns);\r\n    }\r\n\r\n    schemaStringify():string {\r\n        return JSON.stringify(this.schema, (key:string, value:any) => {\r\n            if (key === '_tuid') return undefined;\r\n            return value;\r\n        }, 4);\r\n    }\r\n\r\n    tuidFromField(field:Field):Tuid {\r\n        let {_tuid, tuid} = field;\r\n        if (tuid === undefined) return;\r\n        if (_tuid !== undefined) return _tuid;\r\n        return field._tuid = this.entities.getTuid(tuid, undefined);\r\n    }\r\n\r\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\r\n        if (this.schema === undefined) return;\r\n        let {fields, arrs} = this.schema;\r\n        let entities = this.entities;\r\n        function getTuid(fn:string, fieldArr:Field[]) {\r\n            if (fieldArr === undefined) return;\r\n            let f = fieldArr.find(v => v.name === fn);\r\n            if (f === undefined) return;\r\n            return entities.getTuid(f.tuid, undefined);\r\n        }\r\n        let fn = fieldName.toLowerCase();\r\n        if (arrName === undefined) return getTuid(fn, fields);\r\n        if (arrs === undefined) return;\r\n        let an = arrName.toLowerCase();\r\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\r\n        if (arr === undefined) return;\r\n        return getTuid(fn, arr.fields);\r\n    }\r\n\r\n    protected buildParams(params:any):any {\r\n        let result = {};\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\r\n        let arrs = this.arrFields; \r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                let {name, fields} = arr;\r\n                let paramsArr:any[] = params[name];\r\n                if (paramsArr === undefined) continue;\r\n                let arrResult = [];\r\n                result[name] = arrResult;\r\n                for (let pa of params) {\r\n                    let rowResult = {};\r\n                    this.buildFieldsParams(rowResult, fields, pa);\r\n                    arrResult.push(rowResult);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\r\n        for (let field of fields) {\r\n            let {name} = field;\r\n            let d = params[name];\r\n            let val:any;\r\n            switch (typeof d) {\r\n                default: val = d; break;\r\n                case 'object':\r\n                    let tuid = field._tuid;\r\n                    if (tuid === undefined) val = d.id;\r\n                    else val = tuid.getIdFromObj(d);\r\n                    break;\r\n            }\r\n            result[name] = val;\r\n        }\r\n    }\r\n\r\n    pack(data:any):string {\r\n        let ret:string[] = [];\r\n        let fields = this.fields;\r\n        if (fields !== undefined) this.packRow(ret, fields, data);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                this.packArr(ret, arr.fields, data[arr.name]);\r\n            }\r\n        }\r\n        return ret.join('');\r\n    }\r\n    \r\n    private escape(row:any, field:Field):any {\r\n        let d = row[field.name];\r\n        switch (typeof d) {\r\n            default: return d;\r\n            case 'object':\r\n                let tuid = field._tuid;\r\n                if (tuid === undefined) return d.id;\r\n                return tuid.getIdFromObj(d);\r\n            case 'string':\r\n                let len = d.length;\r\n                let r = '', p = 0;\r\n                for (let i=0;i<len;i++) {\r\n                    let c = d.charCodeAt(i);\r\n                    switch(c) {\r\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\r\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\r\n                    }\r\n                }\r\n                return r + d.substring(p);\r\n            case 'undefined': return '';\r\n        }\r\n    }\r\n    \r\n    private packRow(result:string[], fields:Field[], data:any) {\r\n        let len = fields.length;\r\n        if (len === 0) return;\r\n        let ret = '';\r\n        ret += this.escape(data, fields[0]);\r\n        for (let i=1;i<len;i++) {\r\n            let f = fields[i];\r\n            ret += tab + this.escape(data, f);\r\n        }\r\n        result.push(ret + ln);\r\n    }\r\n    \r\n    private packArr(result:string[], fields:Field[], data:any[]) {\r\n        if (data !== undefined) {\r\n            for (let row of data) {\r\n                this.packRow(result, fields, row);\r\n            }\r\n        }\r\n        result.push(ln);\r\n    }\r\n    \r\n    unpackSheet(data:string):any {\r\n        let ret = {} as any; //new this.newMain();\r\n        //if (schema === undefined || data === undefined) return;\r\n        let fields = this.fields;\r\n        let p = 0;\r\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\r\n        let arrs = this.arrFields; //schema['arrs'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    unpackReturns(data:string):any {\r\n        let ret = {} as any;\r\n        //if (schema === undefined || data === undefined) return;\r\n        //let fields = schema.fields;\r\n        let p = 0;\r\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\r\n        let arrs = this.returns; //schema['returns'];\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs) {\r\n                //let creater = this.newRet[arr.name];\r\n                p = this.unpackArr(ret, arr, data, p);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\r\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\r\n        for (;p<len;p++) {\r\n            ch0 = ch;\r\n            ch = data.charCodeAt(p);\r\n            if (ch === 9) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                c = p+1;\r\n                ++i;\r\n                if (i>=fLen) break;\r\n            }\r\n            else if (ch === 10) {\r\n                let f = fields[i];\r\n                if (ch0 !== 8) {\r\n                    if (p>c) {\r\n                        let v = data.substring(c, p);\r\n                        ret[f.name] = this.to(ret, v, f);\r\n                    }\r\n                }\r\n                else {\r\n                    ret[f.name] = null;\r\n                }\r\n                ++p;\r\n                ++i;\r\n                break;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    private to(ret:any, v:string, f:Field):any {\r\n        switch (f.type) {\r\n            default: return v;\r\n            case 'datetime':\r\n            case 'date':\r\n            case 'time':\r\n                let date = new Date(Number(v));\r\n                return date;\r\n            case 'tinyint':\r\n            case 'smallint':\r\n            case 'int':\r\n            case 'dec': return Number(v);\r\n            case 'bigint':\r\n                let id = Number(v);\r\n                let {_tuid} = f;\r\n                if (_tuid === undefined) return id;\r\n                _tuid.useId(id, true);\r\n                return _tuid.boxId(id);\r\n        }\r\n    }\r\n\r\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\r\n        let vals:any[] = [], len = data.length;\r\n        let {name, fields} = arr;\r\n        while (p<len) {\r\n            let ch = data.charCodeAt(p);\r\n            if (ch === 10) {\r\n                ++p;\r\n                break;\r\n            }\r\n            let val = {} as any; //new creater();\r\n            vals.push(val);\r\n            p = this.unpackRow(val, fields, data, p);\r\n        }\r\n        ret[name] = vals;\r\n        return p;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable} from 'mobx';\r\nimport _ from 'lodash';\r\nimport { Entity } from './entity';\r\nimport { Entities, Field, ArrFields } from './entities';\r\nimport { isNumber } from 'util';\r\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\r\n\r\nexport class BoxId {\r\n    id: number;\r\n    obj?: any;\r\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\r\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\r\n    _$com?: any;\r\n    _$tuid?: Tuid;\r\n    getObj: ()=>any;\r\n}\r\n\r\nconst maxCacheSize = 1000;\r\nexport abstract class Tuid extends Entity {\r\n    private BoxId: ()=>void;\r\n    get typeName(): string { return 'tuid';}\r\n    private queue: number[] = [];               // 每次使用，都排到队头\r\n    private waitingIds: number[] = [];          // 等待loading的\r\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\r\n    idName: string;\r\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\r\n    unique: string[];\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    constructor(entities:Entities, name:string, typeId:number) {\r\n        super(entities, name, typeId);\r\n        this.buildIdBoxer();\r\n    }\r\n\r\n    abstract get Main():Tuid;\r\n\r\n    private buildIdBoxer() {\r\n        this.BoxId = function():void {};\r\n        let prototype = this.BoxId.prototype;\r\n        Object.defineProperty(prototype, '_$tuid', {\r\n            value: this,\r\n            writable: false,\r\n            enumerable: false,\r\n        })\r\n        Object.defineProperty(prototype, 'obj', {\r\n            enumerable: false,\r\n            get: function() {\r\n                if (this.id === undefined || this.id<=0) return undefined;\r\n                return this._$tuid.valueFromId(this.id);\r\n            }\r\n        })\r\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\r\n            let t:Tuid = this._$tuid;\r\n            return t.valueFromFieldName(fieldName, this.obj);\r\n        }\r\n        prototype.getObj = function():any {\r\n            if (this._$tuid !== undefined) {\r\n                return this._$tuid.getCacheValue(this.id);\r\n            }\r\n        }\r\n        prototype.toJSON = function() {return this.id}\r\n    }\r\n    boxId(id:number):BoxId {\r\n        this.useId(id);\r\n        let ret:BoxId = new this.BoxId();\r\n        ret.id = id;\r\n        return ret;\r\n    }\r\n    getTuidContent() {\r\n        return this.entities.cUq.getTuidContent(this);\r\n    }\r\n    getIdFromObj(item:any):number {\r\n        return item[this.idName];\r\n    }\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {id, unique} = schema;\r\n        this.idName = id;\r\n        this.unique = unique;\r\n        this.schemaFrom = this.schema.from;\r\n    }\r\n\r\n    private moveToHead(id:number) {\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.queue.push(id);\r\n    }\r\n\r\n    valueFromId(id:number|BoxId):any {\r\n        let _id:number;\r\n        let tId = typeof id;\r\n        switch (typeof id) {\r\n            case 'object': _id = (id as BoxId).id; break;\r\n            case 'number': _id = id as number; break;\r\n            default: return;\r\n        }\r\n        return this.getCacheValue(_id);\r\n    }\r\n    getCacheValue(id:number) {\r\n        let v = this.cache.get(id);\r\n        if (this.owner !== undefined && typeof v === 'object') {\r\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\r\n        }\r\n        return v;\r\n    }\r\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\r\n        if (obj === undefined) return;\r\n        let f = this.fields.find(v => v.name === fieldName);\r\n        if (f === undefined) return;\r\n        let v = obj[fieldName];\r\n        let {_tuid} = f;\r\n        if (_tuid === undefined) return v;\r\n        return _tuid.valueFromId(v);\r\n    }\r\n    resetCache(id:number) {\r\n        this.cache.delete(id);\r\n        let index = this.queue.findIndex(v => v === id);\r\n        this.queue.splice(index, 1);\r\n        this.useId(id);\r\n    }\r\n    useId(id:number, defer?:boolean) {\r\n        if (id === undefined || id === 0) return;\r\n        if (isNumber(id) === false) return;\r\n        if (this.cache.has(id) === true) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n        this.entities.cacheTuids(defer===true?70:20);\r\n        //let idVal = this.createID(id);\r\n        this.cache.set(id, id);\r\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\r\n            this.moveToHead(id);\r\n            return;\r\n        }\r\n\r\n        if (this.queue.length >= maxCacheSize) {\r\n            // 缓冲已满，先去掉最不常用的\r\n            let r = this.queue.shift();\r\n            if (r === id) {\r\n                // 如果移除的，正好是现在用的，则插入\r\n                this.queue.push(r);\r\n                return;\r\n            }\r\n\r\n            //let rKey = String(r);\r\n            if (this.cache.has(r) === true) {\r\n                // 如果移除r已经缓存\r\n                this.cache.delete(r);\r\n            }\r\n            else {\r\n                // 如果移除r还没有缓存\r\n                let index = this.waitingIds.findIndex(v => v === r);\r\n                this.waitingIds.splice(index, 1);\r\n            }\r\n        }\r\n        this.waitingIds.push(id);\r\n        this.queue.push(id);\r\n        return;\r\n    }\r\n    async proxied(name:string, id:number):Promise<any> {\r\n        let proxyTuid = this.entities.getTuid(name, undefined);\r\n        proxyTuid.useId(id);\r\n        let proxied = await this.tvApi.proxied(this.name, name, id);\r\n        this.cacheValue(proxied);\r\n        return proxied;\r\n    }\r\n    cacheValue(val:any):boolean {\r\n        if (val === undefined) return false;\r\n        let id = this.getIdFromObj(val);\r\n        if (id === undefined) return false;\r\n        let index = this.waitingIds.findIndex(v => v === id);\r\n        if (index>=0) this.waitingIds.splice(index, 1);\r\n        //let cacheVal = this.createID(id, val);\r\n        this.cache.set(id, val);\r\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\r\n        /*\r\n        let {tuids, fields} = this.schema;\r\n        if (tuids !== undefined && fields !== undefined) {\r\n            for (let f of fields) {\r\n                let {name, tuid} = f;\r\n                if (tuid === undefined) continue;\r\n                let t = this.entities.tuid(tuid);\r\n                if (t === undefined) continue;\r\n                t.useId(val[name]);\r\n            }\r\n        }*/\r\n        return true;\r\n    }\r\n    protected afterCacheId(tuidValue:any) {\r\n        for (let f of this.fields) {\r\n            let {_tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            _tuid.useId(tuidValue[f.name]);\r\n        }\r\n    }\r\n    async cacheIds():Promise<void> {\r\n        if (this.waitingIds.length === 0) return;\r\n        let name:string, arr:string;\r\n        if (this.owner === undefined) {\r\n            name = this.name;\r\n        }\r\n        else {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\r\n        for (let tuidValue of tuids) {\r\n            if (this.cacheValue(tuidValue) === false) continue;\r\n            this.cacheTuidFieldValues(tuidValue);\r\n            this.afterCacheId(tuidValue);\r\n        }\r\n        await this.cacheDivIds();\r\n    }\r\n    protected async cacheDivIds():Promise<void> {\r\n    }\r\n    async load(id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        let values = await api.tuidGet(this.name, id);\r\n        if (values === undefined) return;\r\n        values._$tuid = this;\r\n        this.cacheValue(values);\r\n        this.cacheTuidFieldValues(values);\r\n        return values;\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return;}\r\n    private cacheTuidFieldValues(values:any) {\r\n        let {fields, arrs} = this.schema;\r\n        this.cacheFieldsInValue(values, fields);\r\n        if (arrs !== undefined) {\r\n            for (let arr of arrs as ArrFields[]) {\r\n                let {name, fields} = arr;\r\n                let arrValues = values[name];\r\n                if (arrValues === undefined) continue;\r\n                let tuidDiv = this.getDiv(name);\r\n                for (let row of arrValues) {\r\n                    row._$tuid = tuidDiv;\r\n                    row.$owner = this.boxId(row.owner);\r\n                    tuidDiv.cacheValue(row);\r\n                    this.cacheFieldsInValue(row, fields);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private cacheFieldsInValue(values:any, fields:Field[]) {\r\n        for (let f of fields as Field[]) {\r\n            let {name, _tuid} = f;\r\n            if (_tuid === undefined) continue;\r\n            let id = values[name];\r\n            //_tuid.useId(id);\r\n            values[name] = _tuid.boxId(id);\r\n        }\r\n    }\r\n    async save(id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        let ret = await this.tvApi.tuidSave(this.name, params);\r\n        let {id:retId, inId} = ret;\r\n        if (retId === undefined) {\r\n            params.id = id;\r\n            this.cacheValue(params);\r\n        }\r\n        else if (retId > 0) {\r\n            params.id = retId;\r\n            this.cacheValue(params);\r\n        }\r\n        return ret;\r\n    }\r\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\r\n        let {fields} = this.schema;\r\n        let name:string, arr:string;\r\n        if (this.owner !== undefined) {\r\n            name = this.owner.name;\r\n            arr = this.name;\r\n        }\r\n        else {\r\n            name = this.name;\r\n            arr = undefined;\r\n        }\r\n        let api = await this.getApiFrom();\r\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\r\n        for (let row of ret) {\r\n            this.cacheFieldsInValue(row, fields);\r\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\r\n        }\r\n        return ret;\r\n    }\r\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\r\n        if (id === undefined || id === 0) return;\r\n        let api = await this.getApiFrom();\r\n        return await api.tuidArrGet(this.name, arr, owner, id);\r\n    }\r\n    /*\r\n    async loadArrAll(owner:number):Promise<any[]> {\r\n        return this.all = await this.tvApi.tuidGetAll(this.name);\r\n    }*/\r\n    async saveArr(arr:string, owner:number, id:number, props:any) {\r\n        let params = _.clone(props);\r\n        params[\"$id\"] = id;\r\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\r\n    }\r\n    async posArr(arr:string, owner:number, id:number, order:number) {\r\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\r\n    }\r\n    \r\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\r\n    //private async ids(idArr:number[]) {\r\n    //    return await this.tvApi.tuidIds(this.name, idArr);\r\n    //}\r\n    async showInfo(id:number) {\r\n        await this.entities.cUq.showTuid(this, id);\r\n    }\r\n}\r\n\r\nexport class TuidMain extends Tuid {\r\n    get Main() {return this}\r\n    get uqApi() {return this.entities.uqApi};\r\n\r\n    divs: {[name:string]: TuidDiv};\r\n    proxies: {[name:string]: TuidMain};\r\n\r\n    public setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {arrs} = schema;\r\n        if (arrs !== undefined) {\r\n            this.divs = {};\r\n            for (let arr of arrs) {\r\n                let {name} = arr;\r\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\r\n                tuidDiv.owner = this;\r\n                this.divs[name] = tuidDiv;\r\n                tuidDiv.setSchema(arr);\r\n            }\r\n        }\r\n    }\r\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\r\n    /* 努力回避async里面的super调用，edge不兼容\r\n    async cacheIds():Promise<void> {\r\n        await super.cacheIds();\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n    */\r\n    protected async cacheDivIds():Promise<void> {\r\n        if (this.divs === undefined) return;\r\n        for (let i in this.divs) {\r\n            await this.divs[i].cacheIds();\r\n        }\r\n    }\r\n\r\n    async cUqFrom(): Promise<CUq> {\r\n        if (this.schemaFrom === undefined) return this.entities.cUq;\r\n        let {owner, uq: uq} = this.schemaFrom;\r\n        let cUq = await this.entities.cUq\r\n        let cApp = cUq.cApp;\r\n        if (cApp === undefined) return cUq;\r\n        let cUqFrm = await cApp.getImportUq(owner, uq);\r\n        if (cUqFrm === undefined) {\r\n            console.error(`${owner}/${uq} 不存在`);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        let retErrors = await cUqFrm.loadSchema();\r\n        if (retErrors !== undefined) {\r\n            console.error('cUq.loadSchema: ' + retErrors);\r\n            debugger;\r\n            return cUq;\r\n        }\r\n        return cUqFrm;\r\n    }\r\n\r\n    async getApiFrom() {\r\n        let from = await this.from();\r\n        if (from !== undefined) {\r\n            return from.entities.uqApi;\r\n        }\r\n        return this.entities.uqApi;\r\n    }\r\n\r\n    async from(): Promise<TuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.tuid(this.name);\r\n    }\r\n\r\n    async cFrom(): Promise<CTuidMain> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidMainFromName(this.name);\r\n    }\r\n\r\n    async cEditFrom(): Promise<CTuidEdit> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidEditFromName(this.name);\r\n    }\r\n\r\n    async cInfoFrom(): Promise<CTuidInfo> {\r\n        let cUq = await this.cUqFrom();\r\n        return cUq.cTuidInfoFromName(this.name);\r\n    }\r\n\r\n    async cSelectFrom(): Promise<CTuidSelect> {\r\n        let cUq = await this.cUqFrom();\r\n        if (cUq === undefined) return;\r\n        return cUq.cTuidSelectFromName(this.name);\r\n    }\r\n\r\n    protected afterCacheId(tuidValue:any) {\r\n        super.afterCacheId(tuidValue);\r\n        if (this.proxies === undefined) return;\r\n        let {type, $proxy} = tuidValue;\r\n        let pTuid = this.proxies[type];\r\n        pTuid.useId($proxy);\r\n    }\r\n}\r\n\r\nexport class TuidDiv extends Tuid {\r\n    get Main() {return this.owner}\r\n\r\n    async getApiFrom() {\r\n        return await this.owner.getApiFrom();\r\n    }\r\n}\r\n","import {Entity} from './entity';\r\n\r\nexport class Action extends Entity {\r\n    get typeName(): string { return 'action';}\r\n    async submit(data:object) {\r\n        await this.loadSchema();\r\n        let text = this.pack(data);\r\n        return await this.tvApi.action(this.name, {data:text});\r\n    }\r\n}\r\n\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Entity} from './entity';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SheetState {\r\n    name: string;\r\n    actions: SheetAction[];\r\n}\r\n\r\nexport interface SheetAction {\r\n    name: string;\r\n}\r\n\r\nexport interface StateCount {\r\n    state: string;\r\n    count: number;\r\n}\r\n\r\nexport class Sheet extends Entity {\r\n    get typeName(): string { return 'sheet';}\r\n    states: SheetState[];\r\n\r\n    /*\r\n    setStates(states: SheetState[]) {\r\n        for (let state of states) {\r\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\r\n        }\r\n    }*/\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.states = schema.states;\r\n    }\r\n    build(obj:any) {\r\n        this.states = [];\r\n        for (let op of obj.ops) {\r\n            this.states.push({name: op, actions:undefined});\r\n        }\r\n        /*\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }\r\n    /*\r\n    private setStateAccess(s:SheetState, s1:SheetState) {\r\n        if (s === undefined) return;\r\n        for (let action of s1.actions) {\r\n            let acn = action.name;\r\n            let ac = s.actions.find(a=>a.name === acn);\r\n            if (ac === undefined) continue;\r\n            s.actions.push(action);\r\n        }\r\n    }*/\r\n    async save(discription:string, data:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let {appId} = this.entities;\r\n        let text = this.pack(data);\r\n\r\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\r\n        return ret;\r\n        /*\r\n        let {id, state} = ret;\r\n        if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n        */\r\n    }\r\n    async action(id:number, flow:number, state:string, action:string) {\r\n        await this.loadSchema();\r\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\r\n    }\r\n    private async unpack(data:any):Promise<any> {\r\n        //if (this.schema === undefined) await this.loadSchema();\r\n        let ret = data[0];\r\n        let brief = ret[0];\r\n        let sheetData = this.unpackSheet(brief.data);\r\n        let flows = data[1];\r\n        return {\r\n            brief: brief,\r\n            data: sheetData,\r\n            flows: flows,\r\n        }\r\n    }\r\n    async getSheet(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.getSheet(this.name, id);\r\n        if (ret[0].length === 0) return await this.getArchive(id);\r\n        return await this.unpack(ret);\r\n    }\r\n    async getArchive(id:number):Promise<any> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchive(this.name, id)\r\n        return await this.unpack(ret);\r\n    }\r\n\r\n    async getArchives(pageStart:number, pageSize:number) {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n\r\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\r\n        return ret;\r\n    }\r\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\r\n\r\n    async stateSheetCount():Promise<StateCount[]> {\r\n        await this.loadSchema();\r\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\r\n        return this.states.map(s => {\r\n            let n = s.name, count = 0;\r\n            let r = ret.find(v => v.state === n);\r\n            if (r !== undefined) count = r.count;\r\n            return {state: n, count: count} \r\n        });\r\n    }\r\n}\r\n\r\nexport class PageStateItems<T> extends PageItems<T> {\r\n    private sheet: Sheet;\r\n    constructor(sheet: Sheet) {\r\n        super(true);\r\n        this.sheet = sheet;\r\n        this.pageSize = 10;\r\n    }\r\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        this.pageStart = item === undefined? 0 : item.id;\r\n    }\r\n}\r\n","import {observable, IObservableArray} from 'mobx';\r\nimport {Field, ArrFields} from './entities';\r\nimport {Entity} from './entity';\r\n\r\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\r\nexport class Query extends Entity {\r\n    get typeName(): string { return 'query';}\r\n    private pageStart: any;\r\n    private pageSize:number;\r\n    private params:any;\r\n    private more: boolean;\r\n    private startField: Field;\r\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\r\n    returns: ArrFields[];\r\n    isPaged: boolean;\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        let {returns} = schema;\r\n        this.returns = returns;\r\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\r\n    }\r\n\r\n    resetPage(size:number, params:any) {\r\n        this.pageStart = undefined;\r\n        this.pageSize = size;\r\n        this.params = params;\r\n        this.more = false;\r\n        this.list = undefined;\r\n    }\r\n    get hasMore() {return this.more;}\r\n    async loadPage():Promise<void> {\r\n        if (this.pageSize === undefined) {\r\n            throw 'call resetPage(size:number, params:any) first';\r\n        }\r\n        let pageStart:any;\r\n        if (this.pageStart !== undefined) {\r\n            switch (this.startField.type) {\r\n                default: pageStart = this.pageStart; break;\r\n                case 'date':\r\n                case 'time':\r\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\r\n            }\r\n        }\r\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\r\n        /*\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\r\n        let data = await this.unpackReturns(res);\r\n        let page = data['$page'] as any[];\r\n        */\r\n        this.list = observable.array([], {deep: false});\r\n        if (page !== undefined) {\r\n            if (page.length > this.pageSize) {\r\n                this.more = true;\r\n                page.pop();\r\n                let ret = this.returns.find(r => r.name === '$page');\r\n                this.startField = ret.fields[0];\r\n                this.pageStart = page[page.length-1][this.startField.name];\r\n            }\r\n            else {\r\n                this.more = false;\r\n            }\r\n            this.list.push(...page);\r\n        }\r\n        //this.loaded = true;\r\n    }\r\n\r\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data.$page;// as any[];\r\n    }\r\n    async query(params:any):Promise<any> {\r\n        await this.loadSchema();\r\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\r\n        let data = await this.unpackReturns(res);\r\n        return data;\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Book extends Query {\r\n    get typeName(): string { return 'book';}\r\n    protected queryApiName = 'book';\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class History extends Query {\r\n    get typeName(): string { return 'history';}\r\n    protected queryApiName = 'history';\r\n}\r\n","import { Entity } from './entity';\r\nimport { Action } from './action';\r\nimport { Query } from './query';\r\nimport { Field } from './entities';\r\n\r\ninterface MapActions {\r\n    add: Action;\r\n    del: Action;\r\n}\r\ninterface MapQueries {\r\n    all: Query;\r\n    page: Query;\r\n    query: Query;\r\n}\r\n\r\nexport class Map extends Entity {\r\n    get typeName(): string { return 'map';}\r\n    keys: Field[];\r\n    actions: MapActions = {} as any;\r\n    queries: MapQueries = {} as any;\r\n    schemaFrom: {owner:string; uq:string};\r\n\r\n    setSchema(schema:any) {\r\n        super.setSchema(schema);\r\n        this.schemaFrom = this.schema.from;\r\n        let {actions, queries, keys} = schema;\r\n        this.entities.buildFieldTuid(this.keys = keys);\r\n        //let t = this.schemaStringify();\r\n        for (let i in actions) {\r\n            let schema = actions[i];\r\n            let {name} = schema;\r\n            let action = this.entities.newAction(name, undefined);\r\n            action.setSchema(schema);\r\n            this.actions[i] = action;\r\n        }\r\n        for (let i in queries) {\r\n            let schema = queries[i];\r\n            let {name} = schema;\r\n            let query = this.entities.newQuery(name, undefined);\r\n            query.setSchema(schema);\r\n            this.queries[i] = query;\r\n        }\r\n    }\r\n\r\n    async add(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.add.submit(param);\r\n    }\r\n\r\n    async del(param:any) {\r\n        await this.loadSchema();\r\n        return await this.actions.del.submit(param);\r\n    }\r\n\r\n    async all() {\r\n        await this.loadSchema();\r\n        return await this.queries.all.query({});\r\n    }\r\n\r\n    async page(param:any, pageStart:any, pageSize: number) {\r\n        await this.loadSchema();\r\n        return await this.queries.page.page(param, pageStart, pageSize);\r\n    }\r\n\r\n    async query(param:any) {\r\n        await this.loadSchema();\r\n        return await this.queries.query.query(param);\r\n    }\r\n    async table(params:any): Promise<any[]> {\r\n        let ret = await this.query(params);\r\n        for (let i in ret) {\r\n            return ret[i];\r\n        }\r\n    }\r\n    async obj(params:any):Promise<any> {\r\n        let ret = await this.table(params);\r\n        if (ret.length > 0) return ret[0];\r\n    }\r\n    async scalar(params:any):Promise<any> {\r\n        let ret = await this.obj(params);\r\n        for (let i in ret) return ret[i];\r\n    }\r\n}\r\n","import {Query} from './query';\r\n\r\nexport class Pending extends Query {\r\n    get typeName(): string { return 'pending';}\r\n    protected queryApiName = 'pending';\r\n}\r\n","import {TuidMain, Tuid} from './tuid';\r\nimport {Action} from './action';\r\nimport {Sheet, SheetState, SheetAction} from './sheet';\r\nimport {Query} from './query';\r\nimport {Book} from './book';\r\nimport {History} from './history';\r\nimport { UqApi } from 'tonva-tools';\r\nimport { Map } from './map';\r\nimport { Pending } from './pending';\r\nimport { CUq } from '../controllers';\r\n\r\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \r\n    | 'datetime' | 'date' | 'time';\r\n\r\nexport function fieldDefaultValue(type:FieldType) {\r\n    switch (type) {\r\n        case 'tinyint':\r\n        case 'smallint':\r\n        case 'int':\r\n        case 'bigint':\r\n        case 'dec':\r\n            return 0;\r\n        case 'char':\r\n        case 'text': \r\n            return '';\r\n        case 'datetime':\r\n        case 'date':\r\n            return '2000-1-1';\r\n        case 'time':\r\n            return '0:00';\r\n    }\r\n}\r\n\r\nexport interface Field {\r\n    name: string;\r\n    type: FieldType;\r\n    tuid?: string;\r\n    arr?: string;\r\n    url?: string;\r\n    null?: boolean;\r\n    size?: number;\r\n    owner?: string;\r\n    _ownerField: Field;\r\n    _tuid: Tuid;\r\n}\r\nexport interface ArrFields {\r\n    name: string;\r\n    fields: Field[];\r\n    id?: string;\r\n    order?: string;\r\n}\r\nexport interface FieldMap {\r\n    [name:string]: Field;\r\n}\r\n\r\nexport class Entities {\r\n    private tuids: {[name:string]: TuidMain} = {};\r\n    private actions: {[name:string]: Action} = {};\r\n    private sheets: {[name:string]: Sheet} = {};\r\n    private queries: {[name:string]: Query} = {};\r\n    private books: {[name:string]: Book} = {};\r\n    private maps: {[name:string]: Map} = {};\r\n    private histories: {[name:string]: History} = {};\r\n    private pendings: {[name:string]: Pending} = {};\r\n    private cacheTimer: any;\r\n    cUq: CUq;\r\n    uqApi: UqApi;\r\n    appId: number;\r\n    uqId: number;\r\n\r\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\r\n        this.cUq = cUq;\r\n        this.uqApi = uqApi;\r\n        this.appId = appId;\r\n    }\r\n\r\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\r\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\r\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\r\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\r\n    book(name:string):Book {return this.books[name.toLowerCase()]}\r\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\r\n    history(name:string):History {return this.histories[name.toLowerCase()]}\r\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\r\n\r\n    sheetFromTypeId(typeId:number):Sheet {\r\n        for (let i in this.sheets) {\r\n            let sheet = this.sheets[i];\r\n            if (sheet.typeId === typeId) return sheet;\r\n        }\r\n    }\r\n\r\n    tuidArr: TuidMain[] = [];\r\n    actionArr: Action[] = [];\r\n    sheetArr: Sheet[] = [];\r\n    queryArr: Query[] = [];\r\n    bookArr: Book[] = [];\r\n    mapArr: Map[] = [];\r\n    historyArr: History[] = [];\r\n    pendingArr: Pending[] = [];\r\n\r\n    async loadAccess() {\r\n        let accesses = await this.uqApi.loadAccess();\r\n        if (accesses === undefined) return;\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    async loadEntities() {\r\n        let accesses = await this.uqApi.loadEntities();\r\n        this.buildEntities(accesses);\r\n    }\r\n\r\n    private buildEntities(entities:any) {\r\n        if (entities === undefined) {\r\n            debugger;\r\n        }\r\n        let {access, tuids} = entities;\r\n        this.buildTuids(tuids);\r\n        this.buildAccess(access);\r\n    }\r\n\r\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\r\n        let tuid = this.tuids[name];\r\n        if (tuid === undefined) return;\r\n        if (div === undefined) return tuid;\r\n        return tuid.divs[div];\r\n    }\r\n\r\n    cacheTuids(defer:number) {\r\n        this.clearCacheTimer();\r\n        this.cacheTimer = setTimeout(this.loadIds, defer);\r\n    }\r\n    private clearCacheTimer() {\r\n        if (this.cacheTimer === undefined) return;\r\n        clearTimeout(this.cacheTimer);\r\n        this.cacheTimer = undefined;\r\n    }\r\n    private loadIds = () => {\r\n        this.clearCacheTimer();\r\n        for (let i in this.tuids) {\r\n            let tuid = this.tuids[i];\r\n            tuid.cacheIds();\r\n        }\r\n    }\r\n\r\n    private buildTuids(tuids:any) {\r\n        let proxyColl = {} as any;\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name, typeId, proxies} = schema;\r\n            let tuid = this.newTuid(i, typeId);\r\n            tuid.sys = true;\r\n            //tuid.setSchema(schema);\r\n            if (proxies !== undefined) proxyColl[i] = proxies;\r\n        }\r\n        for (let i in tuids) {\r\n            let schema = tuids[i];\r\n            let {name} = schema;\r\n            let tuid = this.getTuid(i);\r\n            //tuid.sys = true;\r\n            tuid.setSchema(schema);\r\n        }\r\n        for (let i in proxyColl) {\r\n            let proxies:string[] = proxyColl[i];\r\n            let tuid = this.tuids[i];\r\n            tuid.proxies = {};\r\n            for (let p of proxies) {\r\n                tuid.proxies[p] = this.tuids[p];\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildAccess(access:any) {\r\n        for (let a in access) {\r\n            let v = access[a];\r\n            switch (typeof v) {\r\n                case 'string': this.fromType(a, v); break;\r\n                case 'object': this.fromObj(a, v); break;\r\n            }\r\n        }\r\n        /*\r\n        for (let tuid of this.tuidArr) {\r\n            tuid.setProxies(this);\r\n        }*/\r\n    }\r\n\r\n    newAction(name:string, id:number):Action {\r\n        let action = this.actions[name];\r\n        if (action !== undefined) return action;\r\n        action = this.actions[name] = new Action(this, name, id)\r\n        this.actionArr.push(action);\r\n        return action;\r\n    }\r\n    newTuid(name:string, id:number):TuidMain {\r\n        let tuid = this.tuids[name];\r\n        if (tuid !== undefined) return tuid;\r\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\r\n        this.tuidArr.push(tuid);\r\n        return tuid;\r\n    }\r\n    newQuery(name:string, id:number):Query {\r\n        let query = this.queries[name];\r\n        if (query !== undefined) return query;\r\n        query = this.queries[name] = new Query(this, name, id)\r\n        this.queryArr.push(query);\r\n        return query;\r\n    }\r\n    newBook(name:string, id:number):Book {\r\n        let book = this.books[name];\r\n        if (book !== undefined) return book;\r\n        book = this.books[name] = new Book(this, name, id);\r\n        this.bookArr.push(book);\r\n        return book;\r\n    }\r\n    newMap(name:string, id:number):Map {\r\n        let map = this.maps[name];\r\n        if (map !== undefined) return map;\r\n        map = this.maps[name] = new Map(this, name, id)\r\n        this.mapArr.push(map);\r\n        return map;\r\n    }\r\n    newHistory(name:string, id:number):History {\r\n        let history = this.histories[name];\r\n        if (history !== undefined) return;\r\n        history = this.histories[name] = new History(this, name, id)\r\n        this.historyArr.push(history);\r\n        return history;\r\n    }\r\n    newPending(name:string, id:number):Pending {\r\n        let pending = this.pendings[name];\r\n        if (pending !== undefined) return;\r\n        pending = this.pendings[name] = new Pending(this, name, id)\r\n        this.pendingArr.push(pending);\r\n        return pending;\r\n    }\r\n    newSheet(name:string, id:number):Sheet {\r\n        let sheet = this.sheets[name];\r\n        if (sheet !== undefined) return sheet;\r\n        sheet = this.sheets[name] = new Sheet(this, name, id);\r\n        this.sheetArr.push(sheet);\r\n        return sheet;\r\n    }\r\n    private fromType(name:string, type:string) {\r\n        let parts = type.split('|');\r\n        type = parts[0];\r\n        let id = Number(parts[1]);\r\n        switch (type) {\r\n            case 'uq': this.uqId = id; break;\r\n            case 'tuid': \r\n                let tuid = this.newTuid(name, id);\r\n                tuid.sys = false;\r\n                break;\r\n            case 'action': this.newAction(name, id); break;\r\n            case 'query': this.newQuery(name, id); break;\r\n            case 'book': this.newBook(name, id); break;\r\n            case 'map': this.newMap(name, id); break;\r\n            case 'history': this.newHistory(name, id); break;\r\n            case 'sheet':this.newSheet(name, id); break;\r\n            case 'pending': this.newPending(name, id); break;\r\n        }\r\n    }\r\n    private fromObj(name:string, obj:any) {\r\n        switch (obj['$']) {\r\n            case 'sheet': this.buildSheet(name, obj); break;\r\n        }\r\n    }\r\n    private buildSheet(name:string, obj:any) {\r\n        let sheet = this.sheets[name];\r\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\r\n        sheet.build(obj);\r\n        /*\r\n        let states = sheet.states;\r\n        for (let p in obj) {\r\n            switch(p) {\r\n                case '#':\r\n                case '$': continue;\r\n                default: states.push(this.createSheetState(p, obj[p])); break;\r\n            }\r\n        }*/\r\n    }\r\n    /*\r\n    private createSheetState(name:string, obj:object):SheetState {\r\n        let ret:SheetState = {name:name, actions:[]};\r\n        let actions = ret.actions;\r\n        for (let p in obj) {\r\n            let action:SheetAction = {name: p};\r\n            actions.push(action);\r\n        }\r\n        return ret;\r\n    }*/\r\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\r\n        if (fields === undefined) return;\r\n        for (let f of fields) {\r\n            let {tuid, arr, url} = f;\r\n            if (tuid === undefined) continue;\r\n            f._tuid = this.getTuid(tuid, arr, url);\r\n        }\r\n        for (let f of fields) {\r\n            let {owner} = f;\r\n            if (owner === undefined) continue;\r\n            let ownerField = fields.find(v => v.name === owner);\r\n            if (ownerField === undefined) {\r\n                if (mainFields !== undefined) {\r\n                    ownerField = mainFields.find(v => v.name === owner);\r\n                }\r\n                if (ownerField === undefined) {\r\n                    throw `owner field ${owner} is undefined`;\r\n                }\r\n            }\r\n            f._ownerField = ownerField;\r\n            let {arr, url} = f;\r\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\r\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\r\n        }\r\n    }\r\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\r\n        if (arrFields === undefined) return;\r\n        for (let af of arrFields) {\r\n            let {fields} = af;\r\n            if (fields === undefined) continue;\r\n            this.buildFieldTuid(fields, mainFields);\r\n        }\r\n    }\r\n}\r\n","export * from './entities';\r\nexport * from './entity';\r\nexport * from './action';\r\nexport * from './query';\r\nexport * from './sheet';\r\nexport * from './tuid';\r\nexport * from './book';\r\nexport * from './map';\r\nexport * from './history';\r\nexport * from './pending';\r\n","import * as React from 'react';\r\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\r\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\r\n\r\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\r\n\r\nexport abstract class RowContainer {\r\n    protected form:FormView;\r\n    protected row: FormRow;\r\n    protected control: ControlBase;\r\n    constructor(form:FormView, row: FormRow) {\r\n        this.form = form;\r\n        this.row = row;\r\n        if ((row as JSX.Element).type === undefined) {\r\n            let cc:CreateControl = (row as LabelFormRow).createControl;\r\n            if (cc === undefined) cc = form.createControl;\r\n            if (cc === undefined) cc = createControl;\r\n            this.control = cc(form, row);\r\n        }\r\n    }\r\n    abstract render(key:string):JSX.Element;\r\n    \r\n    isOk():boolean {\r\n        if (this.control === undefined) return true;\r\n        return this.control.isOk();\r\n    }\r\n\r\n    contains(fieldName:string):boolean {\r\n        let field = (this.row as FieldRow).field;\r\n        if (field !== undefined) return fieldName === field.name;\r\n        let group = (this.row as GroupRow).group;\r\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\r\n        return false;\r\n    }\r\n    get hasError():boolean {return this.control.hasError;}\r\n    get filled():boolean {return this.control.filled;}\r\n    clear() {\r\n        if (this.control !== undefined) this.control.clear();\r\n    }\r\n    clearErrors() {\r\n        if (this.control !== undefined) this.control.clearErrors();\r\n    }\r\n    readValues(values:any):any {\r\n        if (this.control !== undefined) this.control.readValues(values);\r\n    }\r\n    setError(fieldName:string, error:string) {\r\n        if (this.control !== undefined) this.control.setError(fieldName, error);\r\n    }\r\n    setInitValues(values:any) {\r\n        if (this.control !== undefined) this.control.setInitValues(values);\r\n    }\r\n}\r\n\r\nclass ElementRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\r\n    }\r\n    get hasError():boolean {return false;}\r\n    get filled():boolean {return false;}\r\n}\r\n\r\nclass BootStrapRowContainer extends RowContainer {\r\n    render(key:string):JSX.Element {\r\n        return <div key={key} className='form-group row'>\r\n            <label className='col-sm-2 col-form-label'>\r\n                {(this.row as LabelFormRow).label}\r\n            </label>\r\n            {this.control.render()}\r\n        </div>;\r\n\r\n        //has-success is-valid\r\n    }\r\n}\r\n\r\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new BootStrapRowContainer(form, row);\r\n}\r\n\r\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\r\n    return new ElementRowContainer(form, row);\r\n}\r\n","//import {isDevelopment} from '../local';\r\nimport {HttpChannel} from './httpChannel';\r\n\r\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\r\n    await channel.fetch(url, options, resolve, reject);\r\n}\r\n\r\nexport abstract class ApiBase {\r\n    protected token: string;\r\n    protected path: string;\r\n    protected showWaiting: boolean;\r\n\r\n    constructor(path: string, showWaiting: boolean) {\r\n        this.path = path || '';\r\n        this.showWaiting = showWaiting;\r\n    }\r\n\r\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\r\n\r\n    public async call(url:string, method:string, body:any):Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.callFetch(url, method, body);\r\n    }\r\n\r\n    public async get(path:string, params:any=undefined): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.get(this.path + path, params);\r\n    }\r\n\r\n    public async post(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.post(this.path + path, params);\r\n    }\r\n\r\n    public async put(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.put(this.path + path, params);\r\n    }\r\n\r\n    public async delete(path:string, params:any): Promise<any> {\r\n        let channel = await this.getHttpChannel();\r\n        return await channel.delete(this.path + path, params);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {nav, mobileHeaderStyle} from './nav';\r\n\r\nexport interface TitleBarProps {\r\n    back?: 'back' | 'close' | 'none';\r\n    center: string | JSX.Element;\r\n    right?: JSX.Element;\r\n    logout?: boolean | (()=>Promise<void>);\r\n}\r\nexport interface TitleBarState {\r\n    hasBack: boolean;\r\n}\r\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\r\n    private navChangeHandler: ()=>void;\r\n    constructor(props) {\r\n        super(props);\r\n        this.navChange = this.navChange.bind(this);\r\n        this.state = {\r\n            hasBack: false,\r\n        };\r\n    }\r\n    navChange() {\r\n        this.setState({\r\n            hasBack: nav.level > 1\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.navChange();\r\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\r\n    }\r\n    componentWillUnmount() {\r\n        //nav.events.remove('change', this.navChangeHandler);\r\n    }\r\n    async back() {\r\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\r\n    }\r\n    openWindow() {\r\n        window.open(document.location.href);\r\n    }\r\n    private logoutClick = () => {\r\n        nav.showLogout(this.logout);\r\n        /*\r\n        nav.push(<Page header=\"安全退出\" back=\"close\">\r\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\r\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\r\n                <div className=\"mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\r\n                </div>\r\n            </div>\r\n        </Page>);\r\n        */\r\n    }\r\n    private logout = async () => {\r\n        let {logout} = this.props;\r\n        if (typeof logout === 'function') {\r\n            await logout(); \r\n        }\r\n        await nav.logout(undefined);\r\n    }\r\n    render() {\r\n        let b = this.state.hasBack || self != top;\r\n        let {right, center, logout} = this.props;\r\n        let back, pop, debugLogout;\r\n        if (logout !== undefined && self === top) {\r\n            if (typeof logout === 'boolean' && logout === true\r\n                || typeof logout === 'function')\r\n            {\r\n                let {user} = nav;\r\n                if (user !== undefined) {\r\n                    let {nick, name} = user;\r\n                    debugLogout = <div className=\"d-flex align-items-center\">\r\n                        <small className=\"text-light\">{nick || name}</small>\r\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\r\n                            role=\"button\"\r\n                            onClick={this.logoutClick}>\r\n                            <i className=\"fa fa-sign-out\" />\r\n                        </a>\r\n                    </div>;\r\n                }\r\n            }\r\n        }\r\n        if (b) {\r\n            switch (this.props.back) {\r\n                case 'none': back = undefined; break;\r\n                default:\r\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\r\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\r\n            }\r\n        }\r\n        if (self != top) {\r\n            console.log(document.location.href);\r\n            pop = <header onClick={this.openWindow} />;\r\n        }\r\n        let rightView;\r\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\r\n        return (\r\n        <header style={mobileHeaderStyle}>\r\n            {pop}\r\n            {back}\r\n            <div>{center}</div>\r\n            {rightView}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { jsonStringify } from '../../tools';\r\n\r\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { TuidMain, Query, Entity } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuery } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\r\n    protected vForm: VForm;\r\n    private row: React.StatelessComponent;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        let {row, queryRow} = this.ui;\r\n        this.row = queryRow || row || DefaultRow;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        let params = this.vForm.getValues();\r\n        if (this.entity.isPaged === true) {\r\n            await this.entity.resetPage(30, params);\r\n            await this.entity.loadPage();\r\n            this.replacePage(this.pageResult);\r\n        }\r\n        else {\r\n            let data = await this.entity.query(params);\r\n            this.replacePage(this.queryResult, data);\r\n        }\r\n    }\r\n\r\n    again = () => {\r\n        this.vForm.reset();\r\n        this.replacePage(this.view);\r\n    }\r\n\r\n    renderExtra() {\r\n        return;\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render('mx-3 my-2')}\r\n        {this.renderExtra()}\r\n    </Page>;\r\n\r\n    protected pageResult = () => {\r\n        let {name, list} = this.entity;\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <List items={list} item={{render: this.renderRow}} />\r\n        </Page>;\r\n    }\r\n\r\n    protected queryResult = observer((result:any) => {\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { FA, SearchBox, List } from 'tonva-react-form';\r\nimport { Page, PageItems } from 'tonva-tools';\r\nimport { Query } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { QueryUI, CQuerySelect } from './cQuery';\r\nimport { DefaultRow } from './defaultRow';\r\n\r\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\r\n    private row: React.StatelessComponent;\r\n\r\n    PageItems:QueryPageItems;\r\n    ownerId: number;\r\n\r\n    async open(param?:any) {\r\n        let {row, selectRow} = this.ui;\r\n        this.row = selectRow || row || DefaultRow;\r\n        //this.entity = this.controller.entity;\r\n        this.PageItems = new QueryPageItems(this.entity);\r\n        await this.onSearch(param);\r\n        this.openPage(this.view);\r\n    }\r\n    onSearch = async (key:string) => {\r\n        await this.PageItems.first(key);\r\n    }\r\n\r\n    renderRow = (item:any, index:number) => <this.row {...item} />;\r\n\r\n    private callOnSelected(item:any) {\r\n       this.closePage();\r\n       this.returnCall(item);\r\n    }\r\n    clickRow = (item:any) => {\r\n        this.callOnSelected(item);\r\n    }\r\n\r\n    view = () => {\r\n        let header = <SearchBox className=\"mx-1 w-100\"\r\n            initKey={''}\r\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\r\n        return <Page header={header}>\r\n            <List\r\n                items={this.PageItems.items}\r\n                item={{render: this.renderRow, onClick: this.clickRow}}\r\n                before={'搜索'+this.label+'资料'} />\r\n        </Page>;\r\n    };\r\n}\r\n\r\nexport class QueryPageItems extends PageItems<any> {\r\n    private query: Query;\r\n    constructor(query: Query) {\r\n        super();\r\n        this.query = query;\r\n    }\r\n    protected async load():Promise<any[]> {\r\n        await  this.query.loadSchema();\r\n        let ret:any[];\r\n        if (this.query.isPaged === true)\r\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\r\n        else {\r\n            let data = await this.query.query(this.param);\r\n            //let data = await this.query.unpackReturns(res);\r\n            ret = data[this.query.returns[0].name];\r\n        }\r\n        return ret;\r\n    }\r\n    protected setPageStart(item:any) {\r\n        if (item === undefined) this.pageStart = 0;\r\n    }\r\n}\r\n","import { StatelessComponent } from \"react\";\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Query } from \"../../entities\";\r\nimport { VQueryMain } from \"./vQueryMain\";\r\nimport { VQuerySelect } from \"./vQuerySelect\";\r\n\r\nexport interface QueryUI extends EntityUI {\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    main?: typeof VQueryMain;\r\n    row?: StatelessComponent;\r\n    queryRow?: StatelessComponent;\r\n    selectRow?: StatelessComponent;\r\n}\r\n\r\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\r\n}\r\n\r\nexport class CQuery extends CQueryBase {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VQueryMain);\r\n    }\r\n\r\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\r\n}\r\n\r\nexport class CQuerySelect extends CQueryBase {\r\n    protected async internalStart(param?:any) {\r\n        await this.openVPage(this.VQuerySelect, param);\r\n    }\r\n\r\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\r\n}\r\n","export * from './cQuery';\r\nexport * from './vQueryMain';\r\nexport * from './vQuerySelect';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { ResUploader } from '../resUploader';\r\nimport { Image } from '../image';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class ImageItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    private resUploader: ResUploader;\r\n    @observable private resId: string;\r\n    @observable private overSize: boolean = false;\r\n\r\n    protected async internalStart():Promise<any> {\r\n        this.resId = this.value;        \r\n        return new Promise<any>((resolve, reject) => {\r\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\r\n        });\r\n    }\r\n\r\n    private upload = async () => {\r\n        if (!this.resUploader) return;\r\n        let ret = await this.resUploader.upload();\r\n        if (ret === null) {\r\n            this.overSize = true;\r\n            setTimeout(() => this.overSize = false, 3000);\r\n            return;\r\n        }\r\n        this.resId = ret;\r\n        this.isChanged = (this.resId != this.value);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.resId)}>保存</button>;\r\n        let overSize:any;\r\n        if (this.overSize === true) {\r\n            overSize = <div className=\"text-danger\">\r\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\r\n            </div>;\r\n        }\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"my-3 px-3 py-3 bg-white\">\r\n                <div>\r\n                    <div>上传图片：</div>\r\n                    <div className=\"my-3\">\r\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\r\n                    </div>\r\n                </div>\r\n                {overSize}\r\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-12c h-12c mr-4\"\r\n                        style={{border: '1px dotted gray', padding: '8px'}}>\r\n                        <Image className=\"w-100 h-100\" src={this.resId} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"small\">图片预览</div>\r\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Loading() {\r\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\r\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\r\n    </div>;\r\n}\r\n\r\n/*\r\nexport function Loading() {\r\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\r\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\r\n        加载中...\r\n    </div>\r\n    </div>\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { nav } from './nav';\r\n\r\nexport interface ResUploaderProps {\r\n    className?: string;\r\n    multiple?: boolean;\r\n    maxSize?: number;\r\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport class ResUploader extends React.Component<ResUploaderProps> {\r\n    private fileInput: HTMLInputElement;\r\n\r\n    upload = async ():Promise<string> => {\r\n        let {maxSize} = this.props;\r\n        if (maxSize === undefined || maxSize <= 0) \r\n            maxSize = 100000000000;\r\n        else\r\n            maxSize = maxSize * 1024;\r\n        let resUrl = nav.resUrl + 'upload';\r\n        var files:FileList = this.fileInput.files;\r\n        var data = new FormData();\r\n        let len = files.length;\r\n        for (let i=0; i<len; i++) {\r\n            let file = files[i];\r\n            if (file.size > maxSize) return null;\r\n            data.append('files[]', file, file.name);\r\n        }\r\n  \r\n        try {\r\n            let abortController = new AbortController();\r\n            let res = await fetch(resUrl, {\r\n                method: \"POST\",\r\n                body: data,\r\n                signal: abortController.signal,\r\n            });\r\n            let json = await res.json();\r\n            return ':' + json.res.id;\r\n        }\r\n        catch (err) {\r\n            console.error('%s %s', resUrl, err);\r\n        }\r\n    }\r\n    render() {\r\n        let {className, multiple, onFilesChange} = this.props;\r\n        return <input \r\n            className={className}\r\n            ref={t=>this.fileInput=t} \r\n            onChange={onFilesChange}\r\n            type='file' name='file' multiple={multiple} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment} from 'tonva-tools';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { CUq, EntityType, UqUI } from './uq';\r\nimport { centerApi } from '../centerApi';\r\n\r\nexport interface RoleAppUI {\r\n    CApp?: typeof CApp;\r\n    CUq?: typeof CUq;\r\n    main?: TypeVPage<CApp>;\r\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\r\n    res?: any;\r\n}\r\n\r\nexport interface AppUI extends RoleAppUI {\r\n    appName: string; // 格式: owner/appName\r\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\r\n}\r\n\r\nexport class CApp extends Controller {\r\n    private appOwner:string;\r\n    private appName:string;\r\n    private cImportUqs: {[uq:string]: CUq} = {};\r\n    protected ui:AppUI;\r\n    id: number;\r\n    appUnits:any[];\r\n\r\n    constructor(ui:AppUI) {\r\n        super(resLang(ui && ui.res));\r\n        let tonvaApp = ui.appName;\r\n        if (tonvaApp === undefined) {\r\n            throw 'appName like \"owner/app\" must be defined in UI';\r\n        }\r\n        let parts = tonvaApp.split('/');\r\n        if (parts.length !== 2) {\r\n            throw 'tonvaApp name must be / separated, owner/app';\r\n        }\r\n        this.appOwner = parts[0];\r\n        this.appName = parts[1];\r\n        if (ui.uqs === undefined) ui.uqs = {};\r\n        this.ui = ui;\r\n        this.caption = this.res.caption || 'Tonva';\r\n    }\r\n    \r\n    readonly caption: string; // = 'View Model 版的 Uq App';\r\n    cUqCollection: {[uq:string]: CUq} = {};\r\n\r\n    async startDebug() {\r\n        let appName = this.appOwner + '/' + this.appName;\r\n        let cApp = new CApp({appName: appName, uqs:{}} );\r\n        let keepNavBackButton = true;\r\n        await cApp.start(keepNavBackButton);    \r\n    }\r\n\r\n    protected async loadUqs(): Promise<string[]> {\r\n        let retErrors:string[] = [];\r\n        let unit = meInFrame.unit;\r\n        let app = await loadAppUqs(this.appOwner, this.appName);\r\n        let {id, uqs} = app;\r\n        this.id = id;\r\n\r\n        let promises: PromiseLike<string>[] = [];\r\n        let promiseChecks: PromiseLike<boolean>[] = [];\r\n        let roleAppUI = await this.buildRoleAppUI();\r\n        for (let appUq of uqs) {\r\n            let {id:uqId, uqOwner, uqName, access} = appUq;\r\n            let uq = uqOwner + '/' + uqName;\r\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\r\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\r\n            this.cUqCollection[uq] = cUq;\r\n            promises.push(cUq.loadSchema());\r\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\r\n        }\r\n        let results = await Promise.all(promises);\r\n        Promise.all(promiseChecks).then((checks) => {\r\n            for (let c of checks) {\r\n                if (c === false) {\r\n                    //debugger;\r\n                    //nav.start();\r\n                    //return;\r\n                }\r\n            }\r\n        });\r\n        for (let result of results)\r\n        {\r\n            let retError = result; // await cUq.loadSchema();\r\n            if (retError !== undefined) {\r\n                retErrors.push(retError);\r\n                continue;\r\n            }\r\n        }\r\n        if (retErrors.length === 0) return;\r\n        return retErrors;\r\n    }\r\n\r\n    private async buildRoleAppUI():Promise<RoleAppUI> {\r\n        if (!this.ui) return undefined;\r\n        let {hashParam} = nav;\r\n        if (!hashParam) return this.ui;\r\n        let {roles} = this.ui;\r\n        let ret:RoleAppUI = {} as any;\r\n        for (let i in this.ui) {\r\n            if (i === 'roles') continue;\r\n            ret[i] = _.cloneDeep(this.ui[i]);\r\n        }\r\n        let roleAppUI = roles && roles[hashParam];\r\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\r\n        _.merge(ret, roleAppUI);\r\n        return ret;\r\n    }\r\n\r\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\r\n        let uq = uqOwner + '/' + uqName;\r\n        let cUq = this.cImportUqs[uq];\r\n        if (cUq !== undefined) return cUq;\r\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\r\n        let uqId = -1; // unknown\r\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\r\n        let retError = await cUq.loadSchema();\r\n        if (retError !== undefined) {\r\n            console.error(retError);\r\n            debugger;\r\n            return;\r\n        }\r\n        return cUq;\r\n    }\r\n\r\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\r\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \r\n        Object.setPrototypeOf(cUq.x, this.x);\r\n        return cUq;\r\n    }\r\n\r\n    get cUqArr():CUq[] {\r\n        let ret:CUq[] = [];\r\n        for (let i in this.cUqCollection) {\r\n            ret.push(this.cUqCollection[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getCUq(apiName:string):CUq {\r\n        return this.cUqCollection[apiName];\r\n    }\r\n\r\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\r\n    protected async beforeStart():Promise<boolean> {\r\n        try {\r\n            let {unit} = meInFrame;\r\n            if (isDevelopment === true) {\r\n                let app = await loadAppUqs(this.appOwner, this.appName);\r\n                let {id} = app;\r\n                this.id = id;\r\n                let {user} = nav;\r\n                if (user !== undefined && user.id > 0) {\r\n                    await this.loadAppUnits();\r\n                    switch (this.appUnits.length) {\r\n                        case 0:\r\n                            this.showUnsupport(unit);\r\n                            return false;\r\n                        case 1:\r\n                            let appUnit = this.appUnits[0].id;\r\n                            if (appUnit === undefined || appUnit < 0 || \r\n                                unit !== undefined && appUnit != unit)\r\n                            {\r\n                                this.showUnsupport(unit);\r\n                                return false;\r\n                            }\r\n                            meInFrame.unit = appUnit;\r\n                            break;\r\n                        default:\r\n                            if (unit>0 && this.appUnits.find(v => v.id===unit) !== undefined) {\r\n                                meInFrame.unit = unit;\r\n                                break;\r\n                            }\r\n                            nav.push(<this.selectUnitPage />)\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let retErrors = await this.loadUqs();\r\n            if (retErrors !== undefined) {\r\n                this.openPage(<Page header=\"ERROR\">\r\n                    <div className=\"m-3\">\r\n                        <div>Load Uqs 发生错误：</div>\r\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\r\n                    </div>\r\n                </Page>);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            nav.push(<Page header=\"App start error!\">\r\n                <pre>\r\n                    {typeof err === 'string'? err : err.message}\r\n                </pre>\r\n            </Page>);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async internalStart(param:any) {\r\n        if (param !== true) {\r\n            this.clearPrevPages();\r\n        }\r\n        await this.showMainPage();\r\n    }\r\n    async load() {\r\n        await this.beforeStart();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return this.renderView(this.VAppMain);\r\n    }\r\n\r\n    // 如果是独立app，删去显示app之前的页面。\r\n    // 如果非独立app，则不删\r\n    protected clearPrevPages() {\r\n        nav.clear();\r\n    }\r\n\r\n    private showUnsupport(unit:number) {\r\n        this.clearPrevPages();\r\n        let {user} = nav;\r\n        let userName:string = user? user.name : '[未登录]';\r\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\r\n            <div className=\"m-3 text-danger container\">\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">登录用户: </div>\r\n                    <div className=\"col\">{userName}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">App:</div>\r\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">小号:</div>\r\n                    <div className=\"col\">{unit || <small className=\"text-muted\">[无小号]</small>}</div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-2\">\r\n                        <FA name=\"exclamation-triangle\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"text-muted\">无法运行可能原因：</div>\r\n                        <ul className=\"p-0\">\r\n                            <li>没有小号运行 {this.ui.appName}</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\r\n                            <li>用户 <b>{userName}</b> 没有加入小号 unit={unit}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>)\r\n    }\r\n\r\n    private async showMainPage() {\r\n        // #tv-RwPBwMef-23-sheet-api-108\r\n        let exHash = getExHash();\r\n        if (exHash !== undefined) {\r\n            let parts = exHash.split('-');\r\n            if (parts.length > 3) {\r\n                let action = parts[3];\r\n                // sheet_debug 表示centerUrl是debug方式的\r\n                if (action === 'sheet' || action === 'sheet_debug') {\r\n                    let uqId = Number(parts[4]);\r\n                    let sheetTypeId = Number(parts[5]);\r\n                    let sheetId = Number(parts[6]);\r\n                    let cUq = this.getCUqFromId(uqId);\r\n                    if (cUq === undefined) {\r\n                        alert('unknown uqId: ' + uqId);\r\n                        return;\r\n                    }\r\n                    this.clearPrevPages();\r\n                    await cUq.navSheet(sheetTypeId, sheetId);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.openVPage(this.VAppMain);\r\n    }\r\n\r\n    private getCUqFromId(uqId:number): CUq {\r\n        for (let i in this.cUqCollection) {\r\n            let cUq = this.cUqCollection[i];\r\n            if (cUq.id === uqId) return cUq;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private async loadAppUnits() {\r\n        let ret = await centerApi.userAppUnits(this.id);\r\n        this.appUnits = ret;\r\n        /*\r\n        if (ret.length === 1) {\r\n            meInFrame.unit = ret[0].id;\r\n        }*/\r\n    }\r\n\r\n    renderRow = (item: any, index: number):JSX.Element => {\r\n        let {id, nick, name} = item;\r\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\r\n            <div>{nick || name}</div>\r\n        </LMR>;\r\n    }\r\n    onRowClick = async (item: any) => {\r\n        meInFrame.unit = item.id; // 25;\r\n        await this.start();\r\n    }\r\n\r\n    protected selectUnitPage = () => {\r\n        return <Page header=\"选择小号\" logout={true}>\r\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\r\n        </Page>\r\n    }\r\n}\r\n\r\nclass VAppMain extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    render(param?:any) {\r\n        return this.appContent();\r\n    }\r\n\r\n    protected appPage() {\r\n        let {caption} = this.controller;\r\n        return <Page header={caption} logout={async()=>{meInFrame.unit = undefined}}>\r\n            {this.appContent()}\r\n        </Page>;\r\n    }\r\n\r\n    protected appContent = () => {\r\n        let {cUqArr} = this.controller;\r\n        let content:any;\r\n        if (cUqArr.length === 0) {\r\n            content = <div className=\"text-danger\">\r\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <>{content}</>;\r\n    };\r\n}\r\n","export * from './rule';\r\nexport * from './field';\r\nexport * from './face';\r\nexport * from './rowContainer';\r\nexport * from './formView';\r\nexport * from './TonvaForm';\r\nexport {ControlBase} from './control';\r\n","import * as React from 'react';\r\nimport {FormEvent} from 'react';\r\nimport {computed} from 'mobx';\r\nimport {uid} from '../uid';\r\nimport {Rule} from './rule';\r\nimport {Field} from './field';\r\nimport {Face} from './face';\r\nimport {CreateControl, ButtonsControl} from './control';\r\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\r\n\r\nexport interface FieldView {\r\n    field: Field;\r\n    face?: Face;\r\n}\r\n\r\nexport interface LabeledRow {\r\n    label?: string;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    help?: JSX.Element;\r\n}\r\n\r\nexport interface FieldRow extends LabeledRow, FieldView {\r\n}\r\n\r\nexport interface GroupRow extends LabeledRow {\r\n    group: FieldView[];\r\n}\r\n\r\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\r\nexport type FormRow = LabelFormRow|JSX.Element;\r\n\r\nexport interface SubmitResult {\r\n    success: boolean;\r\n    message?: string\r\n    result?: any;\r\n}\r\n\r\nexport interface FormProps {\r\n    formRows: FormRow[];\r\n    //context?: any;              // form context，比如，可以是EntitiesUI\r\n    rules?: Rule | Rule[];\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n    otherButton?: string|JSX.Element;\r\n    onOther?: (values:any) => void;\r\n    createRow?: CreateRow;\r\n    createControl?: CreateControl;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport class FormView {\r\n    uid:string;\r\n    private rows: RowContainer[] = [];\r\n    private buttonsRow: RowContainer;\r\n    props: FormProps;\r\n    createControl?: CreateControl;\r\n    constructor(props:FormProps) {\r\n        this.uid = uid();\r\n        this.props = props;\r\n        this.buildRows(props);\r\n        this.createControl = props.createControl;\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\r\n        console.log(ret);\r\n        return this.rows.some(row => row.hasError);\r\n    }\r\n    @computed get nothing():boolean {\r\n        let ret = this.rows.every(row => !row.filled);\r\n        return ret;\r\n    }\r\n\r\n    readValues():any {\r\n        let values = {} as any;\r\n        for (let row of this.rows) {\r\n            row.readValues(values);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    clear() {\r\n        for (let row of this.rows) {\r\n            row.clear();\r\n        }\r\n    }\r\n\r\n    clearErrors() {\r\n        for (let row of this.rows) {\r\n            row.clearErrors();\r\n        }\r\n    }\r\n\r\n    setError(fieldName:string, error:string) {\r\n        for (let row of this.rows) {\r\n            row.setError(fieldName, error);\r\n        }\r\n    }\r\n\r\n    setInitValues(initValues:any) {\r\n        if (initValues === undefined) return;\r\n        for (let row of this.rows) {\r\n            row.setInitValues(initValues);\r\n        }\r\n    }\r\n\r\n    private buildRows(props:FormProps) {\r\n        let {formRows, createRow} = props;\r\n        if (formRows !== undefined) {\r\n            for (let row of formRows) {\r\n                this.rows.push(this.buildRow(row, createRow));\r\n            }\r\n            if (this.props.readOnly !== true) {\r\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\r\n            }\r\n        }\r\n        else {\r\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\r\n        }\r\n    }\r\n\r\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\r\n        let createRow:CreateRow;\r\n        let type = (formRow as JSX.Element).type;\r\n        if (type !== undefined) {\r\n            createRow = elementCreateRow;\r\n        }\r\n        else {\r\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\r\n            if (createRow === undefined) {\r\n                createRow = formRowCreator;\r\n                if (createRow === undefined) createRow = bootstrapCreateRow;\r\n            }\r\n        }\r\n        let row = createRow(this, formRow);\r\n        return row;\r\n    }\r\n\r\n    private createButtons(form:FormView, row: FormRow) {\r\n        return new ButtonsControl(form);\r\n    }\r\n\r\n    private isOk():boolean {\r\n        let isOk = true;\r\n        for (let row of this.rows) {\r\n            if (!row.isOk()) isOk = false;\r\n        }\r\n        return isOk;\r\n    }\r\n\r\n    render():JSX.Element {\r\n        return <form onSubmit={this.onSubmit}>\r\n            {this.rows.map((row,index) => row.render(this.uid + index))}\r\n            {this.buttons()}\r\n        </form>;\r\n    }\r\n\r\n    buttons():JSX.Element {\r\n        if (this.buttonsRow === undefined) return;\r\n        return this.buttonsRow.render(this.uid + this.rows.length);\r\n    }\r\n    \r\n    async onSubmit(event:FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        if (!this.isOk()) return;\r\n        let values = this.readValues();\r\n        await this.props.onSubmit(values);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FA } from \"tonva-react-form\";\r\n\r\nfunction icon(className:string, name:string) {\r\n    return <FA className={className} name={name} fixWidth={true} />;\r\n}\r\n/*\r\nexport interface EntityRes {\r\n    caption: string;\r\n    icon: JSX.Element;\r\n}\r\n*/\r\n\r\nexport const entityIcons:{[type:string]:JSX.Element} = {\r\n    tuid: icon('text-info', 'list-alt'),\r\n    action: icon('text-info', 'hand-o-right'),\r\n    map: icon('text-muted', 'list-ul'),\r\n    book: icon('text-muted', 'book'),\r\n    query: icon('text-warning', 'search'),\r\n    history: icon('text-info', 'hand-o-right'),\r\n    pending: icon('text-info', 'forward'),\r\n    sheet: icon('text-primary', 'wpforms'),\r\n};\r\n","import { Controller } from \"tonva-tools\";\r\nimport { CUq } from \"./uq\";\r\n\r\nexport abstract class ControllerUq extends Controller {\r\n    constructor(cUq: CUq, res:any) {\r\n        super(res);\r\n        this.cUq = cUq;\r\n    }\r\n    cUq: CUq;\r\n}\r\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\r\n\r\n//\r\n\r\nexport class CenterApi extends CenterApiBase {\r\n    async userAppUnits(app:number):Promise<any[]> {\r\n        return await this.get('tie/user-app-units', {app:app});\r\n    }\r\n}\r\n\r\nexport const centerApi = new CenterApi('tv/', undefined);\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Page } from 'tonva-tools';\r\nimport { List, Muted, LMR } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open() {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    newClick = () => this.event('new');\r\n    schemaClick = () => this.event('schema'); \r\n    archivesClick = () => this.event('archives');\r\n    sheetStateClick = (state) => this.event('state', state);\r\n\r\n    renderState = (item:any, index:number) => {\r\n        let {state, count} = item;\r\n        if (count === 0) return null;\r\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\r\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\r\n    }\r\n\r\n    protected view = observer(() => {\r\n        let list = this.controller.statesCount.filter(row=>row.count);\r\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\r\n        let templet:any;\r\n        if (this.isDev === true) {\r\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\r\n        }\r\n        return <Page header={this.label}>\r\n            <LMR\r\n                className=\"mx-3 my-2\"\r\n                right={right}>\r\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\r\n                {templet}\r\n            </LMR>\r\n            <List className=\"my-2\"\r\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\r\n                none=\"[ 无 ]\"\r\n                items={list}\r\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\r\n        </Page>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\r\n    vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        let valuesWithBox = this.vForm.values;\r\n        //let ret = \r\n        await this.controller.onSave(values, valuesWithBox);\r\n        /*\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.controller.showSaved(ret);\r\n        */\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import * as React from 'react';\r\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\r\nimport { Sheet } from '../../entities';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nconst leftFlowStyle = {width: '8rem'};\r\n\r\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected vForm: VForm;\r\n    protected sheetData: SheetData;\r\n    //data: any;\r\n    //state: string;\r\n    //flows:any[];\r\n\r\n    flowRow = (item:any, index:number):JSX.Element => {\r\n        let {date, user, preState, state, action} = item;\r\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\r\n        let to;\r\n        switch (state) {\r\n            case '$': break;\r\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\r\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\r\n        }\r\n        /*\r\n        return <div className=\"row\">\r\n            <div className=\"col-sm\"></div>\r\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\r\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\r\n        </div>;\r\n        */\r\n        return <LMR \r\n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\r\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\r\n            <div className=\"p-2\">{to}</div>\r\n        </LMR>;\r\n    }\r\n\r\n    protected sheetView = () => {\r\n        let {brief, flows} = this.sheetData;\r\n        let removed;\r\n        if (brief.state === '-')\r\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\r\n        return <div>\r\n            {removed}\r\n            {this.vForm.render()}\r\n    \r\n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\r\n                items={flows}\r\n                item={{render:this.flowRow}}/>\r\n        </div>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VForm, FormMode } from '../form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\r\n    protected sheetData: SheetData;\r\n    async open(param: SheetData) {\r\n        this.sheetData = param;\r\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    onSubmit = async ():Promise<void> => {\r\n        let values = this.vForm.getValues();\r\n        await this.controller.saveSheet(values, this.vForm.values);\r\n        this.closePage();\r\n        this.returnCall(this.vForm.values);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        {this.vForm.render()}\r\n    </Page>;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetAction extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        let {id, flow, state} = this.sheetData.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.ceasePage();\r\n        this.openPage(this.acted);\r\n        //alert(jsonStringify(res));\r\n        //await this.backPage();\r\n    }\r\n\r\n    deleteClick = async () => {\r\n        alert('单据作废：程序正在设计中');\r\n    }\r\n\r\n    editClick = async () => {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.controller.editSheet(this.sheetData);\r\n        this.vForm.setValues(values);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        let {states} = this.entity;\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons, startButtons;\r\n        if (s === undefined) {\r\n            let text:string, cn:string;\r\n            switch (state) {\r\n                default:\r\n                    text = '不认识的单据状态\\'' + state + '\\'';\r\n                    cn = 'text-info';\r\n                    break;\r\n                case '-': \r\n                    text = '已作废';\r\n                    cn = 'text-danger';\r\n                    break;\r\n                case '#':\r\n                    text = '已归档';\r\n                    cn = 'text-success';\r\n                    break;\r\n            }\r\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\r\n        }\r\n        else {\r\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \r\n                <button\r\n                    key={index}\r\n                    className=\"btn btn-primary mr-2\"\r\n                    onClick={()=>this.actionClick(v)}\r\n                >\r\n                    {this.controller.getActionLabel(state, v.name)}\r\n                </button>)}\r\n            </div>;\r\n            if (state === '$') {\r\n                startButtons = <div>\r\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\r\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\r\n                </div>\r\n            }\r\n        };\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    {actionButtons}\r\n                    {startButtons}\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        let {discription} = this.sheetData.brief;\r\n        return <Page header=\"已处理\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"p-3\">{discription}</div>\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\r\n    async open(param?:any) {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label + \"模板\"}>\r\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\r\n    </Page>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { SheetUI, CSheet } from './cSheet';\r\n\r\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\r\n    list: any[];\r\n\r\n    async open() {\r\n        this.list = await this.entity.getArchives(undefined, 10);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    archiveClick = async (brief:any) => {\r\n        if (brief.processing===1) return;\r\n        this.event('archived', brief);\r\n    }\r\n    archiveRow = (row:any, index:number) => {\r\n        let {id, no, discription, date} = row;\r\n        let left = <>\r\n            {row.processing===1? '... ' : ''}\r\n            {row.no} &nbsp; {row.discription}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\r\n    }\r\n\r\n    protected view = () => {\r\n        return <Page header={'已归档' + this.label}>\r\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { Sheet } from '../../entities';\r\nimport { CSheet, SheetUI } from './cSheet';\r\n\r\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\r\n    protected row: (values) => JSX.Element;\r\n    stateName: string;\r\n    stateLabel: string;\r\n\r\n    async open(item:any) {\r\n        this.row = this.ui.listRow || this.rowContent;\r\n        this.stateName = item.state;\r\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\r\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\r\n        await this.controller.pageStateItems.first(this.stateName);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    rowClick = async (brief:any) => {\r\n        if (brief.processing===1) {\r\n            this.event('processing', brief.id);\r\n            return;\r\n        }\r\n        this.event('action', brief.id);\r\n    }\r\n\r\n    private onScrollBottom = () => {\r\n        console.log('onScrollBottom');\r\n        this.controller.pageStateItems.more();\r\n    }\r\n\r\n    protected rowContent = (row:any):JSX.Element => {\r\n        let {id, no, discription, date, processing} = row;\r\n        let left = <>            \r\n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\r\n        </>;\r\n        let right = <Muted><EasyDate date={date} /></Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\r\n    }\r\n\r\n    private renderRow = (row:any, index:number) => <this.row {...row} />\r\n\r\n    protected view = () => {\r\n        //let sheets = this.controller.stateSheets;\r\n        let {pageStateItems} = this.controller;\r\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\r\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Page} from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { CSheet, SheetUI, SheetData } from './cSheet';\r\n\r\nexport interface State {\r\n    flows: any;\r\n    data: any;\r\n}\r\nexport class VArchived extends VSheetView {\r\n    //protected controller: CSheet;\r\n    //brief: any;\r\n\r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        /*\r\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\r\n        this.brief = brief;\r\n        this.data = data;\r\n        this.flows = flows;\r\n        */\r\n        this.vForm = this.createForm(undefined, this.sheetData.data);\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {brief} = this.sheetData;\r\n        return <Page header={this.label + ':' + '-' + brief.no}>\r\n            <this.sheetView />\r\n        </Page>;\r\n    };\r\n}\r\n","import { Sheet } from \"../../entities\";\r\nimport { SheetUI, CSheet } from \"./cSheet\";\r\nimport { VEntity } from \"../CVEntity\";\r\n\r\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\r\n}\r\n","import * as React from 'react';\r\nimport { Page } from 'tonva-tools';\r\nimport { FA } from 'tonva-react-form';\r\nimport { VSheet } from \"./vSheet\";\r\n\r\nexport class VSheetSaved extends VSheet {\r\n    private brief: any;\r\n    async open(brief?:any) {\r\n        this.brief = brief;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    private restart = async () => {\r\n        this.ceasePage();\r\n        await this.event('new');\r\n    }\r\n\r\n    actionClick = async (action:any) => {\r\n        this.ceasePage();\r\n        let {id, flow, state} = this.brief;\r\n        let res = await this.controller.action(id, flow, state, action.name);\r\n        this.openPage(this.acted);\r\n    }\r\n\r\n    private buttons = <>\r\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\r\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\r\n    </>;\r\n\r\n    private view = () => {\r\n        let {states} = this.entity;\r\n        const state = '$';\r\n        let s = states.find(v => v.name === state);\r\n        let actionButtons = <>{s.actions.map((v,index) => \r\n            <button\r\n                key={index}\r\n                className=\"btn btn-primary mr-3\"\r\n                onClick={()=>this.actionClick(v)}\r\n            >\r\n                {this.controller.getActionLabel(state, v.name)}\r\n            </button>)}\r\n        </>;\r\n        return <Page header=\"已保存\" back=\"close\">\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\r\n                <div className=\"p-3\">\r\n                    {actionButtons}\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>;\r\n    }\r\n\r\n    private acted = () => {\r\n        return <Page>\r\n            <div className=\"p-3 d-flex flex-column align-items-center\">\r\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\r\n                <div className=\"p-3\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { nav, Page } from 'tonva-tools';\r\nimport { VSheetView } from './vSheetView';\r\nimport { SheetData } from './cSheet';\r\n\r\nexport class VSheetProcessing extends VSheetView { \r\n    async open(sheetData:SheetData) {\r\n        this.sheetData = sheetData;\r\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\r\n        //this.brief = brief;\r\n        //this.flows = flows;\r\n        //this.data = data;\r\n        //this.state = this.brief.state;\r\n        this.vForm = this.createForm(undefined, sheetData.data);\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    protected page = () => {\r\n        let {brief} = this.sheetData;\r\n        let {state, no} = brief;\r\n        let stateLabel = this.controller.getStateLabel(state);\r\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\r\n            <div className=\"mb-2\">\r\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\r\n                    正在处理中...\r\n                </div>\r\n                <this.sheetView />\r\n            </div>\r\n        </Page>;\r\n    }\r\n}\r\n","import { IObservableArray, observable } from \"mobx\";\r\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\r\nimport { Sheet, StateCount } from \"../../entities\";\r\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\r\nimport { VSheetMain } from \"./vMain\";\r\nimport { VSheetNew } from \"./vNew\";\r\nimport { VSheetEdit } from \"./vEdit\";\r\nimport { VSheetAction } from \"./vSheetAction\";\r\nimport { VSheetSchema } from \"./vSchema\";\r\nimport { VArchives } from \"./vArchives\";\r\nimport { VSheetList } from \"./vList\";\r\nimport { VArchived } from \"./vArchived\";\r\nimport { VSheetSaved } from \"./vSaved\";\r\nimport { VSheetProcessing } from \"./vSheetProcessing\";\r\n\r\nexport interface SheetActionUI {\r\n    label: string;\r\n}\r\n\r\nexport interface StateUI {\r\n    label: string;\r\n    actions: {[name:string]: SheetActionUI}\r\n}\r\n\r\nexport interface SheetUI extends EntityUI {\r\n    CSheet?: typeof CSheet;\r\n    states?: {[name:string]: StateUI};\r\n    main?: TypeVPage<CSheet>;\r\n    sheetNew?: TypeVPage<CSheet>;\r\n    sheetSaved?: TypeVPage<CSheet>;\r\n    sheetEdit?: TypeVPage<CSheet>;\r\n    sheetAction?: TypeVPage<CSheet>;\r\n    listRow?: (row:any) => JSX.Element;\r\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\r\n}\r\n\r\nexport interface SheetData {\r\n    brief: any;\r\n    data: any;\r\n    flows: any[];\r\n}\r\n\r\nexport class CSheet extends CEntity<Sheet, SheetUI> {\r\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\r\n    curState:string;\r\n    pageStateItems: PageItems<any>;\r\n\r\n    protected async internalStart() {\r\n        await this.loadStateSheetCount();\r\n        this.pageStateItems = this.entity.createPageStateItems();\r\n        await this.openVPage(this.VSheetMain);\r\n    }\r\n\r\n    protected async onMessage(msg: any):Promise<void> {\r\n        let {type, body, from, to, push} = msg;\r\n        if (type === 'sheet') this.onSheet(from, to, body);\r\n    }\r\n    private onSheet(from:number, to:number[], sheetData:any) {\r\n        let me = this.user.id;\r\n        let {id, preState, state} = sheetData;\r\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\r\n        if (from === me) {\r\n            this.sheetActPreState(id, preState);\r\n        }\r\n        if (to.find(v=>v===me) !== undefined) {\r\n            this.sheetActState(id, state, sheetData);\r\n        }\r\n    }\r\n    private sheetActPreState(id:number, preState:string) {\r\n        this.changeStateCount(preState, -1);\r\n        if (this.curState === undefined || this.curState !== preState) return;\r\n        /*\r\n        let index = this.stateSheets.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.stateSheets.splice(index, 1);\r\n        }*/\r\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\r\n        if (index>=0) {\r\n            this.pageStateItems.items.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private sheetActState(id:number, state:string, msg:any) {\r\n        this.changeStateCount(state, 1);\r\n        if (this.curState === undefined || this.curState !== state) return;\r\n        /*\r\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\r\n            this.stateSheets.push(msg);\r\n        }\r\n        */\r\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\r\n            this.pageStateItems.items.push(msg);\r\n        }\r\n    }\r\n\r\n    private changeStateCount(state:string, delta:number) {\r\n        if (state === undefined) return;\r\n        let index = this.statesCount.findIndex(v => v.state === state);\r\n        console.log({$:'changeState', state: state, delta: delta, index: index});\r\n        if (index < 0) return;\r\n        let stateCount = this.statesCount[index];\r\n        stateCount.count += delta;\r\n        if (stateCount.count < 0) stateCount.count = 0;\r\n    }\r\n\r\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\r\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\r\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\r\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\r\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\r\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\r\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\r\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\r\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\r\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\r\n    protected async onEvent(type:string, value:any) {\r\n        let c: TypeVPage<CSheet>;\r\n        switch (type) {\r\n            default: return;\r\n            case 'new': c = this.VSheetNew; break;\r\n            case 'schema': c = this.VSheetSchema; break;\r\n            case 'archives': c = this.VArchives; break;\r\n            case 'state':\r\n                this.curState = value.state;\r\n                c = this.VSheetList;\r\n                break;\r\n            case 'archived':\r\n                await this.showArchived(value); return;\r\n            case 'action':\r\n                await this.showAction(value); return;\r\n            case 'processing':\r\n                await this.showProcessing(value); return;\r\n        }\r\n        await this.openVPage(c, value);\r\n    }\r\n\r\n    async startSheet(sheetId:number) {\r\n        if (await this.beforeStart() === false) return;\r\n        await this.onEvent('action', sheetId);\r\n    }\r\n\r\n    async showAction(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        postWsToTop({\r\n            body: {\r\n                $type: 'msg',\r\n                action: '$sheet',\r\n                msg: {\r\n                    id: sheetId,\r\n                    uq: this.cUq.id,\r\n                    state: sheetData.brief.state\r\n                }\r\n            }\r\n        });\r\n        await this.openVPage(this.VSheetAction, sheetData);\r\n    }\r\n\r\n    async showProcessing(sheetId:number) {\r\n        let sheetData:SheetData = await this.getSheetData(sheetId);\r\n        await this.openVPage(this.VSheetProcessing, sheetData);\r\n    }\r\n\r\n    async editSheet(sheetData:SheetData):Promise<any> {\r\n        //alert('修改单据：程序正在设计中');\r\n        let values = await this.vCall(this.VSheetEdit, sheetData);\r\n        return values;\r\n    }\r\n\r\n    async showArchived(inBrief:any) {\r\n        let sheetData = await this.getArchived(inBrief.id);\r\n        await this.openVPage(this.VArchived, sheetData);\r\n    }\r\n\r\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\r\n        //let values = this.vForm.getValues();\r\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\r\n        let ret = await this.saveSheet(values, valuesWithBox);\r\n        this.ceasePage();\r\n        //this.openPage(this.finishedPage);\r\n        await this.showSaved(ret);\r\n    }\r\n\r\n    async showSaved(sheetData:any) {\r\n        await this.openVPage(this.VSheetSaved, sheetData);\r\n    }\r\n\r\n    private getStateUI(stateName:string) {\r\n        let {states} = this.res;\r\n        if (states === undefined) return;\r\n        return states[stateName];\r\n    }\r\n    getStateLabel(stateName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        let ret = (state && state.label) || stateName;\r\n        switch (ret) {\r\n            default: return ret;\r\n            case '$': return '新单';\r\n        }\r\n    }\r\n    getActionLabel(stateName:string, actionName:string) {\r\n        let state = this.getStateUI(stateName);\r\n        if (state === undefined) return actionName;\r\n        let actions = state.actions;\r\n        if (actions === undefined) return actionName;\r\n        let action = actions[actionName];\r\n        return (action && action.label) || actionName;\r\n    }\r\n\r\n    private async loadStateSheetCount():Promise<void> {\r\n        this.statesCount.clear();\r\n        let statesCount = await this.entity.stateSheetCount();\r\n        this.statesCount.splice(0, 0, ...statesCount);\r\n    }\r\n\r\n    async getSheetData(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getSheet(sheetId);\r\n    }\r\n\r\n    async getArchived(sheetId:number):Promise<SheetData> {\r\n        return await this.entity.getArchive(sheetId);\r\n    }\r\n\r\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\r\n        let {sheetTitle} = this.ui;\r\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\r\n        let ret = await this.entity.save(disc, values);\r\n        //let {id, state} = ret;\r\n        //if (id > 0) this.changeStateCount(state, 1);\r\n        return ret;\r\n    }\r\n\r\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\r\n        return await this.entity.action(id, flow, state, actionName);\r\n    }\r\n}\r\n","export * from './cSheet';\r\nexport * from './vSheet';\r\nexport * from './vMain';\r\nexport * from './vNew';\r\nexport * from './vEdit';\r\nexport * from './vList';\r\nexport * from './vSheetAction';\r\nexport * from './vSchema';\r\nexport * from './vArchived';\r\nexport * from './vSheetView';\r\n","import * as React from 'react';\r\nimport { TuidMain, Book, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CBook, BookUI } from './cBook';\r\n\r\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        Book\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Book } from \"../../entities\";\r\nimport { VBookMain } from \"./vBookMain\";\r\n\r\nexport interface BookUI extends EntityUI {\r\n    CBook?: typeof CBook;\r\n    main: typeof VBookMain,\r\n}\r\n\r\nexport class CBook extends CEntity<Book, BookUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VBookMain);\r\n    }\r\n\r\n    protected get VBookMain():typeof VBookMain {return VBookMain}\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"tonva-tools\";\r\nimport { List, Muted } from \"tonva-react-form\";\r\nimport { Entity } from \"../../entities\";\r\nimport { CLink } from \"../link\";\r\nimport { CUq } from \"./cUq\";\r\n\r\nexport class VUq extends View<CUq> {\r\n    protected isSysVisible = false;\r\n    protected tuidLinks: CLink[];\r\n    protected mapLinks: CLink[];\r\n    protected sheetLinks: CLink[];\r\n    protected actionLinks: CLink[];\r\n    protected queryLinks: CLink[];\r\n    protected bookLinks: CLink[];\r\n    protected historyLinks: CLink[];\r\n    protected pendingLinks: CLink[];\r\n\r\n    constructor(cUq: CUq) {\r\n        super(cUq);\r\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\r\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\r\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\r\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\r\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\r\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\r\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\r\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\r\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\r\n    }\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n    render(param?:any) {\r\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\r\n        return React.createElement(this.view);\r\n    }\r\n\r\n    protected view = () => {\r\n        let {res, uq, error} = this.controller;\r\n        let linkItem = {\r\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \r\n            onClick: undefined, \r\n        };\r\n        let lists = [\r\n            {\r\n                header: res.tuid || 'TUID',\r\n                items: this.tuidLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.map || 'MAP',\r\n                items: this.mapLinks,\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.sheet || 'SHEET',\r\n                items: this.sheetLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.action || 'ACTION',\r\n                items: this.actionLinks\r\n            },\r\n            {\r\n                cn: 'my-2',\r\n                header: res.query || 'QUERY',\r\n                items: this.queryLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.book || 'BOOK',\r\n                items: this.bookLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.history || 'HISTORY',\r\n                items: this.historyLinks\r\n            },\r\n            {\r\n                cn: 'mt-2 mb-4',\r\n                header: res.pending || 'PENDING',\r\n                items: this.pendingLinks\r\n            }\r\n        ];\r\n        let content;\r\n        if (error !== undefined) {\r\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\r\n        }\r\n        else {\r\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\r\n                key={index}\r\n                className={cn}\r\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\r\n                items={items}\r\n                item={linkItem} />\r\n            );\r\n        }\r\n        return <>\r\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\r\n            {content}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\r\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\r\nimport { CLink } from '../link';\r\nimport { CBook, BookUI } from '../book';\r\nimport { CSheet, SheetUI } from '../sheet';\r\nimport { ActionUI, CAction } from '../action';\r\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\r\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\r\nimport { MapUI, CMap } from '../map';\r\nimport { CEntity, EntityUI } from '../CVEntity';\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VUq } from './vUq';\r\nimport { CHistory, HistoryUI } from '../history';\r\nimport { CPending, PendingUI } from '../pending';\r\nimport { CApp } from '../CApp';\r\n\r\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\r\n\r\nexport interface UqUI {\r\n    CTuidMain?: typeof CTuidMain;\r\n    CTuidEdit?: typeof CTuidEdit;\r\n    CTuidList?: typeof CTuidList;\r\n    CTuidSelect?: typeof CTuidSelect;\r\n    CTuidInfo?: typeof CTuidInfo;\r\n    CQuery?: typeof CQuery;\r\n    CQuerySelect?: typeof CQuerySelect;\r\n    CMap?: typeof CMap;\r\n    CAction?: typeof CAction;\r\n    CSheet?: typeof CSheet;\r\n    CBook?: typeof CBook;\r\n    CHistory?: typeof CHistory;\r\n    CPending?: typeof CPending;\r\n    tuid?: {[name:string]: TuidUI};\r\n    sheet?: {[name:string]: SheetUI};\r\n    action?: {[name:string]: ActionUI};\r\n    map?: {[name:string]: MapUI};\r\n    query?: {[name:string]: QueryUI};\r\n    book?: {[name:string]: BookUI};    \r\n    history?: {[name:string]: HistoryUI};\r\n    pending?: {[name:string]: PendingUI};\r\n    res?: any;\r\n}\r\n\r\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\r\n    if (entities === undefined) return;\r\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\r\n}\r\n\r\nexport class CUq extends Controller /* implements Uq*/ {\r\n    private ui:any;\r\n    private CTuidMain: typeof CTuidMain;\r\n    private CTuidEdit: typeof CTuidEdit;\r\n    private CTuidList: typeof CTuidList;\r\n    private CTuidSelect: typeof CTuidSelect;\r\n    private CTuidInfo: typeof CTuidInfo;\r\n    private CQuery: typeof CQuery;\r\n    private CQuerySelect: typeof CQuerySelect;\r\n    private CMap: typeof CMap;\r\n    private CAction: typeof CAction;\r\n    private CSheet: typeof CSheet;\r\n    private CBook: typeof CBook;\r\n    private CHistory: typeof CHistory;\r\n    private CPending: typeof CPending;\r\n\r\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\r\n        super(resLang(ui.res));\r\n        this.cApp = cApp;\r\n        this.uq = uq;\r\n        this.id = uqId;\r\n        // 每一个ui都转换成小写的key的版本\r\n        lowerPropertyName(ui.tuid);\r\n        lowerPropertyName(ui.sheet);\r\n        lowerPropertyName(ui.map);\r\n        lowerPropertyName(ui.query);\r\n        lowerPropertyName(ui.action);\r\n        lowerPropertyName(ui.book);\r\n        lowerPropertyName(ui.history);\r\n        lowerPropertyName(ui.pending);\r\n        this.ui = ui;\r\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\r\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\r\n        this.CTuidList = ui.CTuidList || CTuidList;\r\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\r\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\r\n        this.CQuery = ui.CQuery || CQuery;\r\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\r\n        this.CMap = ui.CMap || CMap;\r\n        this.CAction = ui.CAction || CAction;\r\n        this.CSheet = ui.CSheet || CSheet;\r\n        this.CBook = ui.CBook || CBook;\r\n        this.CHistory = ui.CHistory || CHistory;\r\n        this.CPending = ui.CPending || CPending;\r\n\r\n        let token = undefined;\r\n        let uqOwner:string, uqName:string;\r\n        let p = uq.split('/');\r\n        switch (p.length) {\r\n            case 1:\r\n                uqOwner = '$$$';\r\n                uqName = p[0];\r\n                break;\r\n            case 2:\r\n                uqOwner = p[0];\r\n                uqName = p[1];\r\n                break;\r\n            default:\r\n                console.log('uq must be uqOwner/uqName format');\r\n                return;\r\n        }\r\n\r\n        let hash = document.location.hash;\r\n        let baseUrl = hash===undefined || hash===''? \r\n            'debug/':'tv/';\r\n\r\n        let acc: string[];\r\n        if (access === null || access === undefined || access === '*') {\r\n            acc = [];\r\n        }\r\n        else {\r\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\r\n        }\r\n        let uqApi:UqApi;\r\n        if (uq === '$$$/$unitx') {\r\n            // 这里假定，点击home link之后，已经设置unit了\r\n            // 调用 UnitxApi会自动搜索绑定 unitx service\r\n            uqApi = new UnitxApi(meInFrame.unit);\r\n        }\r\n        else {\r\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\r\n        }\r\n        this.entities = new Entities(this, uqApi, appId);\r\n    }\r\n\r\n    protected async internalStart() {\r\n    }\r\n\r\n    cApp:CApp;\r\n    uq: string;\r\n    id: number;\r\n    res: any;\r\n    entities:Entities;\r\n    error: string;\r\n    private schemaLoaded:boolean = false;\r\n\r\n    protected async loadEntites() {\r\n        await this.entities.loadAccess();\r\n    }\r\n\r\n    async loadSchema():Promise<string> {\r\n        try {\r\n            if (this.schemaLoaded === true) return;\r\n            await this.loadEntites();\r\n            if (this.id === undefined) this.id = this.entities.uqId;\r\n\r\n            for (let i in this.ui) {\r\n                let g = this.ui[i];\r\n                if (g === undefined) continue;\r\n                let {caption, collection} = g;\r\n                if (collection === undefined) continue;\r\n                for (let j in collection) {\r\n                    if (this.entities[i](j) === undefined) {\r\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\r\n                    }\r\n                }\r\n            }\r\n            this.schemaLoaded = true;\r\n            return;\r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n            return this.error = err;\r\n            //debugger;\r\n            //return err.message;\r\n        }\r\n    }\r\n\r\n    async getQuerySearch(name:string):Promise<Query> {\r\n        let query = this.entities.query(name);\r\n        if (query === undefined) \r\n            alert(`QUERY ${name} 没有定义!`);\r\n        else {\r\n            await query.loadSchema();\r\n            let {returns} = query;\r\n            if (returns.length > 1) {\r\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\r\n            }\r\n        }\r\n        return query;\r\n    }\r\n    getTuidPlaceHolder(tuid:Tuid) {\r\n        let {tuidPlaceHolder, entity} = this.res;\r\n        let {name} = tuid;\r\n        let type:string;\r\n        if (entity !== undefined) {\r\n            let en = entity[name];\r\n            if (en !== undefined) {\r\n                type = en.label;\r\n            }\r\n        }\r\n        return (tuidPlaceHolder || 'Select');\r\n    }\r\n    getNone() {\r\n        let {none} = this.res;\r\n        return none || 'none';\r\n    }\r\n    protected isSysVisible = false;\r\n    protected isVisible(entity: Entity):boolean {\r\n        return entity.sys !== true || this.isSysVisible;\r\n    }\r\n\r\n    async navSheet(sheetTypeId:number, sheetId:number) {\r\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\r\n        if (sheet === undefined) {\r\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\r\n            return;\r\n        }\r\n        let cSheet = this.cSheet(sheet);\r\n        await cSheet.startSheet(sheetId);\r\n    }\r\n\r\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\r\n    action(entityName:string) {return this.entities.action(entityName);}\r\n    query(entityName:string) {return this.entities.query(entityName);}\r\n    book(entityName:string) {return this.entities.book(entityName);}\r\n    map(entityName:string) {return this.entities.map(entityName);}\r\n    history(entityName:string) {return this.entities.history(entityName);}\r\n    pending(entityName:string) {return this.entities.pending(entityName);}\r\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\r\n    tuidDiv(entityName:string, divName:string) {\r\n        let tuid = this.entities.tuid(entityName);\r\n        if (tuid === undefined) return;\r\n        let {divs} = tuid;\r\n        if (divs === undefined) return;\r\n        return divs[divName];\r\n    }\r\n\r\n    cSheetFromName(entityName:string):CSheet {\r\n        let entity = this.entities.sheet(entityName);\r\n        if (entity !== undefined) return this.cSheet(entity);\r\n    }\r\n    cActionFromName(entityName:string) {\r\n        let entity = this.entities.action(entityName);\r\n        if (entity !== undefined) return this.cAction(entity);\r\n    }\r\n    cQueryFromName(entityName:string) {\r\n        let entity = this.entities.query(entityName);\r\n        if (entity !== undefined) return this.cQuery(entity);\r\n    }\r\n    cBookFromName(entityName:string) {\r\n        let entity = this.entities.book(entityName);\r\n        if (entity !== undefined) return this.cBook(entity);\r\n    }\r\n    cMapFromName(entityName:string) {\r\n        let entity = this.entities.map(entityName);\r\n        if (entity !== undefined) return this.cMap(entity);\r\n    }\r\n    cHistoryFromName(entityName:string) {\r\n        let entity = this.entities.history(entityName);\r\n        if (entity !== undefined) return this.cHistory(entity);\r\n    }\r\n    cPendingFromName(entityName:string) {\r\n        let entity = this.entities.pending(entityName);\r\n        if (entity !== undefined) return this.cPending(entity);\r\n    }\r\n    cTuidMainFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidMain(entity);\r\n    }\r\n    cTuidEditFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidEdit(entity);\r\n    }\r\n    cTuidInfoFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidInfo(entity);\r\n    }\r\n\r\n    cTuidSelectFromName(entityName:string) {\r\n        let entity = this.entities.tuid(entityName);\r\n        if (entity !== undefined) return this.cTuidSelect(entity);\r\n    }\r\n\r\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\r\n        switch (entityType) {\r\n            case 'sheet':\r\n                let sheet = this.entities.sheet(entityName);\r\n                if (sheet === undefined) return;\r\n                return this.cSheet(sheet);\r\n            case 'action':\r\n                let action = this.entities.action(entityName);\r\n                if (action === undefined) return;\r\n                return this.cAction(action);\r\n            case 'tuid':\r\n                let tuid = this.entities.tuid(entityName);\r\n                if (tuid === undefined) return;\r\n                return this.cTuidMain(tuid);\r\n            case 'query':\r\n                let query = this.entities.query(entityName);\r\n                if (query === undefined) return;\r\n                return this.cQuery(query);\r\n            case 'book':\r\n                let book = this.entities.book(entityName);\r\n                if (book === undefined) return;\r\n                return this.cBook(book);\r\n            case 'map':\r\n                let map = this.entities.map(entityName);\r\n                if (map === undefined) return;\r\n                return this.cMap(map);\r\n            case 'history':\r\n                let history = this.entities.history(entityName);\r\n                if (history === undefined) return;\r\n                return this.cHistory(history);\r\n            case 'pending':\r\n                let pending = this.entities.pending(entityName);\r\n                if (pending === undefined) return;\r\n                return this.cPending(pending);\r\n        }\r\n    }\r\n\r\n    linkFromName(entityType:EntityType, entityName:string) {\r\n        return this.link(this.cFromName(entityType, entityName));\r\n    }\r\n\r\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\r\n        let ui, res;\r\n        let {name, typeName} = t;\r\n        if (this.ui !== undefined) {\r\n            let tUI = this.ui[typeName];\r\n            if (tUI !== undefined) {\r\n                ui = tUI[name];\r\n            }\r\n        }\r\n        let {entity} = this.res;\r\n        if (entity !== undefined) {\r\n            res = entity[name];\r\n        }\r\n        return {ui: ui || {}, res: res || {} };\r\n    }\r\n\r\n    link(cEntity:CEntity<Entity, EntityUI>) {\r\n        return new CLink(cEntity);\r\n    }\r\n\r\n    get tuidLinks() {\r\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\r\n    }\r\n    cTuidMain(tuid:TuidMain):CTuidMain {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\r\n    }\r\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\r\n    }\r\n    cTuidList(tuid:TuidMain):CTuidList {\r\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\r\n    }\r\n    cTuidSelect(tuid:Tuid):CTuidSelect {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\r\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\r\n    }\r\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\r\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\r\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\r\n    }\r\n\r\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\r\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\r\n        //if (sheetUI !== undefined) ui = sheetUI;\r\n        //if (sheetRes !== undefined) res = sheetRes;\r\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\r\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\r\n    }\r\n    get sheetLinks() { \r\n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cSheet(v))\r\n        });\r\n    }\r\n\r\n    cAction(action:Action):CAction {\r\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\r\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\r\n    }\r\n    get actionLinks() { \r\n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cAction(v))\r\n        });\r\n    }\r\n\r\n    cQuery(query:Query):CQuery {\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\r\n    }\r\n    cQuerySelect(queryName:string):CQuerySelect {\r\n        let query = this.entities.query(queryName);\r\n        if (query === undefined) return;\r\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\r\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\r\n    }\r\n    get queryLinks() {\r\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cQuery(v))\r\n        });\r\n    }\r\n    \r\n    cBook(book:Book):CBook {\r\n        let {ui, res} = this.getUI<Book, BookUI>(book);\r\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\r\n    }\r\n    get bookLinks() { \r\n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cBook(v))\r\n        });\r\n    }\r\n    \r\n    cHistory(history:History):CHistory {\r\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\r\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\r\n    }\r\n    get historyLinks() { \r\n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cHistory(v))\r\n        });\r\n    }\r\n    \r\n    cPending(pending:Pending):CPending {\r\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\r\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\r\n    }\r\n    get pendingLinks() { \r\n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cPending(v))\r\n        });\r\n    }\r\n    \r\n    cMap(map:Map):CMap {\r\n        let {ui, res} = this.getUI<Map, MapUI>(map);\r\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\r\n    }\r\n    get mapLinks() { \r\n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\r\n            return this.link(this.cMap(v));\r\n        });\r\n    }\r\n\r\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\r\n        let {owner} = tuid;\r\n        if (owner === undefined) {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\r\n            return (ui && ui.content) || PureJSONContent;\r\n        }\r\n        else {\r\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\r\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\r\n        }\r\n    }\r\n\r\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\r\n        let {owner} = tuid;\r\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\r\n        await c.start(id);\r\n    }\r\n\r\n    protected get VUq():typeof VUq {return VUq}\r\n\r\n    render() {\r\n        let v = new (this.VUq)(this);\r\n        return v.render();\r\n    }\r\n}\r\n\r\n","export * from './cUq';\r\nexport * from './vUq';","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport className from 'classnames';\r\nimport { List, LMR, FA } from 'tonva-react-form';\r\nimport { Page, nav } from 'tonva-tools';\r\nimport { tv } from '../../tools';\r\nimport { Map } from '../../entities';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\r\nimport { PureJSONContent } from '../form/viewModel';\r\n\r\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\r\n    private isFrom: boolean;\r\n\r\n    async open(param?:any) {\r\n        this.isFrom = this.controller.isFrom;\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    itemRender = (item:MapItem, index:number) => {\r\n        return <this.ItemRow item={item} />;\r\n    }\r\n\r\n    private ItemRow = observer(({item}: {item:MapItem}) => {\r\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\r\n        let keyUI = this.controller.keyUIs[keyIndex];\r\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\r\n        let add:any, remove:any;\r\n        if (this.isFrom === false) {\r\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\r\n                <FA name=\"plus\" />\r\n            </button>;\r\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\r\n                <FA className=\"text-info\" name=\"trash\" />\r\n            </button>;\r\n        }\r\n        let right:any;\r\n        if (isLeaf === false) {\r\n            if (keyIndex === 0)\r\n                right = add;\r\n            else\r\n                right = <>{remove} &nbsp; {add}</>;\r\n        }\r\n        else if (keyIndex > 0) {\r\n            right = remove;\r\n        }\r\n        let content:any, border:any, valuesView:any;\r\n        if (isLeaf === true) {\r\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\r\n            if (values) {\r\n                //valuesView = null; // 现在不显示values content了\r\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\r\n            }\r\n        }\r\n        else {\r\n            border = \"border-bottom\";\r\n            let none = keyNone && keyNone(this.x);\r\n            content = <List \r\n                className=\"ml-4\" \r\n                items={children} \r\n                item={{onClick:undefined, render:this.itemRender}}\r\n                none={none} />\r\n        }\r\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\r\n        return <div className=\"d-flex flex-column\">\r\n            <LMR className={className('px-3', 'py-2', border)}\r\n                left={left}\r\n                right={right}\r\n            >\r\n                <div className=\"py-1\">{valuesView}</div>\r\n            </LMR>\r\n            {content}\r\n        </div>;\r\n    });\r\n\r\n    protected get view() { return () => <Page header={this.label}>\r\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\r\n        </Page>\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { VEntity } from \"../CVEntity\";\r\nimport { MapUI, CMap } from \"./cMap\";\r\nimport { Map } from \"../../entities\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { VForm } from '../form';\r\n\r\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\r\n    private vForm: VForm;\r\n\r\n    async open(param?:any) {\r\n        this.vForm = this.createForm(this.onValuesSubmit);\r\n        this.openPageElement(<this.view />);\r\n    }\r\n\r\n    private onValuesSubmit = async () => {\r\n        this.ceasePage();\r\n        let values = this.vForm.getValues();\r\n        this.returnCall(values);\r\n    }\r\n\r\n    private view = () => {\r\n        return <Page>\r\n            {this.vForm.render()}\r\n        </Page>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\r\nimport { VMapMain } from \"./vMain\";\r\nimport { observable } from \"mobx\";\r\nimport { PureJSONContent } from '../form/viewModel';\r\nimport { VInputValues } from './inputValues';\r\n\r\nexport interface MapKey {\r\n    content: (values, x?:any) => JSX.Element;\r\n    valuesContent?: (values, x?:any) => JSX.Element;\r\n    none?: (x:any)=>string;\r\n}\r\n\r\nexport interface MapUI extends EntityUI {\r\n    CMap?: typeof CMap;\r\n    keys?: MapKey[],\r\n}\r\n\r\nexport class MapItem {\r\n    parent: MapItem;\r\n    tuid: Tuid;\r\n    box: BoxId;\r\n    isLeaf: boolean;\r\n    keyIndex:number;\r\n    children: MapItem[] = observable.array([], {deep: true});\r\n    values: any;\r\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\r\n        this.parent = parent;\r\n        this.tuid = tuid;\r\n        this.box = box;\r\n        this.keyIndex = keyIndex;\r\n        this.isLeaf = false;\r\n    }\r\n}\r\n\r\nexport class CMap extends CEntity<Map, MapUI> {\r\n    isFrom: boolean;\r\n    items:MapItem[];\r\n    keyFields: Field[];\r\n    keyUIs: MapKey[];\r\n\r\n    protected async internalStart() {\r\n        let {keys, schemaFrom} = this.entity;\r\n        this.isFrom = schemaFrom !== undefined;\r\n        let q = this.entity.queries.all;\r\n        let result = await q.query({});\r\n        //let data = await this.entity.unpackReturns(res);\r\n        let ret = result.ret;\r\n        let keysLen = keys.length;\r\n        this.keyUIs = _.clone(this.ui.keys || []);\r\n        this.keyFields = [];\r\n        let retFields = q.returns[0].fields;\r\n        for (let i=0; i<keysLen; i++) {\r\n            this.keyFields.push(retFields[i]);\r\n            if (i >= this.keyUIs.length) {\r\n                this.keyUIs.push({\r\n                    content: PureJSONContent,\r\n                });\r\n            }\r\n        }\r\n        this.items = observable([]);\r\n        let item:MapItem = undefined;\r\n        for (let r of ret) {\r\n            let newItem = this.addItem(item, r);\r\n            if (newItem !== undefined) {\r\n                this.items.push(newItem);\r\n                item = newItem;\r\n            }\r\n        }\r\n\r\n        await this.openVPage(this.VMapMain);\r\n    }\r\n\r\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\r\n        let item = new MapItem(parent, tuid, box, keyIndex);\r\n        if (keyIndex === this.keyFields.length - 1) {\r\n            item.isLeaf = true;\r\n            item.values = values;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    addItem(item:MapItem, row:any):MapItem {\r\n        let ret:MapItem = undefined;\r\n        let keysLen = this.keyFields.length;\r\n        let p = item;\r\n        for (let i=0;i<keysLen;i++) {\r\n            let key = this.keyFields[i];\r\n            let {name} = key;\r\n            let tuid = key._tuid;\r\n            let val:BoxId = row[name];\r\n            if (val === undefined) break;\r\n            let {id} = val;\r\n            if (i === 0) {\r\n                if (id === 0) continue;\r\n                if (p === undefined || p.box.id !== id) {\r\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\r\n                }\r\n                continue;\r\n            }\r\n            let {children, box} = p;\r\n            let len = children.length;\r\n            if (len > 0) {\r\n                let n = children[len-1];\r\n                if (n.box.id === id) {\r\n                    p = n;\r\n                    continue;\r\n                }\r\n            }\r\n            if (id > 0) {\r\n                children.push(p = this.createItem(p, tuid, val, i, row));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        let {_tuid, _ownerField} = keyField;\r\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n        let callParam = param;\r\n        if (_ownerField !== undefined) {\r\n            callParam = param[_ownerField.name];\r\n            if (typeof callParam === 'object') {\r\n                callParam = callParam.id;\r\n            }\r\n        }\r\n        let ret = await cTuidSelect.call(callParam);\r\n        return _tuid.getIdFromObj(ret);\r\n    }\r\n\r\n    addClick = async(item:MapItem) => {\r\n        let {keyIndex, children} = item;\r\n        let keysLen = this.keyFields.length;\r\n        let keysLast = keysLen-1;\r\n        let idx = keyIndex + 1;\r\n        if (idx >= keysLen) return;\r\n        let keyField = this.keyFields[idx];\r\n        let kn = keyField.name;\r\n        let tuid = keyField._tuid;\r\n        let searchParam = {} as any;\r\n        let data = {} as any;\r\n        for (let p=item;p!==undefined;p=p.parent) {\r\n            let {keyIndex:ki, box} = p;\r\n            let kn = this.keyFields[ki].name;\r\n            //searchParam[kn] = data['_' + kn] = box.id;\r\n            searchParam[kn] = data[kn] = box.id;\r\n        }\r\n\r\n        let id = await this.searchOnKey(keyField, searchParam);\r\n        if (id === undefined || id <= 0) return;\r\n        tuid.useId(id);\r\n        let idBox = tuid.boxId(id);\r\n        let arr1 = {} as any;\r\n        let values:any = {};\r\n        if (keyIndex+1===keysLast) {\r\n            tuid.useId(id);\r\n            //values[kn] = arr1['_' + kn] = idBox;\r\n            values[kn] = arr1[kn] = idBox;\r\n            if (this.entity.fields.length > 0) {\r\n                let ret = await this.vCall(VInputValues, data);\r\n                for (let i in ret) {\r\n                    //values[i] = arr1['_' + i] = ret[i];\r\n                    values[i] = arr1[i] = ret[i];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //values[kn] = data['_' + kn] = idBox;\r\n            values[kn] = data[kn] = idBox;\r\n            for (let i=idx+1;i<keysLast;i++) {\r\n                //data['_' + this.keyFields[i].name] = 0;\r\n                data[this.keyFields[i].name] = 0;\r\n            }\r\n            // 填map的key field 0 值\r\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\r\n            arr1[this.keyFields[keysLast].name] = 0;\r\n            let {fields} = this.entity;\r\n            for (let f of fields) {\r\n                let {name, type, null:nullable} = f;\r\n                if (!(nullable === true)) {\r\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\r\n                    arr1[f.name] = fieldDefaultValue(type);\r\n                }\r\n            }\r\n        }\r\n        data.arr1 = [arr1];\r\n        await this.entity.actions.add.submit(data);\r\n        let rowIndex = children.findIndex(v => v.box.id === id);\r\n        if (rowIndex < 0) {\r\n            children.push(this.createItem(item, tuid, idBox, idx, values));\r\n        }\r\n        else {\r\n            let {fields} = this.entity;\r\n            if (fields !== undefined && fields.length > 0) {\r\n                let row = children[rowIndex];\r\n                children.splice(rowIndex, 1);\r\n                row.values = values;\r\n                /*\r\n                for (let f of fields) {\r\n                    let {name:fn} = f;\r\n                    row.values[fn] = values[fn];\r\n                }*/\r\n                children.splice(rowIndex, 0, row);\r\n            }\r\n        }\r\n        this.removeCeased();\r\n    }\r\n\r\n    removeClick = async(item:MapItem) => {\r\n        let keyField = this.keyFields[item.keyIndex];\r\n        let tuid = keyField._tuid;\r\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\r\n        let label = cTuidMain.getLable(tuid);\r\n        let confirmDelete:_.TemplateExecutor = \r\n            this.res.confirmDelete \r\n            || _.template('do you really want to remove ${label}?');\r\n        if (confirm(confirmDelete({label:label})) === false) return;\r\n        let map:Map = this.entity;\r\n        let data = {} as any;\r\n        let arr1 = data['arr1'] = [];\r\n        let v0 = {} as any;\r\n        arr1.push(v0);\r\n        for (let p=item; p!==undefined;p=p.parent) {\r\n            let ki=p.keyIndex;\r\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\r\n            v0[this.keyFields[ki].name] = p.box.id;\r\n        }\r\n        let len = this.keyFields.length;\r\n        for (let i=item.keyIndex+1; i<len; i++) {\r\n            let k = this.keyFields[i];\r\n            //v0['_'+k.name] = -1;\r\n            v0[k.name] = -1;\r\n        }\r\n        await map.actions.del.submit(data);\r\n        let children = item.parent.children;\r\n        let index = children.findIndex(v => v === item);\r\n        if (index >= 0) children.splice(index, 1);\r\n    }\r\n\r\n    protected get VMapMain():typeof VMapMain {return VMapMain}\r\n}\r\n","export * from './cMap';\r\nexport * from './vMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, History, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CHistory, HistoryUI } from './cHistory';\r\n\r\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        History\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { History } from \"../../entities\";\r\nimport { VHistoryMain } from \"./vHistoryMain\";\r\n\r\nexport interface HistoryUI extends EntityUI {\r\n    CHistory?: typeof CHistory;\r\n    main: typeof VHistoryMain,\r\n}\r\n\r\nexport class CHistory extends CEntity<History, HistoryUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VHistoryMain);\r\n    }\r\n\r\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\r\n}\r\n","export * from './cHistory';\r\nexport * from './vHistoryMain';\r\n","import * as React from 'react';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { jsonStringify } from '../../tools';\r\nimport { VForm } from '../form';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CAction, ActionUI } from './cAction';\r\nimport { Action } from '../../entities';\r\n\r\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\r\n    protected vForm: VForm;\r\n    protected returns: any;\r\n\r\n    async open(param?:any):Promise<void> {\r\n        this.vForm = this.createForm(this.onSubmit, param);\r\n        this.openPage(this.mainPage);\r\n    }\r\n\r\n    private onSubmit = async () => {\r\n        let values = this.vForm.getValues();\r\n        this.returns = await this.controller.submit(values);\r\n        this.closePage();\r\n        this.openPage(this.resultPage);\r\n    }\r\n\r\n    protected mainPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label}>\r\n            {this.vForm.render('mx-3 my-2')}\r\n        </Page>;\r\n    }\r\n\r\n    protected resultPage = () => {\r\n        let {label} = this.controller;\r\n        return <Page header={label} back=\"close\">\r\n            完成！\r\n            <pre>\r\n                {jsonStringify(this.returns)}\r\n            </pre>\r\n        </Page>;\r\n    }\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Action } from \"../../entities\";\r\nimport { VActionMain } from \"./vActionMain\";\r\n\r\nexport interface ActionUI extends EntityUI {\r\n    CAction?: typeof CAction;\r\n    //main: typeof VActionMain,\r\n}\r\n\r\nexport class CAction extends CEntity<Action, ActionUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VActionMain);\r\n    }\r\n\r\n    protected get VActionMain():typeof VActionMain {return VActionMain}\r\n\r\n    async submit(values:any) {\r\n        return this.entity.submit(values);\r\n    }\r\n}\r\n","export * from './cAction';\r\nexport * from './vActionMain';\r\n","import * as React from 'react';\r\nimport { TuidMain, Pending, Entity } from '../../entities';\r\nimport { Page } from 'tonva-tools';\r\nimport { VEntity } from '../CVEntity';\r\nimport { CPending, PendingUI } from './cPending';\r\n\r\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\r\n    async open(param?:any):Promise<void> {\r\n        this.openPage(this.view);\r\n    }\r\n\r\n    protected view = () => <Page header={this.label}>\r\n        pending\r\n    </Page>;\r\n}\r\n","import { CEntity, EntityUI } from \"../CVEntity\";\r\nimport { Pending } from \"../../entities\";\r\nimport { VPendingMain } from \"./vPendingMain\";\r\n\r\nexport interface PendingUI extends EntityUI {\r\n    CPending?: typeof CPending;\r\n    main: typeof VPendingMain,\r\n}\r\n\r\nexport class CPending extends CEntity<Pending, PendingUI> {\r\n    protected async internalStart() {\r\n        await this.openVPage(this.VPendingMain);\r\n    }\r\n\r\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\r\n}\r\n","export * from './cPending';\r\nexport * from './vPendingMain';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport abstract class ItemEdit {\r\n    protected name: string;\r\n    protected itemSchema: ItemSchema;\r\n    protected uiItem:UiItem;\r\n    protected value: any;\r\n    protected label: string;\r\n\r\n    @observable protected isChanged: boolean = false;\r\n    protected newValue: any;\r\n\r\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\r\n        this.itemSchema = itemSchema;\r\n        this.uiItem = uiItem\r\n        this.value = value;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.label = label;\r\n    }\r\n    async start():Promise<any> {\r\n        return await this.internalStart();\r\n    }\r\n\r\n    protected abstract internalStart():Promise<any>;\r\n\r\n    async end():Promise<any> {\r\n        await this.internalEnd()\r\n    }\r\n\r\n    protected async internalEnd():Promise<void> {nav.pop()}\r\n}\r\n","export const consts = {\r\n    uqBasedata: \"bruce/scmbasedata\",\r\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\r\n}","\r\nimport {setCenterToken} from './uqApi';\r\nimport {WSChannel} from './wsChannel';\r\n\r\nexport const netToken = {\r\n    set(userId:number, token:string) {\r\n        setCenterToken(userId, token);\r\n        WSChannel.setCenterToken(token);\r\n    },\r\n    clear() {\r\n        setCenterToken(0, undefined);\r\n        WSChannel.setCenterToken(undefined);\r\n    }\r\n};\r\n","import {CenterApi} from '../net';\r\nimport {User, decodeUserToken} from '../user';\r\n//import { nav } from '../ui';\r\n\r\nexport class UserApi extends CenterApi {\r\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\r\n        //(params as any).device = nav.local.device.get();\r\n        let ret = await this.get('login', params);\r\n        switch (typeof ret) {\r\n            default: return;\r\n            case 'string': return decodeUserToken(ret);\r\n            case 'object':\r\n                let token = ret.token;\r\n                let user = decodeUserToken(token);\r\n                let {nick, icon} = ret;\r\n                if (nick) user.nick = nick;\r\n                if (icon) user.icon = icon;\r\n                return user;\r\n        }\r\n        // !== undefined) return decodeToken(token);\r\n    }\r\n    async register(params: {\r\n        nick:string, \r\n        user:string, \r\n        pwd:string,\r\n        country:number, \r\n        mobile:number, \r\n        email:string,\r\n        verify:string,\r\n    }): Promise<any>\r\n    {\r\n        return await this.post('register', params);\r\n    }\r\n\r\n    async setVerify(account:string, type:'mobile'|'email') {\r\n        return await this.post('set-verify', {account:account, type:type});\r\n    }\r\n\r\n    async checkVerify(account:string, verify:string) {\r\n        return await this.post('check-verify', {account:account, verify:verify});\r\n    }\r\n\r\n    async isExists(account:string) {\r\n        return await this.get('is-exists', {account:account});\r\n    }\r\n\r\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\r\n        return await this.post('reset-password', {account:account, password, verify, type});\r\n    }\r\n    \r\n    async userSetProp(prop:string, value:any) {\r\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\r\n    }\r\n}\r\n\r\nconst userApi = new UserApi('tv/user/', undefined);\r\n\r\nexport default userApi;\r\n","\r\nconst zero = '00000000000000';\r\nexport function left0(num:number, fix:number) {\r\n    if (num === undefined) return '';\r\n    let r = num.toString();\r\n    let len = fix - r.length;\r\n    if (len <= 0) return r;\r\n    return zero.substr(0, len) + r;\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport {User} from '../user';\r\nimport {nav} from './nav';\r\nimport {Page} from './page';\r\nimport { isDevelopment } from '../net';\r\n\r\nexport abstract class Controller {\r\n    readonly res: any;\r\n    readonly x: any;\r\n    icon: string|JSX.Element;\r\n    label:string;\r\n    readonly isDev:boolean = isDevelopment;\r\n    get user():User {return nav.user}\r\n    get isLogined():boolean {\r\n        let {user} = nav;\r\n        if (user === undefined) return false;\r\n        return user.id > 0;\r\n    }\r\n    constructor(res:any) {\r\n        this.res = res || {};\r\n        this.x = this.res.x || {};\r\n    }\r\n\r\n    private receiveHandlerId:number;\r\n    private disposer:()=>void;\r\n\r\n    private dispose() {\r\n        // message listener的清理\r\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\r\n        this.onDispose();\r\n    }\r\n\r\n    protected onDispose() {\r\n    }\r\n\r\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp((this as any) as C)).open(param);\r\n    }\r\n\r\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\r\n        return (new view((this as any) as C)).render(param);\r\n    }\r\n\r\n    async event(type:string, value:any) {\r\n        await this.onEvent(type, value);\r\n    }\r\n\r\n    protected async onEvent(type:string, value:any) {\r\n    }\r\n\r\n    protected msg(text:string) {\r\n        alert(text);\r\n    }\r\n    protected errorPage(header:string, err:any) {\r\n        this.openPage(<Page header=\"App error!\">\r\n            <pre>\r\n                {typeof err === 'string'? err : err.message}\r\n            </pre>\r\n        </Page>);\r\n    }\r\n\r\n    protected onMessage(message:any):Promise<void> {\r\n        return;\r\n    }\r\n\r\n    private onMessageReceive = async (message:any):Promise<void> => {\r\n        await this.onMessage(message);\r\n    }\r\n\r\n    protected async beforeStart():Promise<boolean> {\r\n        /*\r\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n        console.log('return true');\r\n        */\r\n        return true;\r\n    }\r\n    protected registerReceiveHandler() {\r\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\r\n    }\r\n\r\n    protected abstract internalStart(param?:any):Promise<void>;\r\n    async start(param?:any):Promise<void> {\r\n        this.disposer = this.dispose.bind(this);\r\n        this.registerReceiveHandler();\r\n        let ret = await this.beforeStart();\r\n        if (ret === false) return;\r\n        await this.internalStart(param);\r\n    }\r\n\r\n    get isCalling():boolean {return this._resolve_$ !== undefined}\r\n\r\n    private _resolve_$:((value:any) => void)[];\r\n    async call(param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await this.start(param);\r\n        });\r\n    }\r\n\r\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\r\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\r\n        return new Promise<any> (async (resolve, reject) => {\r\n            this._resolve_$.push(resolve);\r\n            await (new vp(this as any)).open(param);\r\n        });\r\n    }\r\n\r\n    returnCall(value:any) {\r\n        if (this._resolve_$ === undefined) return;\r\n        let resolve = this._resolve_$.pop();\r\n        if (resolve === undefined) {\r\n            alert('the Controller call already returned, or not called');\r\n            return;\r\n        }\r\n        resolve(value);\r\n    }\r\n\r\n    openPage(page:JSX.Element) {\r\n        nav.push(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    replacePage(page:JSX.Element) {\r\n        nav.replace(page, this.disposer);\r\n        this.disposer = undefined;\r\n    }\r\n\r\n    backPage() {\r\n        nav.back();\r\n    }\r\n\r\n    closePage(level?:number) {\r\n        nav.pop(level);\r\n    }\r\n\r\n    ceasePage(level?:number) {\r\n        nav.ceaseTop(level);\r\n    }\r\n\r\n    removeCeased() {\r\n        nav.removeCeased();\r\n    }\r\n\r\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        nav.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\n\r\nexport abstract class View<C extends Controller> {\r\n    protected controller: C;\r\n    protected readonly res: any;\r\n    protected readonly x: any;\r\n\r\n    constructor(controller: C) {\r\n        this.controller = controller;\r\n        this.res = controller.res;\r\n        this.x = controller.x;\r\n    }\r\n\r\n    protected get isDev() {return isDevelopment}\r\n\r\n    abstract render(param?:any): JSX.Element;\r\n\r\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\r\n        return (new vm(this.controller)).render(param);\r\n    }\r\n\r\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\r\n        await (new vp(this.controller)).open(param);\r\n    }\r\n\r\n    protected async event(type:string, value?:any) {\r\n        /*\r\n        if (this._resolve_$_ !== undefined) {\r\n            await this._resolve_$_({type:type, value:value});\r\n            return;\r\n        }*/\r\n        await this.controller.event(type, value);\r\n    }\r\n\r\n    protected returnCall(value:any) {\r\n        this.controller.returnCall(value);\r\n    }\r\n\r\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.openPage(React.createElement(view, param));\r\n    }\r\n\r\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\r\n        this.controller.replacePage(React.createElement(view, param));\r\n    }\r\n\r\n    protected openPageElement(page: JSX.Element) {\r\n        this.controller.openPage(page);\r\n    }\r\n\r\n    protected replacePageElement(page: JSX.Element) {\r\n        this.controller.replacePage(page);\r\n    }\r\n\r\n    protected backPage() {\r\n        this.controller.backPage();\r\n    }\r\n\r\n    protected closePage(level?:number) {\r\n        this.controller.closePage(level);\r\n    }\r\n\r\n    protected ceasePage(level?:number) {\r\n        this.controller.ceasePage(level);\r\n    }\r\n\r\n    protected removeCeased() {\r\n        this.controller.removeCeased();\r\n    }\r\n\r\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\r\n        this.controller.regConfirmClose(confirmClose);\r\n    }\r\n}\r\n\r\nexport abstract class VPage<C extends Controller> extends View<C> {\r\n    abstract open(param?:any):Promise<void>;\r\n\r\n    render(param?:any):JSX.Element {return null;}\r\n}\r\n\r\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\r\n\r\n","export * from './schema';\r\nexport * from './uiSchema';\r\n","import {observable, IObservableArray, computed} from 'mobx';\r\nimport {uid} from './uid';\r\n\r\nexport abstract class PageItems<T> {\r\n    constructor(itemObservable:boolean = false) {\r\n        this._items = observable.array<T>([], {deep:itemObservable});\r\n    }\r\n    private isFirst: boolean = true;\r\n    @observable loading: boolean = false;\r\n    @observable private beforeLoad: boolean = true;\r\n    @observable protected loaded: boolean = false;\r\n    protected _items:IObservableArray<T>;\r\n    @observable allLoaded: boolean = false;\r\n    @computed get items():IObservableArray<T> {\r\n        if (this.beforeLoad === true) return null;\r\n        if (this.loaded === false) return undefined;\r\n        return this._items;\r\n    }\r\n\r\n    @observable topDiv:string;\r\n    @observable bottomDiv:string;\r\n    scrollToTop() {\r\n        this.topDiv = '$$'+uid();\r\n    }\r\n    scrollToBottom() {\r\n        this.bottomDiv = '$$'+uid();\r\n    }\r\n\r\n    protected param: any;\r\n    protected firstSize = 100;\r\n    protected pageStart = undefined;\r\n    protected pageSize = 30;\r\n    protected appendPosition:'head'|'tail' = 'tail';\r\n\r\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\r\n    protected abstract setPageStart(item:T);\r\n\r\n    reset() {\r\n        this.isFirst = true;\r\n        this.beforeLoad = true;\r\n        this.loaded = false;\r\n        this.param = undefined;\r\n        this.allLoaded = false;\r\n        this._items.clear();\r\n        this.setPageStart(undefined);\r\n    }\r\n\r\n    append(item:T) {\r\n        if (this.appendPosition === 'tail')\r\n            this._items.unshift(item);\r\n        else\r\n            this._items.push(item);\r\n    }\r\n\r\n    async first(param:any):Promise<void> {\r\n        this.reset();\r\n        this.beforeLoad = false;\r\n        this.param = param;\r\n        await this.more();        \r\n    }\r\n\r\n    async more():Promise<void> {\r\n        if (this.allLoaded === true) return;\r\n        if (this.loading === true) return;\r\n        this.loading = true;\r\n        let pageSize = this.pageSize + 1;\r\n        if (this.isFirst === true) {\r\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\r\n        }\r\n        let ret = await this.load(\r\n                this.param, \r\n                this.pageStart,\r\n                pageSize);\r\n        this.loading = false;\r\n        this.loaded = true;\r\n        let len = ret.length;\r\n        if (this.isFirst===true && len>this.firstSize ||\r\n            this.isFirst===false && len>this.pageSize)\r\n        {\r\n            this.allLoaded = false;\r\n            --len;\r\n            ret.splice(len, 1);\r\n        }\r\n        else {\r\n            this.allLoaded = true;\r\n        }\r\n        if (len === 0) {\r\n            this._items.clear();\r\n            return;\r\n        }\r\n        this.setPageStart(ret[len-1]);\r\n        if (this.appendPosition === 'tail')\r\n            this._items.push(...ret);\r\n        else\r\n            this._items.unshift(...ret.reverse());\r\n        this.isFirst = false;\r\n    }\r\n}\r\n","import {observable, computed} from 'mobx';\r\n\r\nexport interface Id {\r\n    id: number;\r\n}\r\n\r\nexport abstract class CacheIds<T extends Id> {\r\n    constructor(maxCount:number = 100) {\r\n        this.maxCount = maxCount;\r\n    }\r\n    private maxCount:number;\r\n    private arr:T[] = [];\r\n    @observable dict = new Map<number, T>();\r\n\r\n    loadIds(ids:number[]) {\r\n        let arr:number[] = [];\r\n        for (let id of ids) {\r\n            if (id === null) continue;\r\n            let item = this.dict.get(id);\r\n            if (item === undefined) {\r\n                arr.push(id);\r\n                item = {id:id} as T;\r\n                this.dict.set(id, item);\r\n            }\r\n        }                \r\n        this.loadId(arr);\r\n    }\r\n\r\n    get(id:number):T {\r\n        if (id === undefined || id === null) return null;\r\n        let item = this.dict.get(id);\r\n        if (item === undefined) {\r\n            this.dict.set(id, {id:id} as T);\r\n            this.loadId([id]);\r\n            item = this.dict.get(id);\r\n        }\r\n        return item;\r\n    }\r\n    private setItem(id:number, item:T) {\r\n        if (item === undefined) {\r\n            this.dict.set(id, null);\r\n            this.arr.push({id: id} as T);\r\n        }\r\n        else {\r\n            this.dict.set(id, item);\r\n            this.arr.push(item);\r\n        }\r\n        if (this.arr.length > this.maxCount) {\r\n            item = this.arr.shift();\r\n            this.dict.delete(item.id);\r\n        }\r\n    }\r\n    private async loadId(ids:number[]) {\r\n        let items = await this._loadIds(ids);\r\n        if (items === undefined) {\r\n            for (let id of ids) {\r\n                if (id === null) continue;\r\n                let item = await this._loadId(id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n        else {\r\n            for (let id of ids) {\r\n                let item = items.find(v => v.id === id);\r\n                this.setItem(id, item);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\r\n    protected abstract async _loadId(id:number):Promise<T>;\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {FormView, FormProps} from './formView';\r\n\r\nexport function tonvaDebug() {\r\n    let a = 0;\r\n}\r\n\r\nexport interface TonvaFormProps extends FormProps {\r\n    className?: string;\r\n    initValues?: any;\r\n}\r\n\r\n@observer \r\nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\r\n    formView: FormView;\r\n    constructor(props:TonvaFormProps) {\r\n        super(props);\r\n        this.formView = new FormView(this.props);\r\n    }\r\n    componentWillMount() {\r\n        this.formView.setInitValues(this.props.initValues);\r\n    }\r\n    debug() {\r\n        let s = null;\r\n    }\r\n    render() {\r\n        let {className, children, initValues} = this.props;\r\n        return <div className={className}>\r\n            {\r\n                children === undefined? \r\n                    this.formView.render() : \r\n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport interface Action {\r\n    icon?: string;\r\n    caption?: string;\r\n    action?: () => void;\r\n}\r\n\r\nexport interface DropdownActionsProps {\r\n    icon?: string;\r\n    actions: Action[];\r\n    isRight?: boolean;\r\n}\r\n\r\nexport interface DropdownActionsState {\r\n    dropdownOpen: boolean;\r\n}\r\n\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    private menu: HTMLDivElement;\r\n    private button: HTMLElement;\r\n    constructor(props:DropdownActionsProps) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleDocumentClick);\r\n        document.addEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleDocumentClick);\r\n        document.removeEventListener('touchstart', this.handleDocumentClick);\r\n    }\r\n\r\n    private handleDocumentClick = (evt:any) => {\r\n        if (this.state.dropdownOpen === false) return;\r\n        if (this.button && this.button.contains(evt.target)) return;\r\n        if (!this.menu) return;\r\n        //if (!this.menu.contains(evt.target)) \r\n        this.toggle();\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        let {dropdownOpen} = this.state;\r\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\r\n        return <div className=\"dropdown\">\r\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={dropdownOpen}\r\n                onClick={this.toggle}>\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </button>\r\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\r\n                {\r\n                    actions.map((v,index) => {\r\n                        let {icon, caption, action} = v;\r\n                        if (icon === undefined && caption === undefined) \r\n                            return <div className=\"dropdown-divider\" />;\r\n                        let i:any;\r\n                        if (hasIcon === true) {\r\n                            if (icon !== undefined) icon = 'fa-' + icon;\r\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                        }\r\n                        if (action === undefined) \r\n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/*\r\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen: false\r\n        };\r\n    }\r\n    private toggle = () => {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render() {\r\n        let {icon, actions, isRight} = this.props;\r\n        if (isRight === undefined) isRight = true;\r\n        let hasIcon = actions.some(v => v.icon!==undefined);\r\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\r\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\r\n            </DropdownToggle>\r\n            <DropdownMenu right={isRight}>\r\n                {actions.map((v,index) => {\r\n                    let {icon, caption, action} = v;\r\n                    if (icon === undefined && caption === undefined) \r\n                        return <div className=\"dropdown-divider\" />;\r\n                    let i;\r\n                    if (hasIcon === true) {\r\n                        if (icon !== undefined) icon = 'fa-' + icon;\r\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\r\n                    }\r\n                    if (action === undefined) \r\n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\r\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\r\n                })}\r\n            </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n    }\r\n}\r\n*/","import * as React from 'react';\r\n\r\nexport interface EasyDateProps {\r\n    date: Date | string;\r\n}\r\n\r\nexport class EasyDate extends React.Component<EasyDateProps> {\r\n    render() {\r\n        let {date} = this.props;\r\n        if (!date) return null;\r\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\r\n        let now = new Date();\r\n        let tick = now.getTime() - d.getTime();\r\n        let nDate=now.getDate();\r\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\r\n        let hm = hour + ((minute<10?':0':':') + minute);\r\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\r\n        if (tick < 24*3600*1000) {\r\n            return _date!==nDate? \r\n                (tick < 0? '明天 ' : '昨天 ') + hm \r\n                : hm;\r\n        }\r\n        if (tick < 365*24*3600*1000) {\r\n            return month+'月'+_date+'日 ';\r\n        }\r\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Image } from 'tonva-tools';\r\n\r\nexport interface MediaProps {\r\n    icon: string;\r\n    main: string|JSX.Element;\r\n    discription?: string | JSX.Element;\r\n    px?: number;\r\n    py?: number;\r\n}\r\n\r\nexport class Media extends React.Component<MediaProps> {\r\n    render() {\r\n        let {icon, main, discription, px, py} = this.props;\r\n        let disp:any;\r\n        if (typeof discription === 'string')\r\n            disp = <div>{discription}</div>;\r\n        else\r\n            disp = discription;\r\n        let cn = classNames(\r\n            'media', \r\n            px===undefined? 'px-0':'px-'+px, \r\n            py===undefined? 'py-2':'py-'+py);\r\n        return <div className={cn}>\r\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0\">{main}</h5>\r\n                {disp}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\n\r\nexport interface SearchBoxProps {\r\n    className?: string;\r\n    label?: string;\r\n    initKey?: string;\r\n    placeholder?: string;\r\n    buttonText?: string;\r\n    maxLength?: number;\r\n    size?: 'sm' | 'md' | 'lg';\r\n    inputClassName?: string;\r\n    onSearch: (key:string)=>Promise<void>;\r\n    onFocus?: ()=>void;\r\n    allowEmptySearch?: boolean;\r\n}\r\n\r\n/*\r\nexport interface SearchBoxState {\r\n    disabled: boolean;\r\n}*/\r\n\r\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\r\n    private input: HTMLInputElement;\r\n    private key: string = null;\r\n    @observable private disabled: boolean;\r\n\r\n    private onChange = (evt: React.ChangeEvent<any>) => {\r\n        this.key = evt.target.value;\r\n        if (this.key !== undefined) {\r\n            this.key = this.key.trim();\r\n            if (this.key === '') this.key = undefined;\r\n        }\r\n        if (this.props.allowEmptySearch !== true) {\r\n            this.disabled = !this.key;\r\n        }\r\n    }\r\n    private onSubmit = async (evt: React.FormEvent<any>) => {\r\n        evt.preventDefault();\r\n        if (this.key === null) this.key = this.props.initKey || '';\r\n        if (this.props.allowEmptySearch !== true) {\r\n            if (!this.key) return;\r\n            if (this.input) this.input.disabled = true;\r\n        }\r\n        await this.props.onSearch(this.key);\r\n        if (this.input) this.input.disabled = false;\r\n    }\r\n    clear() {\r\n        if (this.input) this.input.value = '';\r\n    }\r\n    render() {\r\n        let {className, inputClassName, onFocus,\r\n            label, placeholder, buttonText, maxLength, size} = this.props;\r\n        let inputSize:string;\r\n        switch (size) {\r\n            default:\r\n            case 'sm': inputSize = 'input-group-sm'; break;\r\n            case 'md': inputSize = 'input-group-md'; break;\r\n            case 'lg': inputSize = 'input-group-lg'; break;\r\n        }\r\n        let lab:any;\r\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\r\n        return <form className={className} onSubmit={this.onSubmit} >\r\n            <div className={classNames(\"input-group\", inputSize)}>\r\n                {lab}\r\n                <input ref={v=>this.input=v} onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"key\"\r\n                    onFocus={onFocus}\r\n                    className={classNames('form-control', inputClassName || 'border-primary')}\r\n                    placeholder={placeholder}\r\n                    defaultValue={this.props.initKey}\r\n                    maxLength={maxLength} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        disabled={this.disabled}>\r\n                        <i className='fa fa-search' />\r\n                        <i className=\"fa\"/>\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport _ from 'lodash';\r\nimport className from 'classnames';\r\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\r\n\r\nexport interface Step {\r\n    formRows: FormRow[];\r\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\r\n    ex?: any;                                   // 每一步额外的参数\r\n}\r\n\r\nexport interface MultiStepProps {\r\n    className?: string;\r\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\r\n    steps: {[name:string]: Step};\r\n    first: string;         // 第一步的名字\r\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\r\n    submitButton?: string|JSX.Element;\r\n}\r\n\r\nexport interface StepView {\r\n    stepName: string;\r\n    step: Step;\r\n    props: FormProps;\r\n    //view: JSX.Element;\r\n}\r\nexport interface MultiStepState {\r\n    //num: number;\r\n    //step: Step;\r\n    //formView: FormView;\r\n    topView: StepView;\r\n    stepViews: StepView[];\r\n}\r\n\r\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\r\n    private values: any = {};\r\n    private stepViews: StepView[] = [];\r\n    private topView: StepView;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topView: undefined,\r\n            stepViews: [],\r\n        }\r\n        this.onPrev = this.onPrev.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n    }\r\n    \r\n    private setStep(stepName: string) {\r\n        let step = this.props.steps[stepName];\r\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\r\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\r\n        let otherButton, onOther;\r\n        if (this.stepViews.length > 0) {\r\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\r\n            onOther = this.onPrev;\r\n        }\r\n        let {header, footer} = this.props;\r\n        let btnContent = step.next === undefined?\r\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\r\n            {suffix: 'arrow-right', text: '下一步'}\r\n        let formProps = {\r\n            formRows: step.formRows,\r\n            submitButton: <ButtonConten {...btnContent} />,\r\n            onSubmit: this.onNext,\r\n            otherButton: otherButton,\r\n            onOther: onOther,\r\n        };\r\n        let num = this.stepViews.length + 1;\r\n        this.topView = {\r\n            stepName: stepName,\r\n            step: step,\r\n            props: formProps,\r\n        };\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.setStep(this.props.first);\r\n    }\r\n    private onPrev(values:any) {\r\n        _.assign(this.values, values);\r\n        this.topView = this.stepViews.pop();\r\n        this.setState({\r\n            topView: this.topView,\r\n            stepViews: this.stepViews\r\n        });\r\n    }\r\n    private onNext(values:any): Promise<SubmitResult|undefined> {\r\n        _.assign(this.values, values);\r\n        //let {num, step} = this.state;\r\n        let {next} = this.topView.step;\r\n        if (next === undefined) {\r\n            return this.props.onSubmit(this.values)\r\n        }\r\n        let nextStepName:string;\r\n        if (typeof next === 'string') {\r\n            nextStepName = next;\r\n        }\r\n        else {\r\n            nextStepName = next(this.values);\r\n        }\r\n        this.setStep(nextStepName);\r\n    }\r\n    render() {\r\n        let {className, header, footer} = this.props;\r\n        let {topView, stepViews} = this.state;\r\n        let {stepName, step} = topView;\r\n        let hidden = {visibility: 'hidden'};\r\n        let num = stepViews.length + 1;\r\n        return <div className={className}>\r\n            <div>\r\n                {header && header(step, num)}\r\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\r\n                {footer && footer(step, num)}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\r\n    let {prefix, text, suffix} = props;\r\n    let pIcon, sIcon;\r\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\r\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\r\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\r\n}\r\n    \r\n","import _ from 'lodash';\r\nimport { Context } from '../context';\r\nimport { FormRes } from '../formRes';\r\n\r\nexport abstract class Rule {\r\n    abstract check(defy:string[], value:any):void;\r\n}\r\n\r\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\r\nexport type FieldRule = (value:any) => string[] | string;\r\n\r\nexport class RuleCustom extends Rule {\r\n    private func: FieldRule;\r\n    constructor(func: FieldRule) {\r\n        super();\r\n        this.func = func;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        let ret = this.func(value);\r\n        if (ret === undefined) return;\r\n        switch (typeof ret) {\r\n            case 'undefined': return;\r\n            case 'string': defy.push(ret as string); return;\r\n            default: defy.push(...ret); return;\r\n        }        \r\n    }\r\n}\r\n\r\nexport abstract class RulePredefined extends Rule {\r\n    protected res: FormRes;\r\n    constructor(res: FormRes) {\r\n        super();\r\n        this.res = res;\r\n    }\r\n}\r\n\r\nexport class RuleRequired extends RulePredefined {\r\n    check(defy:string[], value:any) {\r\n        switch (typeof value) {\r\n            default:\r\n            case 'boolean': return;\r\n            case 'object':\r\n                if (value !== null) return;\r\n                break;\r\n            case 'string':\r\n                if ((value as string).trim().length > 0) return;\r\n                break;\r\n            case 'number':\r\n                if ((value as number) !== NaN) return;\r\n                break;\r\n            case 'undefined':\r\n                break;\r\n        }\r\n        defy.push(this.res.required);\r\n    }\r\n}\r\n\r\nexport class RuleNum extends RulePredefined {\r\n    private minMsg: _.TemplateExecutor;\r\n    private maxMsg: _.TemplateExecutor;\r\n    protected min: number;\r\n    protected max: number\r\n    constructor(res: FormRes, min?: number, max?: number) {\r\n        super(res);\r\n        this.minMsg = _.template(res.min);\r\n        this.maxMsg = _.template(res.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    check(defy:string[], value:any) {\r\n        if (value === undefined || value === null) return;\r\n        let n = Number(value);\r\n        if (n === NaN) {\r\n            defy.push(this.res.number);\r\n        }\r\n        else {\r\n            this.checkMore(defy, n);\r\n        }\r\n    }\r\n\r\n    protected checkMore(defy:string[], value: number) {\r\n        if (this.min !== undefined && Number(value) < this.min) {\r\n            defy.push(this.minMsg({min:this.min}));\r\n        }\r\n        if (this.max !== undefined && Number(value) > this.max) {\r\n            defy.push(this.maxMsg({max:this.max}));\r\n        }\r\n    }\r\n}\r\n\r\nexport class RuleInt extends RuleNum {\r\n    protected checkMore(defy:string[], n: number) {\r\n        super.checkMore(defy, n);\r\n        if (Number.isInteger(n) === false) {\r\n            defy.push(this.res.integer);\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\r\nimport { FieldProps } from '../field';\r\nimport { Context } from '../context';\r\nimport { ItemSchema } from '../../schema';\r\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\r\nimport { computed, observable, reaction } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Widget {\r\n    protected name: string;\r\n    protected context: Context;\r\n    protected fieldProps:FieldProps;\r\n    protected children: React.ReactNode;\r\n    protected itemSchema: ItemSchema;\r\n    protected ui: UiItem;\r\n    protected defaultValue: any;\r\n    protected value: any;\r\n    protected rules: Rule[];\r\n    @observable protected errors: string[] = [];\r\n    @observable protected contextErrors: string[] = [];\r\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\r\n    protected readOnly:boolean;\r\n    protected disabled:boolean;\r\n    @observable visible:boolean;\r\n\r\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\r\n        this.context = context;\r\n        let {name} = itemSchema;\r\n        this.name = name;\r\n        this.itemSchema = itemSchema;\r\n        this.fieldProps = fieldProps;\r\n        this.children = children;\r\n        this.ui = context.getUiItem(name);\r\n        if (this.ui === undefined) {\r\n            this.readOnly = false;\r\n            this.disabled = false;\r\n            this.visible = true;\r\n        }\r\n        else {\r\n            let {readOnly, disabled, visible} = this.ui;\r\n            this.readOnly = (readOnly === true);\r\n            this.disabled = (disabled === true);\r\n            this.visible = !(visible === false);            \r\n        }\r\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\r\n        this.init();\r\n    }\r\n\r\n    protected init() {\r\n        this.rules = [];\r\n        if (this.itemSchema.required === true) {\r\n            this.rules.push(new RuleRequired(this.context.form.res));\r\n        }\r\n        this.buildRules();\r\n        if (this.ui === undefined) return;\r\n        let {rules} = this.ui;\r\n        if (rules === undefined) return;\r\n        if (Array.isArray(rules) === false) {\r\n            this.rules.push(new RuleCustom(rules as FieldRule));\r\n            return;\r\n        }\r\n        for (let rule of rules as FieldRule[]) {\r\n            this.rules.push(new RuleCustom(rule));\r\n        }\r\n    }\r\n\r\n    protected buildRules() {\r\n    }\r\n\r\n    checkRules() {\r\n        let defy:string[] = [];\r\n        for (let r of this.rules) r.check(defy, this.value);\r\n        if (defy.length === 0) {\r\n            this.context.removeErrorWidget(this);\r\n        }\r\n        else {\r\n            this.context.addErrorWidget(this);\r\n            this.errors.push(...defy);\r\n        }\r\n    }\r\n\r\n    @computed get isOk() {\r\n        return this.errors.length ===0;\r\n    }\r\n\r\n    setError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.errors.push(err);\r\n        else this.errors.push(...err);\r\n    }\r\n\r\n    setContextError(err:string | string[]) {\r\n        if (err === undefined) return;\r\n        if (typeof err === 'string') this.contextErrors.push(err);\r\n        else this.contextErrors.push(...err);\r\n    }\r\n\r\n    clearError() {\r\n        this.errors.splice(0);\r\n    }\r\n\r\n    clearContextError() {\r\n        this.contextErrors.splice(0);\r\n    }\r\n\r\n    protected parse(value:any):any {return value}\r\n\r\n    protected setElementValue(value:any) {}\r\n    protected setDataValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        this.context.initData[this.name] = this.value = this.parse(value);\r\n    }\r\n\r\n    setValue(value:any) {\r\n        if (this.isChanging === true) return;\r\n        //this.setDataValue(value);\r\n        //this.setElementValue(value);\r\n        this.changeValue(value, false);\r\n    }\r\n\r\n    getValue() {\r\n        return this.context.getValue(this.name);\r\n    }\r\n\r\n    getReadOnly():boolean {return this.readOnly}\r\n    getDisabled():boolean {return this.disabled}\r\n    getVisible():boolean {return this.visible}\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}\r\n    setVisible(value:boolean) {this.visible = value}\r\n\r\n    private isChanging: boolean;\r\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\r\n        this.changeValue(evt.target.value, true);\r\n    }\r\n\r\n    protected changeValue(newValue: any, fromElement: boolean) {\r\n        let prev = this.value;\r\n        let onChanging: ChangingHandler;\r\n        let onChanged: ChangedHandler;\r\n        if (this.ui !== undefined) {\r\n            onChanging = this.ui.onChanging;\r\n            onChanged = this.ui.onChanged;\r\n        }\r\n        let allowChange = true;\r\n        if (onChanging !== undefined) {\r\n            this.isChanging = true;\r\n            allowChange = onChanging(this.context, this.value, prev);\r\n            this.isChanging = false;\r\n        }\r\n        if (allowChange === true) {\r\n            this.setDataValue(newValue);\r\n            if (fromElement !== true) this.setElementValue(newValue);\r\n            if (onChanged !== undefined) {\r\n                this.isChanging = true;\r\n                onChanged(this.context, this.value, prev);\r\n                this.isChanging = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get className():string {\r\n        let fieldClass:string;\r\n        if (this.context.inNode === false) fieldClass = 'form-control';\r\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\r\n    }\r\n\r\n    protected abstract render():JSX.Element;\r\n\r\n    container = observer(():JSX.Element => {\r\n        if (this.visible === false) return null;\r\n        let {form, inNode} = this.context;\r\n        if (inNode === true) return this.render();\r\n        let label:any = this.label;\r\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\r\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\r\n        }\r\n        return form.FieldContainer(label, this.render());\r\n    })\r\n\r\n    protected get label():string {\r\n        let label:any;\r\n        if (this.ui === undefined) {\r\n            label = this.name;\r\n        }\r\n        else {\r\n            let uiLabel = this.ui.label;\r\n            if (uiLabel === null) label = null;\r\n            else label = uiLabel || this.name;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    protected renderTemplet():JSX.Element | undefined {\r\n        if (this.children !== undefined) {\r\n            return <>{this.children}</>;\r\n        }\r\n        if (this.ui === undefined) return undefined;\r\n        let {Templet} = this.ui;\r\n        if (typeof Templet === 'function') return Templet(this.value);\r\n        return Templet;\r\n    }\r\n\r\n    protected renderErrors() {\r\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\r\n        if (errorList.length === 0) return null;\r\n        let {inNode} = this.context;\r\n        let tag = inNode === true? 'span' : 'div';\r\n        return errorList.map(err => React.createElement(tag, \r\n            {\r\n                key: err, \r\n                className: 'text-danger d-inline-block my-2 ml-3'\r\n            },\r\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\r\n        ));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextItem, StringSchema } from '../../schema';\r\n\r\nexport class TextWidget extends Widget {\r\n    protected inputType = 'text';\r\n    protected ui: UiTextItem;\r\n    protected input: HTMLInputElement;\r\n\r\n    protected setElementValue(value:any) {\r\n        if (this.input === null) return;\r\n        this.input.value = value;\r\n    }\r\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\r\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\r\n        this.internalOnKeyDown(evt);\r\n        if (evt.keyCode !== 13) return;\r\n        let {onEnter} = this.context.form.props;\r\n        if (onEnter === undefined) return;\r\n\r\n        this.changeValue(evt.currentTarget.value, true);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n\r\n        let ret = await onEnter(this.name, this.context);\r\n        if (ret !== undefined) {\r\n            this.context.setError(this.name, ret);\r\n        }\r\n    }\r\n\r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n    }\r\n\r\n    protected onBlur(evt: React.FocusEvent<any>) {\r\n        this.onInputChange(evt);\r\n        this.checkRules();\r\n        this.context.checkContextRules();\r\n    }\r\n    protected onFocus(evt: React.FocusEvent<any>) {\r\n        this.clearError();\r\n        this.context.removeErrorWidget(this);\r\n        this.context.removeErrors();\r\n    }\r\n    protected onChange(evt: React.ChangeEvent<any>) {\r\n    }\r\n\r\n    setReadOnly(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.readOnly = this.readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        if (this.input === null) return;\r\n        this.input.disabled = this.disabled = value;\r\n    }\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {\r\n            //'form-control': true,\r\n        };\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, cn)}\r\n            type={this.inputType}\r\n            defaultValue={this.value}\r\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\r\n            placeholder={this.placeholder}\r\n            readOnly={this.readOnly}\r\n            disabled={this.disabled}\r\n            onKeyDown = {this.onKeyDown}\r\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\r\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\r\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\nimport { RuleNum, RuleInt } from '../rules';\r\nimport { NumBaseSchema } from '../../schema';\r\n\r\nexport class NumberWidget extends TextWidget {\r\n    protected inputType = 'number';\r\n    protected itemSchema: NumBaseSchema;\r\n\r\n    protected buildRules() {\r\n        super.buildRules();\r\n        let res = this.context.form.res;\r\n        let {min, max} = this.itemSchema;\r\n        this.rules.push(\r\n            this.itemSchema.type === 'integer'?\r\n                new RuleNum(res, min, max) :\r\n                new RuleInt(res, min, max)\r\n        );\r\n        /*\r\n        if (this.itemSchema.type === 'integer') {\r\n            this.rules.push(new RuleInt);\r\n        }\r\n        let {min, max} = this.itemSchema;\r\n        if (min !== undefined) this.rules.push(new RuleMin(min));\r\n        if (max !== undefined) this.rules.push(new RuleMax(max));\r\n        */\r\n    }\r\n\r\n    protected parse(value:any):any {\r\n        if (value === undefined || value === null) return;\r\n        return Number(value);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NumberWidget } from './numberWidget';\r\n\r\nexport class UpdownWidget extends NumberWidget {\r\n    protected inputType = 'number';\r\n\r\n    protected isValidKey(key:number):boolean {\r\n        return key===46 || key===8 || key===37 || key===39\r\n            || key>=48 && key<=57\r\n            || key>=96 && key<=105\r\n            || key===109 || key===189;\r\n    }\r\n    \r\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\r\n        let key = evt.keyCode;\r\n        event.returnValue = this.isValidKey(key);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class DateWidget extends TextWidget {\r\n    protected inputType = 'date';\r\n}\r\n\r\nexport class DateTimeWidget extends TextWidget {\r\n    protected inputType = 'datetime';\r\n}\r\n\r\nexport class TimeWidget extends TextWidget {\r\n    protected inputType = 'time';\r\n}\r\n\r\nexport class MonthWidget extends TextWidget {\r\n    protected inputType = 'month';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiCheckItem } from '../../schema';\r\n\r\nexport class CheckBoxWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiCheckItem;\r\n    protected trueValue: any;\r\n    protected falseValue: any;\r\n\r\n    protected init() {\r\n        super.init();\r\n        if (this.ui !== undefined) {\r\n            let {trueValue, falseValue} = this.ui;\r\n            if (trueValue === undefined) this.trueValue = true;\r\n            else this.trueValue = trueValue;\r\n            if (falseValue === undefined) this.falseValue = false;\r\n            else this.falseValue = falseValue;\r\n        }\r\n        else {\r\n            this.trueValue = true;\r\n            this.falseValue = false;\r\n        }\r\n    }\r\n    protected setElementValue(value:any) {\r\n        this.input.checked = value === this.trueValue;\r\n    }\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    protected onClick = () => {\r\n        this.context.removeErrors();\r\n    }\r\n\r\n    render() {\r\n        let cn = classNames(this.className, 'form-check-inline p-0');\r\n        let input = <input\r\n            ref={(input)=>this.input = input}\r\n            className={'align-self-center'}\r\n            type=\"checkbox\"\r\n            defaultChecked={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            onClick={this.onClick} />;\r\n        if (this.context.inNode === true) {\r\n            return <label className={cn}>\r\n                {input} {(this.ui&&this.ui.label) || this.name}\r\n            </label>\r\n        }\r\n        else {\r\n            return <div className={cn}>\r\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { observable } from 'mobx';\r\nimport { Widget } from './widget';\r\nimport { UiSelect } from '../../schema';\r\n\r\nexport class SelectWidget extends Widget {\r\n    protected select: HTMLSelectElement;\r\n    protected ui: UiSelect;\r\n    @observable protected readOnly: boolean;\r\n\r\n    protected setElementValue(value:any) {this.select.value = value}\r\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setDataValue(evt.target.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\r\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        if (this.readOnly === true) {\r\n            let option = this.ui.list.find(v => v.value === this.value);\r\n            let title = (option === undefined)? '(???)' : option.title;\r\n            return <span className=\"form-control w-min-6c\">{title}</span>;\r\n        }\r\n        return <select\r\n            ref={(select)=>this.select = select}\r\n            className={classNames(this.className, 'form-control')}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}>\r\n            {this.ui.list.map((v,index) => {\r\n                let {title, value} = v;\r\n                let cn:string;\r\n                //if (value === undefined || value === null) cn = 'text-light small';\r\n                //else cn = 'text-danger';\r\n                return <option className={cn} key={index} value={value}>{title || value}</option>\r\n            })}\r\n        </select>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiIdItem, TempletType } from '../../schema';\r\nimport { observable } from 'mobx';\r\n\r\nexport class IdWidget extends Widget {\r\n    protected ui: UiIdItem;\r\n    @observable protected value:number;\r\n    setReadOnly(value:boolean) {this.readOnly = value}\r\n    setDisabled(value:boolean) {this.disabled = value}    \r\n\r\n    protected onClick = async () => {\r\n        let pickId = this.ui && this.ui.pickId;\r\n        if (pickId === undefined) {\r\n            alert('no pickId defined!');\r\n            return;\r\n        }\r\n        let id = await pickId(this.context, this.name, this.value);        \r\n        this.setDataValue(id);\r\n        this.clearError();\r\n        this.clearContextError();\r\n        this.checkRules();\r\n    }\r\n\r\n    render() {\r\n        let placeholder:string|JSX.Element, Templet: TempletType;\r\n        if (this.ui !== undefined) {\r\n            placeholder = this.ui.placeholder;\r\n            Templet = this.ui.Templet;\r\n        }\r\n        let cn = {\r\n            'form-control': true,\r\n            'required-item': this.itemSchema.required === true,\r\n            'cursor-pointer': true,\r\n            'is-invalid': this.hasError,\r\n        };\r\n        let content;\r\n        if (this.value === undefined || this.value === null) {\r\n            content = placeholder || 'placeholder';\r\n            cn['text-muted'] = true;\r\n        }\r\n        else if (Templet === undefined) {\r\n            content = <>{this.value}</>;\r\n        }\r\n        else if (typeof Templet === 'function') {\r\n            content = Templet(this.value);\r\n        }\r\n        else {\r\n            content = Templet;\r\n        }\r\n        return <>\r\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\r\n            {this.renderErrors()}\r\n        </>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { DataType } from '../../schema';\r\nimport { UiType } from '../../schema';\r\n\r\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\r\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\r\n};\r\n","import * as React from 'react';\r\nimport { UiButton, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { Widget } from './widget';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport class ButtonWidget extends Widget {\r\n    protected ui: UiButton;\r\n\r\n    protected onClick = async () => {\r\n        this.clearError();\r\n        this.clearContextError();\r\n        let {name, type} = this.itemSchema;\r\n        if (type === 'submit') {\r\n            this.context.checkRules()\r\n            if (this.context.hasError === true) {\r\n                return;\r\n            }\r\n        }\r\n        let {onButtonClick} = this.context.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`button ${name} clicked. you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(name, this.context);\r\n        if (ret === undefined) return;\r\n        this.context.setError(name, ret);\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let {name, type} = this.itemSchema;\r\n        let Templet:TempletType, cn:string, caption:string;\r\n        if (this.ui !== undefined) {\r\n            let {widget:widgetType} = this.ui;\r\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\r\n            Templet = this.ui.Templet;\r\n            cn = this.ui.className;\r\n            caption = this.ui.label;\r\n        }\r\n        let {form, hasError} = this.context;\r\n        let context = this.context;\r\n        let disabled = type==='submit' && hasError;\r\n        let content:any;\r\n        if (this.children !== undefined) content = this.children;\r\n        else if (typeof Templet === 'function') content = Templet();\r\n        else if (Templet !== undefined) content = Templet;\r\n        else content = caption; \r\n        let button = <button \r\n            className={cn} \r\n            type=\"button\"\r\n            disabled={disabled}\r\n            onClick={this.onClick}>\r\n            {content || name}\r\n        </button>;\r\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\r\n        return <div className={form.ButtonClass}>\r\n            <div>{this.renderErrors()}</div>\r\n            {button}\r\n        </div>;\r\n    });\r\n    \r\n    protected get label():string {return null}\r\n\r\n    render() {\r\n        return <this.observerRender />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Form } from './form';\r\nimport { UiSchema, UiArr, UiItem } from '../schema';\r\nimport { ArrSchema, ItemSchema } from '../schema';\r\nimport { Widget as Widget } from './widgets/widget';\r\n//import { ArrRow } from './arrRow';\r\nimport { observable, computed } from 'mobx';\r\nimport { ContextRule } from './rules';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport abstract class Context {\r\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\r\n    readonly form: Form;\r\n    readonly uiSchema: UiSchema;\r\n    readonly initData: any;\r\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\r\n    readonly widgets: {[name:string]: Widget} = {};\r\n    readonly rules: ContextRule[];\r\n    readonly isRow: boolean;\r\n    @observable errors: string[] = [];\r\n    @observable errorWidgets:Widget[] = [];\r\n\r\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\r\n        this.form = form;\r\n        this.uiSchema = uiSchema;\r\n        this.initData = data;\r\n        this.inNode = inNode;\r\n        this.isRow = isRow;\r\n        if (uiSchema !== undefined) {\r\n            let {rules} = uiSchema;\r\n            if (rules !== undefined) {\r\n                this.rules = [];\r\n                if (Array.isArray(rules) === false)\r\n                    this.rules.push(rules as ContextRule);\r\n                else\r\n                    this.rules.push(...rules as ContextRule[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrRowContexts(arrName: string) {\r\n        if (this.subContexts === undefined) this.subContexts = {};\r\n        let arrRowContexts = this.subContexts[name];\r\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\r\n        return arrRowContexts;\r\n    }\r\n\r\n    abstract get data():any;\r\n    abstract getItemSchema(itemName:string):ItemSchema;\r\n    abstract getUiItem(itemName:string):UiItem;\r\n    get arrName():string {return undefined}\r\n    getValue(itemName:string):any {return this.initData[itemName]}\r\n    setValue(itemName:string, value:any) {\r\n        this.initData[itemName] = value;\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setValue(value);\r\n    }\r\n    getDisabled(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) return widget.getDisabled();\r\n        return undefined;\r\n    }\r\n    setDisabled(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setDisabled(value);\r\n    }\r\n    getReadOnly(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getReadOnly();\r\n        return undefined;\r\n    }\r\n    setReadOnly(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setReadOnly(value);\r\n    }\r\n    getVisible(itemName:string):boolean {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.getVisible();\r\n        return undefined;\r\n    }\r\n    setVisible(itemName:string, value:boolean) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget !== undefined) widget.setVisible(value);\r\n    }\r\n\r\n    checkFieldRules() {\r\n        for (let i in this.widgets) {\r\n            this.widgets[i].checkRules();\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                arrRowContexts[j].checkFieldRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    checkContextRules() {\r\n        if (this.rules === undefined) return;\r\n        this.clearContextErrors();\r\n        for (let rule of this.rules) {\r\n            let ret = rule(this);\r\n            if (ret === undefined) continue;\r\n            if (Array.isArray(ret) === true) {\r\n                this.errors.push(...ret as string[]);\r\n            }\r\n            else if (typeof ret === 'string') {\r\n                this.errors.push(ret as string);\r\n            }\r\n            else {\r\n                for (let i in ret as object) this.setError(i, ret[i]);\r\n            }\r\n        }\r\n        if (this.subContexts === undefined) return;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                let rowContext = arrRowContexts[j];\r\n                rowContext.removeErrors();\r\n                rowContext.checkContextRules();\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(itemName:string, error:string) {\r\n        let widget = this.widgets[itemName];\r\n        if (widget === undefined) return;\r\n        widget.setContextError(error);\r\n        this.addErrorWidget(widget);\r\n    }\r\n\r\n    clearContextErrors() {\r\n        for (let i in this.widgets) this.widgets[i].clearContextError();\r\n    }\r\n\r\n    checkRules() {\r\n        this.checkFieldRules();\r\n        this.checkContextRules();\r\n    }\r\n\r\n    addErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos < 0) this.errorWidgets.push(widget);\r\n    }\r\n    removeErrorWidget(widget:Widget) {\r\n        let pos = this.errorWidgets.findIndex(v => v === widget);\r\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\r\n    }\r\n\r\n    protected checkHasError():boolean {\r\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\r\n        if (ret === true) return true;\r\n        if (this.subContexts === undefined) return false;\r\n        for (let i in this.subContexts) {\r\n            let arrRowContexts = this.subContexts[i];\r\n            for (let j in arrRowContexts) {\r\n                if (arrRowContexts[j].hasError === true) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @computed get hasError():boolean {\r\n        return this.checkHasError();\r\n    };\r\n\r\n    removeErrors() {\r\n        this.errors.splice(0);\r\n        this.errorWidgets.splice(0);\r\n        for (let i in this.widgets) {\r\n            let widget = this.widgets[i];\r\n            if (widget === undefined) continue;\r\n            widget.clearContextError();\r\n        }\r\n    }\r\n\r\n    renderErrors = observer((): JSX.Element => {\r\n        let {errors} = this;\r\n        if (errors.length === 0) return null;\r\n        return <>\r\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\r\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\r\n            </span>)}\r\n        </>\r\n    });\r\n}\r\n\r\nlet rowKeySeed:number = 1;\r\nexport class RowContext extends Context {\r\n    readonly parentContext: Context;\r\n    readonly arrSchema: ArrSchema;\r\n    readonly uiSchema: UiArr;\r\n    //readonly row: ArrRow;\r\n    readonly rowKey: number;\r\n    readonly data: any;\r\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\r\n        let uiArr:UiArr;\r\n        let {uiSchema} = parentContext;\r\n        if (uiSchema !== undefined) {\r\n            let {items} = uiSchema;\r\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\r\n        }\r\n        super(parentContext.form, uiArr, data, inNode, true);\r\n        this.parentContext = parentContext;\r\n        this.arrSchema = arrSchema;\r\n        this.rowKey = rowKeySeed++;\r\n        this.data = data;\r\n    }\r\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        if (this.uiSchema === undefined) return undefined;\r\n        let {items} = this.uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n    get arrName():string {return this.arrSchema.name}\r\n    //get data() {return this.row.data;}\r\n    removeErrors() {\r\n        super.removeErrors();\r\n        this.parentContext.removeErrors();\r\n    }\r\n\r\n    get parentData():any {return this.parentContext.data;}\r\n}\r\n\r\nexport class FormContext extends Context {\r\n    constructor(form:Form, inNode:boolean) {\r\n        super(form, form.uiSchema, form.data, inNode, false);\r\n    }\r\n    get data():any {return this.form.data}\r\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\r\n    getUiItem(itemName:string):UiItem {\r\n        let {uiSchema} = this.form;\r\n        if (uiSchema === undefined) return undefined;\r\n        let {items} = uiSchema;\r\n        if (items === undefined) return undefined;\r\n        return items[itemName]\r\n    }\r\n}\r\n\r\nexport const ContextContainer = React.createContext<Context>({} as any);\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport classNames from 'classnames';\r\n//import { ArrRow } from '../arrRow';\r\nimport { Context, RowContext, ContextContainer } from '../context';\r\nimport { ArrSchema } from '../../schema';\r\nimport { UiArr, TempletType } from '../../schema';\r\nimport { Unknown } from './unknown';\r\nimport { factory } from './factory';\r\n\r\nexport const ArrComponent = observer((\r\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \r\n{\r\n    let {name, arr} = arrSchema;\r\n    let data = parentContext.initData[name] as any[];\r\n    let {form} = parentContext;\r\n    let arrRowContexts = parentContext.getArrRowContexts(name);\r\n    let ui = parentContext.getUiItem(name) as UiArr;\r\n    let arrLabel = name;\r\n    let Templet:TempletType;\r\n    let selectable:boolean, deletable:boolean, restorable:boolean;\r\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\r\n    if (uiSchema !== undefined) {\r\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\r\n        if (selectable !== true) selectable = formSelectable;\r\n        if (deletable !== true) deletable = formDeletable;\r\n        if (restorable !== true) restorable = formRestorable;\r\n    }\r\n    if (ui !== undefined) {\r\n        let {widget:widgetType, label, \r\n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\r\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\r\n        } = ui;\r\n        if (arrSelectable !== undefined) selectable = arrSelectable;\r\n        if (arrDeletable !== undefined) deletable = arrDeletable;\r\n        if (arrRestorable !== undefined) restorable = arrRestorable;\r\n        if (ac !== undefined) ArrContainer = ac;\r\n        if (rc !== undefined) RowContainer = rc;\r\n        if (rs !== undefined) RowSeperator = rs;\r\n        Templet = ui.Templet;\r\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\r\n        arrLabel = label || arrLabel;\r\n    }\r\n    let first = true;\r\n    return ArrContainer(arrLabel, <>\r\n        {data.map((row:any, index) => {\r\n            let rowContext: RowContext;\r\n            let rowContent: JSX.Element;\r\n            let sep = undefined;\r\n            if (first === false) sep = RowSeperator;\r\n            else first = false;\r\n            if (children !== undefined) {\r\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                rowContent = <>{children}</>;\r\n            }\r\n            else {\r\n                let typeofTemplet = typeof Templet;\r\n                if (typeofTemplet === 'function') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\r\n                }\r\n                else if (typeofTemplet === 'object') {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\r\n                    rowContent = Templet as JSX.Element;\r\n                }\r\n                else {\r\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\r\n                    rowContent = <>{\r\n                        arr.map((v, index) => {\r\n                            return <React.Fragment key={v.name}>\r\n                                {factory(rowContext, v, undefined)}\r\n                            </React.Fragment>\r\n                        })}\r\n                    </>;\r\n                }\r\n            }\r\n            let {rowKey} = rowContext;\r\n            arrRowContexts[rowKey] = rowContext;\r\n\r\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\r\n            if (selectable === true) {\r\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\r\n                    let {checked} = (evt.target as HTMLInputElement);\r\n                    row.$isSelected = checked;\r\n                    let {$source} = row;\r\n                    if ($source !== undefined) $source.$isSelected = checked;\r\n                    rowContext.removeErrors();\r\n                }\r\n                selectCheck = <div className=\"form-row-checkbox\">\r\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\r\n                </div>;\r\n            }\r\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\r\n            if (deletable === true) {\r\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\r\n                let onDelClick = () => {\r\n                    if (restorable === true) {\r\n                        row.$isDeleted = !isDeleted;\r\n                        let {$source} = row;\r\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\r\n                    }\r\n                    else {\r\n                        let p = data.indexOf(row);\r\n                        if (p>=0) data.splice(p, 1);\r\n                    }\r\n                    rowContext.removeErrors();\r\n                }\r\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\r\n                    <i className={classNames('fa', icon, 'fa-fw')} />\r\n                </div>;\r\n            }\r\n            let editContainer = selectable===true || deletable===true?\r\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\r\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\r\n                </div></fieldset>\r\n                :\r\n                (content:any) => content;\r\n\r\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\r\n                {sep}\r\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\r\n            </ContextContainer.Provider>;\r\n        })}\r\n    </>);\r\n});\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiImageItem } from '../../schema';\r\nimport { Image } from '../../image';\r\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\nexport class ImageWidget extends Widget {\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiImageItem;\r\n    @observable private imageSrc: string;\r\n\r\n    protected init() {\r\n        super.init();\r\n        this.imageSrc = this.value;\r\n    }\r\n\r\n    protected onClick = async () => {\r\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\r\n        let ret = await edit.start();\r\n        if (ret !== null) {\r\n            this.setValue(ret);\r\n            this.imageSrc = ret;\r\n        }\r\n        await edit.end();\r\n    }\r\n\r\n    render() {\r\n        return <this.observerRender />;\r\n    }\r\n\r\n    private observerRender = observer(() => {\r\n        let cn = [\r\n            'bg-white p-1 d-flex justify-content-center',\r\n        ];\r\n        let onClick: any;\r\n        if (!this.readOnly && !this.disabled) {\r\n            cn.push('cursor-pointer');\r\n            onClick = this.onClick;\r\n        }\r\n        return <div className={classNames(cn)} onClick={onClick}>\r\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\r\n        </div>;\r\n    });\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\r\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\r\nimport { TextWidget } from './textWidget';\r\nimport { TextAreaWidget } from './textareaWidget';\r\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\r\nimport { UpdownWidget } from './updownWidget';\r\nimport { NumberWidget } from './numberWidget';\r\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\r\nimport { CheckBoxWidget } from './checkBoxWidget';\r\nimport { FieldProps } from '../field';\r\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\r\nimport { SelectWidget } from './selectWidget';\r\nimport { RadioWidget } from './radioWidget';\r\nimport { RangeWidget } from './rangeWidget';\r\nimport { IdWidget } from './idWidget';\r\nimport { ButtonWidget } from './buttonWidget';\r\nimport { ArrComponent } from './arrComponent';\r\nimport { ImageWidget } from './imageWidget';\r\n\r\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\r\n    id: {\r\n        dataTypes: ['id'],\r\n        widget: IdWidget,\r\n    },\r\n    text: {\r\n        dataTypes: ['integer', 'number', 'string'],\r\n        widget: TextWidget\r\n    },\r\n    textarea: {\r\n        dataTypes: ['string'],\r\n        widget: TextAreaWidget\r\n    },\r\n    password: {\r\n        dataTypes: ['string'],\r\n        widget: PasswordWidget\r\n    },\r\n    date: {\r\n        dataTypes: ['date'],\r\n        widget: DateWidget\r\n    },\r\n    datetime: {\r\n        dataTypes: ['date'],\r\n        widget: DateTimeWidget\r\n    },\r\n    time: {\r\n        dataTypes: ['date'],\r\n        widget: TimeWidget\r\n    },\r\n    month: {\r\n        dataTypes: ['date'],\r\n        widget: MonthWidget\r\n    },\r\n    select: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: SelectWidget\r\n    },\r\n    url: {\r\n        dataTypes: ['string'],\r\n        widget: UrlWidget\r\n    },\r\n    email: {\r\n        dataTypes: ['string'],\r\n        widget: EmailWidget\r\n    },\r\n    number: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: NumberWidget\r\n    },\r\n    updown: {\r\n        dataTypes: ['integer', 'number'],\r\n        widget: UpdownWidget\r\n    },\r\n    color: {\r\n\r\n    },\r\n    checkbox: {\r\n        dataTypes: ['boolean', 'integer', 'number'],\r\n        widget: CheckBoxWidget\r\n    },\r\n    image: {\r\n        dataTypes: ['string'],\r\n        widget: ImageWidget,\r\n    },\r\n    checkboxes: {\r\n\r\n    },\r\n    radio: {\r\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\r\n        widget: RadioWidget\r\n    },\r\n    range: {\r\n        dataTypes: ['integer'],\r\n        widget: RangeWidget,\r\n    },\r\n    button: {\r\n        dataTypes: ['button', 'submit'],\r\n        widget: ButtonWidget,\r\n    }\r\n}\r\n\r\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\r\n    if (context === undefined) {\r\n        debugger;\r\n        return null;\r\n    }\r\n    if (itemSchema === undefined) return undefined;\r\n    let {name, type} = itemSchema;\r\n    switch (type) {\r\n    case 'arr':\r\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\r\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    let typeWidget: TypeWidget;\r\n    let ui = context.getUiItem(name);\r\n    function getTypeWidget(t:DataType): TypeWidget {\r\n        switch(t) {\r\n        default: return TextWidget; \r\n        case 'id': return IdWidget;\r\n        case 'integer': return UpdownWidget;\r\n        case 'number': return NumberWidget; \r\n        case 'string': return TextWidget; \r\n        case 'date': return DateWidget; \r\n        case 'boolean': return CheckBoxWidget; \r\n        case 'button':\r\n        case 'submit': return ButtonWidget;\r\n        }\r\n    }\r\n    if (ui === undefined) { \r\n        typeWidget = getTypeWidget(type);\r\n    }\r\n    else {\r\n        let {widget:widgetType} = ui;\r\n        switch (widgetType) {\r\n        default:\r\n            if (widgetType !== undefined) {\r\n                let widgetFactory = widgetsFactory[widgetType];\r\n                typeWidget = widgetFactory.widget;\r\n            }\r\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\r\n            break;\r\n        case 'custom':\r\n            typeWidget = (ui as UiCustom).WidgetClass;\r\n            break;\r\n        case 'group':\r\n            return <span>impletment group</span>;\r\n        }\r\n        //label = uiLabel || name;\r\n    }\r\n    \r\n    let {isRow, widgets} = context;\r\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\r\n    widgets[name] = widget;\r\n\r\n    return <widget.container />;\r\n    /*\r\n    if (isRow === false) {\r\n        let WidgetElement = observer(() => widget.container());\r\n        return <WidgetElement />;\r\n    }\r\n    else {\r\n        let widgetElement = widget.container();\r\n        return widgetElement;\r\n    }\r\n    */\r\n}\r\n\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Widget } from './widget';\r\nimport { UiTextAreaItem } from '../../schema';\r\nimport { StringSchema } from '../../schema';\r\n\r\nexport class TextAreaWidget extends Widget {\r\n    protected itemSchema: StringSchema;\r\n    protected input: HTMLTextAreaElement;\r\n    protected ui: UiTextAreaItem;\r\n\r\n    protected setElementValue(value:any) {this.input.value = value}\r\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setValue(evt.currentTarget.value);\r\n    }\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let renderTemplet = this.renderTemplet();\r\n        if (renderTemplet !== undefined) return renderTemplet;\r\n        let cn = {};\r\n        if (this.hasError === true) {\r\n            cn['is-invalid'] = true;\r\n        }\r\n        else {\r\n            cn['required-item'] = this.itemSchema.required === true;\r\n        }\r\n        return <textarea ref={(input) => this.input=input} \r\n            className={classNames(this.className, cn)}\r\n            rows={this.ui && this.ui.rows}\r\n            maxLength={this.itemSchema.maxLength}\r\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { TextWidget } from './textWidget';\r\n\r\nexport class PasswordWidget extends TextWidget {\r\n    protected inputType = 'password';\r\n}\r\n\r\nexport class UrlWidget extends TextWidget {\r\n    protected inputType = 'url';\r\n}\r\n\r\nexport class EmailWidget extends TextWidget {\r\n    protected inputType = 'email';\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TextWidget } from './textWidget';\r\nimport { Widget } from './widget';\r\nimport { UiRadio } from '../../schema';\r\nimport { RowContext } from '../context';\r\n\r\n\r\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\r\nexport class RadioWidget extends Widget {\r\n    protected inputs: {[index:number]: HTMLInputElement} = {};\r\n    protected ui: UiRadio;\r\n\r\n    protected setElementValue(value:any) {\r\n        for (let i in this.inputs) {\r\n            let input = this.inputs[i];\r\n            input.checked = value === input.value;\r\n        }\r\n    }\r\n    setReadOnly(value:boolean) {\r\n        this.readOnly = value;\r\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\r\n    }\r\n    setDisabled(value:boolean) {\r\n        this.disabled = value;\r\n        for (let i in this.inputs) this.inputs[i].disabled = value\r\n    }\r\n\r\n    render() {\r\n        let {defaultValue, list} = this.ui;\r\n        let {isRow, inNode} = this.context;\r\n        let rowKey:number;\r\n        if (isRow === true) {\r\n            rowKey = (this.context as RowContext).rowKey;\r\n        }\r\n        let cn = classNames(this.className, 'form-radio-inline');\r\n        return <span className={cn}>\r\n                {list.map((v,index) => {\r\n                    let {value, title} = v;\r\n                    let name = this.name;\r\n                    if (rowKey !== undefined) name += '-' + rowKey;\r\n                    return <label key={index} className=\"form-radio-inline\">\r\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\r\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\r\n                        {title || value}\r\n                    </label>;\r\n                    //</span>\r\n                })}\r\n            </span>;\r\n    }\r\n}\r\n/*\r\n<div className=\"form-control d-flex border-0\"><input\r\nref={(input)=>this.input = input}\r\nclassName={classNames(this.className, 'align-self-center')}\r\ntype=\"checkbox\"\r\nstyle={{maxHeight:\"1.2em\"}}\r\ndefaultValue={this.defaultValue} \r\nonChange={this.onChange} />\r\n</div>\r\n*/","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { UiRange } from '../../schema';\r\nimport { Widget } from './widget';\r\n\r\nexport class RangeWidget extends Widget {\r\n    protected inputType = 'range';\r\n    protected input: HTMLInputElement;\r\n    protected ui: UiRange;\r\n\r\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\r\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\r\n\r\n    render() {\r\n        let {min, max, step} = this.ui;\r\n        return <><input ref={input=>this.input = input}\r\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\r\n            type={this.inputType}\r\n            defaultValue={this.defaultValue} \r\n            onChange={this.onInputChange}\r\n            max={max}\r\n            min={min}\r\n            step={step}\r\n            />\r\n        </>;\r\n    }\r\n}\r\n","import _ from 'lodash';\r\nimport { KeyValueRes, Res } from '../res';\r\n\r\nexport interface FormRes extends KeyValueRes {\r\n    required: string;\r\n    number: string;\r\n    integer: string;\r\n    min: string;\r\n    max: string;\r\n}\r\n\r\nexport const formRes:Res<FormRes> = {\r\n    _: {\r\n        required: 'required',\r\n        number: 'not valid number',\r\n        integer: 'not valid integer',\r\n        min: 'min value is ${min}',\r\n        max: 'max value is ${max}',\r\n    },\r\n    zh: {\r\n        _: {\r\n            required: '必须填',\r\n            number: '需要数字',\r\n            integer: '需要整数',\r\n            min: '不能小于${min}',\r\n            max: '不能大于${max}',\r\n        }\r\n    },\r\n}\r\n","import * as React from 'react';\r\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\r\nimport classNames from 'classnames';\r\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\r\nimport { UiSchema, TempletType } from '../schema';\r\nimport { factory } from './widgets';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\r\nimport { FormRes, formRes } from './formRes';\r\nimport { resLang } from '../res';\r\n\r\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\r\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\r\n\r\nexport interface FormProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    uiSchema?: UiSchema;\r\n    formData?: any;\r\n    onButtonClick?: FormButtonClick;\r\n    onEnter?: InputEnter;\r\n    fieldLabelSize?: number;            // col-sm-2 for label\r\n    requiredFlag?: boolean;             // default=true\r\n    beforeShow?: (formContext:FormContext) => void;\r\n    res?: FormRes;\r\n\r\n    Container?: (content:JSX.Element) => JSX.Element;\r\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\r\n    FieldClass?: string;\r\n    ButtonClass?: string;\r\n}\r\n\r\nexport class Form extends React.Component<FormProps> {\r\n    readonly schema: Schema;\r\n    readonly itemSchemas: {[name:string]: ItemSchema};\r\n    readonly uiSchema: UiSchema;\r\n    readonly res?: FormRes;\r\n    protected formContext: FormContext;\r\n    //private content: any;\r\n    //private formData: any;\r\n    private disposer: IReactionDisposer;\r\n    //@observable \r\n    readonly data:any;\r\n\r\n    readonly Container: (content:JSX.Element) => JSX.Element;\r\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    readonly FieldClass: string;\r\n    readonly ButtonClass: string;\r\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\r\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\r\n    //readonly RowSeperator: JSX.Element;\r\n\r\n    constructor(props:FormProps) {\r\n        super(props);\r\n        let {schema, uiSchema, formData, \r\n            Container, FieldContainer, FieldClass, \r\n            ButtonClass, res,\r\n        } = props;\r\n        this.Container = Container || this.DefaultContainer;\r\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\r\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\r\n        this.res = res || this.DefaultRes;\r\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\r\n\r\n        this.schema = schema;\r\n        this.itemSchemas = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.itemSchemas[itemSchema.name] = itemSchema;\r\n        }\r\n        this.uiSchema = uiSchema;\r\n\r\n        //this.formData = formData;\r\n        this.disposer = autorun(this.watch);\r\n        this.data = {};\r\n        // this.initRender();\r\n    }\r\n\r\n    private renderContent():any {\r\n        this.initData(this.props.formData);\r\n        let {children} = this.props;\r\n        if (children !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return <>{children}</>;\r\n        }\r\n\r\n        let Templet: TempletType;\r\n        if (this.uiSchema !== undefined) {\r\n            Templet = this.uiSchema.Templet;\r\n        }\r\n        if (Templet !== undefined) {\r\n            this.formContext = new FormContext(this, true);\r\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\r\n        }\r\n\r\n        this.formContext = new FormContext(this, false);\r\n        return <>{this.schema.map((v, index) => {\r\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\r\n        })}</>;\r\n    }\r\n\r\n    private initData(formData: any) {\r\n        if (formData === undefined) formData = {};\r\n        for (let itemSchema of this.schema) {\r\n            this.initDataItem(itemSchema, this.data, formData);\r\n        }\r\n    }\r\n\r\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\r\n        let {name, type} = itemSchema;\r\n        if (type === 'button') return;\r\n        if (type !== 'arr') {\r\n            data[name] = formData[name];\r\n            return;\r\n        }\r\n\r\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\r\n        let {arr:arrItems} = arrItem;\r\n        if (arrItems === undefined) return;\r\n        let arrDict = arrItem.itemSchemas = {};\r\n        for (let item of arrItems) {\r\n            arrDict[item.name] = item;\r\n        }\r\n        let val:any[] = formData[name];\r\n        if (val === undefined) val = [];\r\n        else if (Array.isArray(val) === false) val = [val];\r\n        let arr:any[] = [];\r\n        for (let row of val) {\r\n            let {$isSelected, $isDeleted} = row;\r\n            let r = {\r\n                $source: row,\r\n                $isSelected: $isSelected,\r\n                $isDeleted: $isDeleted,\r\n            };\r\n            for (let item of arrItems) {\r\n                this.initDataItem(item, r, row);\r\n                /*\r\n                let {name:nm} = item;\r\n                let v = row[nm];\r\n                if (v === undefined) v = null;\r\n                r[nm] = v;\r\n                */\r\n            }\r\n            arr.push(r);\r\n        }\r\n        //data[name] = observable(arr);\r\n        data[name] = arr;\r\n        return;\r\n    }\r\n\r\n    private watch = () => {\r\n        let {formData} = this.props;\r\n        if (formData === undefined) return;\r\n        //this.initData(formData);\r\n        this.calcSelectOrDelete();\r\n    }\r\n    private calcSelectOrDelete() {\r\n        for (let itemSchema of this.schema) {\r\n            this.arrItemOperated(itemSchema);\r\n        }\r\n    }\r\n\r\n    private arrItemOperated(itemSchema: ItemSchema) {\r\n        let {name, type} = itemSchema;\r\n        if (type !== 'arr') return;\r\n        if (this.data === undefined) return;\r\n        let formArrVal = this.data[name];\r\n        if (formArrVal === undefined) return;\r\n        let {arr: arrItems} = itemSchema as ArrSchema;\r\n        for (let row of formArrVal) {\r\n            let {$source} = row;\r\n            if ($source === undefined) continue;\r\n            let {$isSelected, $isDeleted} = $source;\r\n            row.$isSelected = $isSelected;\r\n            row.$isDeleted = $isDeleted;\r\n            //console.log($isSelected, $isDeleted);\r\n            for (let item of arrItems) {\r\n                this.arrItemOperated(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {beforeShow} = this.props;\r\n        if (beforeShow !== undefined) beforeShow(this.formContext);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.disposer !== undefined) this.disposer();\r\n    }\r\n\r\n    render() {\r\n        let content = this.renderContent();\r\n        return <ContextContainer.Provider value={this.formContext}>\r\n            <this.formContext.renderErrors />\r\n            {this.Container(content)}\r\n        </ContextContainer.Provider>;\r\n    }\r\n\r\n    async buttonClick(buttonName:string) {\r\n        this.formContext.checkRules()\r\n        if (this.formContext.hasError === true) return;\r\n\r\n        let {onButtonClick} = this.formContext.form.props;\r\n        if (onButtonClick === undefined) {\r\n            alert(`you should define form onButtonClick`);\r\n            return;\r\n        }\r\n        let ret = await onButtonClick(buttonName, this.formContext);\r\n        if (ret === undefined) return;\r\n        this.formContext.setError(buttonName, ret);\r\n    }\r\n\r\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\r\n        return <form className={classNames(this.props.className)}>\r\n            {content}\r\n        </form>;\r\n    }\r\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\r\n        let {fieldLabelSize} = this.props;\r\n\r\n        if (fieldLabelSize > 0) {\r\n            let labelView:any;\r\n            if (label === null) {\r\n                fieldLabelSize = 0;\r\n            }\r\n            else {\r\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\r\n            }\r\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\r\n            return <div className=\"form-group row\">\r\n                {labelView}\r\n                <div className={fieldCol}>{content}</div>\r\n            </div>;\r\n        }\r\n        return <div className=\"form-group\">\r\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\r\n            {content}\r\n        </div>;\r\n    }\r\n    protected DefaultFieldClass:string = undefined;\r\n    protected DefaultButtonClass = 'text-center py-2';\r\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\r\n\r\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\r\n        return <div>\r\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\r\n            {content}\r\n        </div>;\r\n    }\r\n    RowContainer = (content:JSX.Element): JSX.Element => {\r\n        //return <div className=\"row\">{content}</div>;\r\n        let cn = classNames({\r\n            'py-3': true\r\n        });\r\n        return <div className={cn}>{content}</div>\r\n    }\r\n    RowSeperator = <div className=\"border border-gray border-top\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { factory } from './widgets';\r\nimport { ContextContainer, Context } from './context';\r\n\r\nexport interface FieldProps {\r\n    name: string;\r\n}\r\n\r\nexport class Field extends React.Component<FieldProps> {\r\n    static contextType = ContextContainer;\r\n    render() {\r\n        let {name, children } = this.props;\r\n        let context:Context = this.context;\r\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\r\n        let itemSchema = context.getItemSchema(name);\r\n        let content = factory(context, itemSchema, children, this.props);\r\n        if (content === undefined) {\r\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\r\n        }\r\n        return content;\r\n    }\r\n}\r\n","export {Form} from './form';\r\nexport {Field} from './field';\r\nexport {Context, RowContext} from './context';\r\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as classNames from 'classnames';\r\nimport '../css/va-lmr.css';\r\n\r\nexport interface LMRProps {\r\n    className?: string | string[];\r\n    left?: string|JSX.Element;\r\n    right?: string|JSX.Element;\r\n    onClick?: ()=>void;\r\n}\r\n\r\n@observer\r\nexport class LMR extends React.Component<LMRProps> {\r\n    render() {\r\n        let {className, left, children, right, onClick} = this.props;\r\n        let l, r;\r\n        if (left !== undefined) l = <header>{left}</header>;\r\n        if (right !== undefined) r = <footer>{right}</footer>;\r\n        let cursor;\r\n        if (onClick !== undefined) cursor = 'cursor-pointer';\r\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\r\n            {l}\r\n            <div>{children}</div>\r\n            {r}\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport interface FAProps {\r\n    name: string;\r\n    className?: string;\r\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\r\n    spin?: boolean;\r\n    fixWidth?: boolean;\r\n    border?: boolean;\r\n    pull?: 'left'|'right';\r\n    pulse?: boolean;\r\n    rotate?: 90|180|270;\r\n    flip?: 'horizontal'|'vertical';\r\n    inverse?: boolean;\r\n}\r\n\r\nexport class FA extends React.Component<FAProps> {\r\n    render() {\r\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\r\n        let cn = classNames(className, 'fa',\r\n            name && ('fa-' + name),\r\n            size && 'fa-'+size,\r\n            fixWidth && 'fa-fw',\r\n            border && 'fa-border',\r\n            pull && 'fa-pull-' + pull,\r\n            spin && 'fa-spin',\r\n            pulse && 'fa-pulse',\r\n            rotate && 'fa-rotate-' + rotate,\r\n            flip && 'fa-flip-' + flip,\r\n            inverse && 'fa-inverse',\r\n        );\r\n        return <i className={cn} />\r\n    }\r\n}\r\n\r\nexport interface StackedFAProps {\r\n    className?: string;\r\n    size?: 'lg',\r\n}\r\nexport class StackedFA extends React.Component<StackedFAProps> {\r\n    render() {\r\n        let {className, size, children} = this.props;\r\n        let cn = classNames(\r\n            'fa-stack',\r\n            className,\r\n            size && 'fa-' + size);\r\n        return <span className={cn}>\r\n            {children}\r\n        </span>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {FA} from './FA';\r\n\r\nexport interface IconTextProps {\r\n    icon: string;\r\n    iconClass?: string;\r\n    text: string;\r\n    textClass?: string;\r\n}\r\n\r\nexport class IconText extends React.Component<IconTextProps> {\r\n    render() {\r\n        let {icon, iconClass, text, textClass} = this.props;\r\n        return <div className=\"py-2\">\r\n            <FA className={iconClass} name={icon} fixWidth={true} />\r\n            <span className={textClass}>{text}</span>\r\n        </div>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const Muted = (props:any) => \r\n<small className={classNames('text-muted', props.className)} style={props.style}>\r\n    {props.children}\r\n</small>;\r\n","export * from './Badge';\r\nexport * from './LMR';\r\nexport * from './FA';\r\nexport * from './IconText';\r\nexport * from './Muted';\r\n","import * as React from 'react';\r\nimport { IObservableArray, computed } from 'mobx';\r\nimport { PageItems } from 'tonva-tools';\r\nimport {List} from './index';\r\n\r\nexport abstract class ListBase {\r\n    protected list: List;\r\n    constructor(list: List) {\r\n        this.list = list;\r\n    }\r\n    get isPaged():boolean {\r\n        let items = this.list.props.items;\r\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\r\n    }\r\n    get items():any[]|IObservableArray<any> {\r\n        let items = this.list.props.items;\r\n        if (items === null) return null;\r\n        if (items === undefined) return undefined;\r\n        if (Array.isArray(items) === true)\r\n            return items as IObservableArray<any>;\r\n        else\r\n            return (items as PageItems<any>).items;\r\n    }\r\n    @computed get loading():boolean {\r\n        let items = this.list.props.items;\r\n        if (items === null) return false;\r\n        if (items === undefined) return true;\r\n        let pageItems = items as PageItems<any>;\r\n        if (pageItems.items === undefined) return false;\r\n        return pageItems.loading;\r\n    }\r\n    get selectedItems():any[] { return; }\r\n    updateProps(nextProps:any) {}\r\n    abstract render(item:any, index:number):JSX.Element;\r\n    protected renderContent(item:any, index:number) {\r\n        let {render} = this.list.props.item;\r\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\r\n        return render(item, index);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\n\r\nexport class Clickable extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, onClick} = this.list.props.item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport { uid } from '../uid';\r\n\r\nexport class Static extends ListBase {\r\n    render(item:any, index:number):JSX.Element {\r\n        let {className, key, render} = this.list.props.item;\r\n        if (typeof item === 'string') {\r\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\r\n            return <li key={uid()} className={cn}>{item}</li>;\r\n        }\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            {this.renderContent(item, index)}\r\n        </li>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observable, computed, IObservableArray} from 'mobx';\r\nimport * as classNames from 'classnames';\r\nimport {ListBase} from './base';\r\nimport {uid} from '../uid';\r\nimport { PageItems } from 'tonva-tools';\r\n\r\nexport interface SelectableItem {\r\n    selected: boolean;\r\n    item: any;\r\n    labelId: string;\r\n}\r\n\r\nexport class Selectable extends ListBase {\r\n    private _items: SelectableItem[];\r\n    private _selectedItems: any[];\r\n    private input: HTMLInputElement;\r\n    private buildItems() {\r\n        console.log('buildItems in selectable.tsx');\r\n        let {items, selectedItems, compare} = this.list.props;\r\n        let itemsArray:any[] | IObservableArray<any>;\r\n        if (items === undefined) {\r\n            return this._items = undefined;\r\n        }\r\n        if (items === null) {\r\n            return this._items = null;\r\n        }\r\n        if (Array.isArray(items) === true) {\r\n            itemsArray = items as any;\r\n        }\r\n        else {\r\n            itemsArray = (items as PageItems<any>).items;\r\n        }\r\n        //let items = this.items;\r\n        this._selectedItems = selectedItems;\r\n        if (selectedItems === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:false, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        if (compare === undefined) {\r\n            return this._items = itemsArray.map(v => {\r\n                return {\r\n                    selected:selectedItems.find(si => si === v) !== undefined, \r\n                    item:v, \r\n                    labelId:uid()\r\n                };\r\n            });\r\n        }\r\n        return this._items = itemsArray.map(v => {\r\n            return {\r\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \r\n                item:v, \r\n                labelId:uid()\r\n            };\r\n        });\r\n    }\r\n    @computed get items() {\r\n        //if (this._items === undefined) \r\n        this.buildItems();\r\n        return this._items;\r\n    }\r\n    updateProps(nextProps:any) {\r\n        if (nextProps.selectedItems === this._selectedItems) return;\r\n        this.buildItems();\r\n    }\r\n    private onSelect(item:SelectableItem, selected:boolean) {\r\n        item.selected = selected;\r\n        let anySelected = this._items.some(v => v.selected);\r\n        this.list.props.item.onSelect(item.item, selected, anySelected);\r\n    }\r\n    \r\n    get selectedItems():any[] {\r\n        return this._items.filter(v => v.selected === true).map(v => v.item);\r\n    }\r\n    /*\r\n    set selectedItems(value: any[]) {\r\n        if (value === undefined) return;\r\n        if (this._items === undefined) return;\r\n        let sLen = this._items.length;\r\n        let list = value.slice();\r\n        for (let n=0; n<sLen; n++) {\r\n            let sItem = this._items[n];\r\n            let len = list.length;\r\n            if (len === 0) break;\r\n            let item = sItem.item;\r\n            for (let i=0; i<len; i++) {\r\n                let v = list[i];\r\n                if (item === v) {\r\n                    sItem.selected = true;\r\n                    value.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    */\r\n    //w-100 mb-0 pl-3\r\n    //m-0 w-100\r\n    render(item:SelectableItem, index:number):JSX.Element {\r\n        let {className, key, render, onSelect} = this.list.props.item;\r\n        let {labelId, selected} = item;\r\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\r\n            <div className=\"d-flex align-items-center px-3\">\r\n                <input ref={input=>{\r\n                        if (!input) return;\r\n                        this.input = input; input.checked = selected;\r\n                    }}\r\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\r\n                    defaultChecked={selected}\r\n                    onChange={(e)=>{\r\n                        this.onSelect(item, e.target.checked)} \r\n                    }/>\r\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\r\n                    {this.renderContent(item.item, index)}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    }\r\n}\r\n/*\r\n<label>\r\n<label className=\"custom-control custom-checkbox\">\r\n    <input type='checkbox' className=\"custom-control-input\"\r\n        //checked={selected}\r\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\r\n    <span className=\"custom-control-indicator\" />\r\n</label>\r\n{this.renderContent(item.item, index)}\r\n</label>\r\n*/\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {PageItems} from 'tonva-tools';\r\nimport {ListBase} from './base';\r\nimport {Clickable} from './clickable';\r\nimport {Static} from './static';\r\nimport {Selectable} from './selectable';\r\nimport \"../css/va-list.css\";\r\nimport { IObservableArray } from 'mobx';\r\n\r\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\r\n\r\nexport interface ListProps {\r\n    className?: string|string[];\r\n    items: any[] | IObservableArray<any> | PageItems<any>;\r\n    item: {\r\n        className?: string|string[];\r\n        render?: (item:any, index:number) => JSX.Element;\r\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\r\n        onClick?: (item:any)=>void;\r\n        key?: (item:any)=>string;\r\n    };\r\n    compare?:(item:any, selectItem)=>boolean;\r\n    selectedItems?:any[];\r\n    header?: StaticRow;\r\n    footer?: StaticRow;\r\n    before?: StaticRow;\r\n    loading?: StaticRow;\r\n    none?: StaticRow;\r\n}\r\n\r\n@observer\r\nexport class List extends React.Component<ListProps> {\r\n    private listBase: ListBase;\r\n    constructor(props:ListProps) {\r\n        super(props);\r\n        let {item} = this.props;\r\n        let {onClick, onSelect} = item;\r\n        if (onSelect !== undefined)\r\n            this.listBase = new Selectable(this);\r\n        else if (onClick !== undefined)\r\n            this.listBase = new Clickable(this);\r\n        else\r\n            this.listBase = new Static(this);\r\n    }\r\n    _$scroll = (direct: 'top'|'bottom') => {\r\n        console.log('############### items scroll to ' + direct);\r\n    }\r\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\r\n        this.listBase.updateProps(nextProps);\r\n    }\r\n    get selectedItems():any[] {\r\n        return this.listBase.selectedItems;\r\n    }\r\n    render() {\r\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\r\n        if (before === undefined) before = 'before';\r\n        if (loading === undefined) loading = 'loading';\r\n        if (none === undefined) none = 'none';        \r\n        //this.listBase.selectedItems = selectedItems;\r\n        let {isPaged, items, loading:isLoading} = this.listBase;\r\n        function staticRow(row:StaticRow, type:string) {\r\n            if (!row) return;\r\n            switch (typeof row) {\r\n                default:\r\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\r\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\r\n                case 'object': return <li>{row}</li>\r\n            } \r\n        }\r\n        let content:any;\r\n        if (items === null)\r\n            content = staticRow(before, 'before');\r\n        else if (items === undefined)\r\n            content = staticRow(loading, 'loading');\r\n        else if (items.length === 0)\r\n            content = staticRow(none, 'none');\r\n        else {\r\n            content = items.map((item, index) => {\r\n                return this.listBase.render(item, index);\r\n            });\r\n        }\r\n        return <ul className={classNames('va-list', className)}>\r\n            {staticRow(header, 'header')}\r\n            {content}\r\n            {staticRow(footer, 'footer')}\r\n        </ul>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport * as className from 'classnames';\r\nimport {ListView} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\r\n\r\nexport abstract class PropRow {\r\n    setValues(values: any) {}\r\n    abstract render(key:string): any;\r\n}\r\n\r\nexport class PropBorder extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div key={'_b_' + key} className=\"\">\r\n            <div className=\"col-sm-12\">\r\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class PropGap extends PropRow {\r\n    private param: string;\r\n    constructor(param?: string) {\r\n        super();\r\n        this.param = param;\r\n    }\r\n    render(key:string): JSX.Element {\r\n        let w: string;\r\n        switch (this.param) {\r\n            default: w = 'py-2'; break;\r\n            case '=': w = 'py-1'; break;\r\n            case '-': w = 'pb-1'; break;\r\n        }\r\n        let cn = className(w);\r\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\r\n    }\r\n}\r\n\r\nconst valueAlignStart = 'justify-content-start';\r\nconst valueAlignCenter = 'justify-content-center';\r\nconst valueAlignEnd = 'justify-content-end';\r\nexport abstract class LabeledPropRow extends PropRow {\r\n    protected gridProps: PropGridProps;\r\n    protected prop: LabeledProp;\r\n    protected content: any;\r\n    //protected values: any;\r\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\r\n        super();\r\n        this.gridProps = gridProps;\r\n        this.prop = prop;\r\n        //this.values = values;\r\n    }\r\n    render(key:string):any {\r\n        let {onClick, bk} = this.prop;\r\n        let cn = className({\r\n            \"cursor-pointer\": onClick !== undefined,\r\n            \"bg-white\": bk === undefined, \r\n            \"row\": true\r\n        });\r\n        return <div key={key} className={cn} onClick={onClick}>\r\n            {this.renderLabel()}\r\n            {this.renderProp()}\r\n        </div>;\r\n    }\r\n    protected renderLabel():any {\r\n        let {label} = this.prop;\r\n        if (label === undefined) return null;\r\n        return <label className=\"col-sm-2 col-form-label\">\r\n            {label}\r\n        </label>;\r\n    }\r\n    protected renderProp():any {\r\n        let {label, full} = this.prop as any;\r\n        let align, vAlign;\r\n        switch (this.gridProps.alignValue) {\r\n            case 'left': align = valueAlignStart; break;\r\n            case 'center': align = valueAlignCenter; break;\r\n            case 'right': align = valueAlignEnd; break;\r\n        }\r\n        switch (this.prop.vAlign) {\r\n            case 'top': vAlign = 'align-items-start'; break;\r\n            default:\r\n            case 'center': vAlign = 'align-items-center'; break;\r\n            case 'bottom': vAlign = 'align-items-end'; break;\r\n            case 'stretch': vAlign = 'align-items-stretch'; break;\r\n        }\r\n        let col:string;\r\n        if (full !== true)\r\n            col = label===undefined? 'col-sm-12':'col-sm-10';\r\n        else\r\n            col = 'w-100';\r\n        let cn = className(align, vAlign, col, 'd-flex');\r\n        return <div className={cn}>\r\n            {this.renderPropBody()}\r\n        </div>;\r\n    }\r\n    protected renderPropBody():any {\r\n        return <div className=\"form-control-plaintext\">\r\n            {this.renderPropContent()}\r\n        </div>;\r\n    }\r\n    protected renderPropContent():any {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nexport class StringPropRow extends LabeledPropRow {\r\n    protected prop: StringProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class NumberPropRow extends LabeledPropRow {\r\n    protected prop: NumberProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else this.content = values[this.prop.name];\r\n    }\r\n}\r\n\r\nexport class ListPropRow extends LabeledPropRow {\r\n    protected prop: ListProp;\r\n    setValues(values:any) {\r\n        if (values === undefined) this.content = undefined;\r\n        else {\r\n            let list = this.prop.list;\r\n            if (typeof list === 'string') this.content = values[list];\r\n            else this.content = undefined;\r\n        }\r\n    }\r\n    protected renderPropBody() {\r\n        let {list, row} = this.prop;\r\n        let items:any[] = typeof list === 'string'? this.content : list;\r\n        if (items === undefined) return <div/>;\r\n        // new row(item)\r\n        return <div className=\"w-100\">\r\n            {\r\n                items.map((item, index) => <React.Fragment key={index}>\r\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\r\n                    {React.createElement(row, item)}\r\n                </React.Fragment>)\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ComponentPropRow extends LabeledPropRow {\r\n    protected prop: ComponentProp;\r\n    protected renderPropBody() {\r\n        let {component} = this.prop;\r\n        return component;\r\n    }\r\n}\r\n\r\nexport class PropContainer extends PropRow {\r\n    render(key:string): JSX.Element {\r\n        return <div className=\"bg-white\">\r\n            <label className=\"col-sm-2 col-form-label\">\r\n                AAABBBCCC\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n                <div className=\"form-control-plaintext\">\r\n                    dsfasfa sdf asdf a\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","import {ListViewProps} from '../listView';\r\nimport {PropGridProps} from './PropGrid';\r\nimport {PropRow, PropBorder, PropGap, PropContainer,\r\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\r\n\r\nexport interface Format {\r\n\r\n}\r\n\r\nexport interface PropBase {\r\n    onClick?: ()=>void;\r\n}\r\n\r\nexport interface LabeledProp extends PropBase {\r\n    label?: string;\r\n    bk?: string;\r\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\r\n}\r\n\r\nexport interface StringProp extends LabeledProp {\r\n    type: 'string';\r\n    name: string;\r\n}\r\n\r\nexport interface NumberProp extends LabeledProp {\r\n    type: 'number';\r\n    name: string;\r\n}\r\n\r\nexport interface FormatProp extends LabeledProp {\r\n    type: 'format';\r\n    format: Format;\r\n}\r\n\r\nexport interface ListProp extends LabeledProp {\r\n    type: 'list';\r\n    list: string | any[];  // string 表示名字，否则就是值\r\n    row: new (props:any) => React.Component;\r\n}\r\n\r\nexport interface ComponentProp extends LabeledProp {\r\n    type: 'component';\r\n    full?: boolean;\r\n    component: any; //JSX.Element;\r\n}\r\n\r\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\r\n\r\nexport class PropView {\r\n    private gridProps:PropGridProps\r\n    private props: Prop[];\r\n    //private values:any;\r\n    private rows: PropRow[];\r\n\r\n    constructor(gridProps:PropGridProps, props:Prop[]) {\r\n        this.gridProps = gridProps;\r\n        this.props = props;\r\n        //this.values = values;\r\n        this.buildRows();\r\n    }\r\n\r\n    private buildRows() {\r\n        this.rows = [];\r\n        let isGap:boolean = true;\r\n        for (let prop of this.props) {\r\n            if (typeof prop === 'string') {\r\n                this.rows.push(new PropGap(prop));\r\n                isGap = true;\r\n            }\r\n            else {\r\n                if (!isGap) this.rows.push(new PropBorder());\r\n                let row;\r\n                switch (prop.type) {\r\n                    default: continue;\r\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\r\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\r\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\r\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\r\n                }\r\n                this.rows.push(row);\r\n                isGap = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValues(values: any) {\r\n        for (let r of this.rows) r.setValues(values);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row, index) => row.render(String(index)));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {Prop, PropView} from './propView';\r\nimport {PropContainer, PropBorder, PropGap} from './row';\r\n\r\nexport interface PropGridProps {\r\n    className?: string;\r\n    rows: Prop[];\r\n    values: any;\r\n    alignValue?: 'left'|'center'|'right';\r\n}\r\n\r\n@observer\r\nexport class PropGrid extends React.Component<PropGridProps> {\r\n/*\r\n    private propView: PropView;\r\n    constructor(props:PropGridProps) {\r\n        super(props);\r\n    }\r\n*/\r\n/*\r\n    componentWillMount() {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(this.props.values);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\r\n        this.propView = new PropView(this.props.rows);\r\n        this.propView.setValues(nextProps.values);\r\n        this.forceUpdate();\r\n    }\r\n*/\r\n    render() {\r\n        let {className, rows, values} = this.props;\r\n        let propView = new PropView(this.props, rows);\r\n        propView.setValues(values);\r\n        let cn = classNames('container-fluid', className);\r\n        return <div className={cn}>\r\n            {propView.render()}\r\n        </div>;\r\n    }\r\n}\r\n","export * from './propView';\r\nexport * from './row';\r\nexport * from './PropGrid';\r\n","import * as React from 'react';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { nav } from '../nav';\r\nimport { Page } from '../page';\r\nimport { observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport { ItemEdit } from './itemEdit';\r\n\r\nexport class StringItemEdit extends ItemEdit {\r\n    protected uiItem: UiTextItem;\r\n    protected async internalStart():Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\r\n            nav.push(element,reject);\r\n        });\r\n    }\r\n\r\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.newValue = evt.target.value;\r\n        let preValue = this.value;\r\n        this.isChanged = (this.newValue != preValue);\r\n    }\r\n\r\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\r\n        let {resolve, reject} = props;\r\n        let right = <button\r\n            className=\"btn btn-sm btn-success\"\r\n            disabled={!this.isChanged}\r\n            onClick={()=>resolve(this.newValue)}>保存</button>;\r\n        return <Page header={'更改' + this.label} right={right}>\r\n            <div className=\"m-3\">\r\n                <input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    className=\"form-control\" \r\n                    defaultValue={this.value} />\r\n                {\r\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\r\n                }\r\n            </div>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\r\nimport { observer } from 'mobx-react';\r\nimport { ItemEdit } from './itemEdit';\r\nimport { StringItemEdit } from './stringItemEdit';\r\nimport { ImageItemEdit } from './imageItemEdit';\r\nimport { Image } from '../image';\r\n\r\nexport interface EditProps {\r\n    className?: string;\r\n    schema: Schema;\r\n    data: any;\r\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\r\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\r\n    uiSchema?: UiSchema;\r\n    sepClassName?: string;\r\n    topBorderClassName?: string;\r\n    bottomBorderClassName?: string;\r\n    rowContainerClassName?: string;\r\n}\r\n\r\n@observer\r\nexport class Edit extends React.Component<EditProps> {\r\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\r\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\r\n    private topBorder:JSX.Element;\r\n    private bottomBorder:JSX.Element;\r\n    private rowContainerClassName?: string;\r\n    private sep:JSX.Element;\r\n    private uiSchema: {[name:string]: UiItem};\r\n\r\n    constructor(props: EditProps) {\r\n        super(props);\r\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\r\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\r\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\r\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\r\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\r\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\r\n    }\r\n\r\n    render() {\r\n        let elItems:JSX.Element[] = [];\r\n        let {schema} = this.props;\r\n        let len = schema.length;\r\n\r\n        elItems.push(this.topBorder);\r\n        for (let i=0; i<len; i++) {\r\n            if (i>0) elItems.push(this.sep);\r\n            elItems.push(this.renderRow(schema[i]));\r\n        }\r\n        elItems.push(this.bottomBorder);\r\n\r\n        return <div>\r\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\r\n        </div>;\r\n    }\r\n\r\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\r\n        let {name, type} = itemSchema;\r\n        let divValue:any;\r\n        let uiItem = this.uiSchema[name];\r\n        let label:string = (uiItem && uiItem.label) || name;\r\n        let value:any = this.props.data[name];\r\n        switch (type) {\r\n            default:\r\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\r\n                break;\r\n            case 'image':\r\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\r\n                break;\r\n        }\r\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\r\n            <div className=\"w-6c\">{label}</div>\r\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\r\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\r\n        </div>;\r\n    }\r\n\r\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\r\n        let {onItemChanged, onItemClick} = this.props;\r\n        let changeValue:any;\r\n        if (onItemClick !== undefined) {\r\n            await onItemClick(itemSchema, uiItem, value);\r\n            return;\r\n        }\r\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\r\n        try {\r\n            changeValue = await itemEdit.start();\r\n            if (changeValue != value) {\r\n                if (onItemChanged === undefined) {\r\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\r\n                }\r\n                else {\r\n                    await onItemChanged(itemSchema, changeValue, value);\r\n                }\r\n            }\r\n            await itemEdit.end();\r\n        }\r\n        catch (err) {\r\n            console.log('no value changed');\r\n        }\r\n    }\r\n}\r\n\r\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\r\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\r\n    if (uiItem !== undefined) {\r\n        switch (uiItem.widget) {\r\n            case 'text': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    else {\r\n        switch (itemSchema.type) {\r\n            case 'string': itemEdit = StringItemEdit; break;\r\n            case 'image': itemEdit = ImageItemEdit; break;\r\n        }\r\n    }\r\n    if (itemEdit === undefined) return;\r\n    return new itemEdit(itemSchema, uiItem, label, value);\r\n}\r\n","export * from './edit';\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {IObservableValue, IComputedValue} from 'mobx';\r\nimport {observer} from 'mobx-react';\r\nimport '../css/va-row.css';\r\n\r\nexport interface ListItem {\r\n    key?: string|number;\r\n    date?: Date;\r\n    icon?: string | JSX.Element;\r\n    main?: string;\r\n    vice?: string;\r\n    middle?: string | JSX.Element;\r\n    midSize?: number;\r\n    right?: string | JSX.Element;\r\n    onClick?: () => void;\r\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\r\n}\r\n\r\nexport interface ListRowProps extends ListItem {\r\n    //onClick: () => void;\r\n}\r\n\r\nexport interface ListRowState {\r\n    pressed: boolean;\r\n}\r\n\r\n@observer\r\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false,\r\n        }\r\n    }\r\n    render() {\r\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\r\n        let header, isIcon:boolean, noteNum;\r\n        if (unread !== undefined) {\r\n            let uv:number;\r\n            if (typeof unread === 'number') uv = unread;\r\n            else uv = unread.get();\r\n                if (uv > 0)\r\n                noteNum = <b>{uv}</b>;\r\n            else if (uv < 0)\r\n                noteNum = <b className='dot' />;\r\n        }\r\n        switch (typeof icon) {\r\n            case 'object':\r\n                header = <header>{icon}{noteNum}</header>; \r\n                isIcon= false;\r\n                break;\r\n            case 'string': \r\n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\r\n                isIcon= true; \r\n                break;\r\n        }\r\n        let mid;\r\n        if (middle !== undefined) {\r\n            switch (typeof middle) {\r\n                case 'string':\r\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\r\n                    break;\r\n                default:\r\n                    mid = middle;\r\n                    break;\r\n            }\r\n        }\r\n        let footer;\r\n        if (right !== undefined) {\r\n            if (typeof right === 'string')\r\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\r\n            else\r\n                footer = <footer>{right}</footer>;\r\n        }\r\n        let viceSpan;\r\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\r\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\r\n        return (\r\n        <li className={cn} onClick={onClick}>\r\n            {header}\r\n            <div>\r\n                <div>{main}</div>\r\n                {viceSpan}\r\n            </div>\r\n            {mid}\r\n            {footer}\r\n        </li>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport {observer} from 'mobx-react';\r\nimport {ListItem, ListRow} from './listRow';\r\n\r\nexport interface ListViewProps {\r\n    className?: string;\r\n    items?: any[];\r\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\r\n    ex?: any;\r\n    header?: string|JSX.Element;\r\n    beforeLoad?: string|JSX.Element;\r\n    none?: string|JSX.Element;\r\n    footer?: string|JSX.Element;\r\n    itemClick?: (item:any)=>void;\r\n    converter?: (item:any)=>ListItem;\r\n}\r\n\r\n@observer\r\nexport class ListView extends React.Component<ListViewProps, null> {\r\n    render() {\r\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\r\n        let cn = classNames(className, 'va-list');\r\n        let content, elHeader;\r\n        if (items === undefined)\r\n            content = beforeLoad === null? null : <li className='empty'>\r\n                {beforeLoad || '...'}\r\n            </li>;\r\n        else if (items.length === 0) {\r\n            content = (\r\n            <li className='empty'>\r\n                {\r\n                    none || '[none]'\r\n                }\r\n            </li>);\r\n        }\r\n        else if (renderRow !== undefined) {\r\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\r\n        }\r\n        else {\r\n            content = items.map((item, index) => {\r\n                let onClick = item.onClick;\r\n                if (onClick === undefined && itemClick !== undefined) \r\n                    onClick = ()=>itemClick(item);\r\n                let listItem:ListItem;\r\n                if (converter !== undefined) {\r\n                    listItem = converter(item);\r\n                    if (listItem === undefined) return null;\r\n                }\r\n                else {\r\n                    listItem = {\r\n                        ...item\r\n                    }\r\n                }\r\n                if (listItem.key === undefined) listItem.key = listItem.main;\r\n                return <ListRow onClick={onClick} {...listItem} />;\r\n            });\r\n        }\r\n        if (header !== undefined) {\r\n            if (typeof header === 'string') {\r\n                elHeader = <div className='va-list-header'>{header}</div>;\r\n            }\r\n            else {\r\n                elHeader = header;\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className={cn}>\r\n            {elHeader}\r\n            <ul>\r\n                {content}\r\n            </ul>\r\n            {footer}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\r\nimport userApi from './userApi';\r\n\r\nexport class EditMeInfo extends React.Component {\r\n    private schema:ItemSchema[] = [\r\n        {name:'nick', type:'string'} as StringSchema,\r\n        {name:'icon', type:'image'} as ImageSchema\r\n    ];\r\n    private uiSchema:UiSchema = {\r\n        items: {\r\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\r\n            icon: {widget:'image', label:'头像'} as UiImageItem,\r\n        }\r\n    }\r\n    @observable private data:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        let {nick, icon} = nav.user;\r\n        this.data = {\r\n            nick: nick,\r\n            icon: icon,\r\n        }\r\n    }\r\n\r\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\r\n        let {name} = itemSchema;\r\n        await userApi.userSetProp(name, newValue);\r\n        this.data[name] = newValue;\r\n        nav.user[name] = newValue;\r\n        nav.saveLocalUser();\r\n    }\r\n\r\n    render() {\r\n        return <Page header=\"个人信息\">\r\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\r\n                data={this.data}\r\n                onItemChanged={this.onItemChanged} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport classNames from 'classnames';\r\nimport { IObservableValue } from 'mobx/lib/internal';\r\n\r\nexport type TabCaption = (selected:boolean) => JSX.Element;\r\n\r\nexport interface TabProp {\r\n    name: string;\r\n    caption: TabCaption;\r\n    content: () => JSX.Element;\r\n    notify?: IObservableValue<number>;\r\n}\r\n\r\nexport interface TabsProps {\r\n    tabs: TabProp[];\r\n    size?: 'sm' | 'lg' | 'md';\r\n    tabBack?: string;\r\n    contentBack?: string;\r\n    sep?: string;\r\n    selected?: string;\r\n}\r\n\r\nclass Tab {\r\n    name: string;\r\n    @observable selected: boolean;\r\n    caption: TabCaption;\r\n    contentBuilder: ()=>JSX.Element;\r\n    notify: IObservableValue<number>;\r\n\r\n    private _content: JSX.Element;\r\n    get content(): JSX.Element {\r\n        if (this.selected !== true) return this._content;\r\n        if (this._content !== undefined) return this._content;\r\n        return this._content = this.contentBuilder();\r\n    }\r\n}\r\n\r\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \r\n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\r\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\r\n    <small>{label}</small>\r\n</div>;\r\n\r\n@observer export class Tabs extends React.Component<TabsProps> {\r\n    private size: string;\r\n    private tabBack: string;\r\n    private contentBack: string;\r\n    private sep: string;\r\n    @observable private selectedTab: Tab;\r\n    @observable private tabs: Tab[] = [];\r\n\r\n    constructor(props: TabsProps) {\r\n        super(props);\r\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\r\n        switch (size) {\r\n            default:\r\n            case 'md': this.size = '3.2rem'; break;\r\n            case 'sm': this.size = '4rem'; break;\r\n            case 'lg': this.size = '2.5rem'; break;\r\n        }\r\n        this.tabs.push(...tabs.map(v => {\r\n                let tab = new Tab();\r\n                tab.name = v.name;\r\n                tab.selected = false;\r\n                tab.caption = v.caption;\r\n                tab.contentBuilder = v.content;\r\n                tab.notify = v.notify;\r\n                return tab;\r\n            }\r\n        ));\r\n        this.tabBack = tabBack || 'bg-light';\r\n        this.contentBack = contentBack;\r\n        this.sep = sep || 'border-top border-gray';\r\n        if (selected !== undefined) {\r\n            this.selectedTab = this.tabs.find(v => v.name === selected);\r\n        }\r\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\r\n        this.selectedTab.selected = true;\r\n    }\r\n\r\n    private tabClick = (tab:Tab) => {\r\n        this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    showTab(tabName: string) {\r\n        let tab = this.tabs.find(v => v.name === tabName);\r\n        if (tab === undefined) return;\r\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\r\n        tab.selected = true;\r\n        this.selectedTab = tab;\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"tab\">\r\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let style:React.CSSProperties={\r\n                        display: v.selected===true? undefined : 'none'};\r\n                    return <div key={index} style={style}>{v.content}</div>;\r\n                })}\r\n            </div>\r\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\r\n                {this.tabs.map((v,index) => {\r\n                    let {selected, caption, notify} = v;\r\n                    let notifyCircle:any;\r\n                    if (notify !== undefined) {\r\n                        let num = notify.get();\r\n                        if (num !== undefined) {\r\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\r\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\r\n                        }\r\n                    }\r\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\r\n                        <div className=\"align-self-center\">\r\n                            {notifyCircle}\r\n                            {caption(selected)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n","export * from './tabs';\r\n","import * as React from 'react';\r\nimport {FetchError} from '../fetchError';\r\nimport { refetchApi } from '../net';\r\n\r\nexport interface FetchErrorProps extends FetchError {\r\n    clearError: ()=>void\r\n}\r\n\r\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\r\n    private reApi = async () => {\r\n        this.props.clearError();\r\n        const {channel, url, options, resolve, reject} = this.props;\r\n        await refetchApi(channel, url, options, resolve, reject);\r\n    }\r\n    private close = async () => {\r\n        this.props.clearError();\r\n    }\r\n    render() {\r\n        let {error, url} = this.props;\r\n            //let errMsg = fetchError.errorMsg;\r\n        let errContent;\r\n        if (typeof error === 'object') {\r\n            let err = [];\r\n            for (let i in error) {\r\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\r\n            }\r\n            errContent = <ul>{err}</ul>;\r\n        }\r\n        else {\r\n            errContent = <div>{error}</div>;\r\n        }\r\n        return <li>\r\n            <article className=\"page-container\">\r\n                <section>\r\n                    <div  className=\"va-error\">\r\n                        <div>网络出现问题</div>\r\n                        <div>点击重新访问</div>\r\n                        <div>url: {url}</div>\r\n                        {errContent}\r\n                        <div className=\"p-3\">\r\n                            <button type='button' onClick={this.reApi}>重新API</button>\r\n                            <button type='button' onClick={this.close}>关闭</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n        </li>;\r\n    }\r\n}\r\n","import {User, Guest, Unit} from './user';\r\n\r\nexport interface ClearableData {\r\n    clear(): void;\r\n}\r\n\r\nexport class Data<T> implements ClearableData {\r\n    private name: string;\r\n    private value?: T;\r\n    constructor(name: string) {this.name = name; }\r\n    get(): T {\r\n        if (this.value !== undefined) return this.value;\r\n        let v = localStorage.getItem(this.name);\r\n        return this.value = v === null ? undefined : JSON.parse(v); \r\n    }\r\n    set(value: T) {\r\n        if (!value) { this.clear(); return; }\r\n        this.value = value;\r\n        localStorage.setItem(this.name, JSON.stringify(value));\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n        localStorage.removeItem(this.name);\r\n    }\r\n}\r\n\r\nexport class LocalData {\r\n    user = new Data<User>('user');\r\n    guest = new Data<Guest>('guest');\r\n    unit = new Data<Unit>('unit');\r\n    homeTabCur = new Data<number>('homeTabCur');\r\n\r\n    logoutClear() {\r\n        [\r\n            this.user,\r\n            this.unit,\r\n            this.homeTabCur\r\n        ].map(d => d.clear());\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Loading } from 'tonva-tools';\r\n\r\nexport const meTab = () => {\r\n    let LoadableComponent = Loadable({\r\n        loader: () => import('./tab'),\r\n        loading: Loading\r\n    });\r\n    return <LoadableComponent />;\r\n}\r\n","import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva-tools';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { observable } from 'mobx';\r\nimport { meTab } from '../me';\r\n\r\nexport const store = {\r\n    //homeCount: observable.box<number>(-1),\r\n    //cartCount: observable.box<number>(101),\r\n};\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VHome extends VPage<CSCMApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n    render = (param?: any): JSX.Element => {\r\n        let { cHome } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\r\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View, nav } from 'tonva-tools';\r\nimport { LMR, FA, SearchBox } from 'tonva-react-form';\r\nimport logo from '../images/logo.svg';\r\nimport { CHome } from './CHome';\r\n\r\nexport class VSiteHeader extends View<CHome> {\r\n    render() {\r\n        let currentSalesRegion = <FA name=\"globe\" />\r\n        let login = <div>\r\n            登录\r\n        </div>\r\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\r\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\r\n        let right = undefined;\r\n        /*\r\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\r\n            {currentSalesRegion} &nbsp;\r\n            <button onClick={()=>nav.start()}>Try</button>\r\n        </div>;*/\r\n        return <LMR\r\n            className=\"mb-3 align-items-center bg-white\"\r\n            left={left} right={right}>\r\n            <div className=\"\">\r\n                {this.controller.renderSearchHeader('md')}\r\n            </div>\r\n        </LMR>\r\n    }\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva-tools';\r\nimport { CHome } from './CHome';\r\nimport { SearchBox } from 'tonva-react-form';\r\n\r\nexport class VSearchHeader extends View<CHome> {\r\n\r\n    private onSearch = async (key: string) => {\r\n        // let { cProduct } = this.controller.cApp;\r\n        // cProduct.start(key);\r\n    }\r\n\r\n    render(param: any) {\r\n        return <SearchBox className=\"px-1 w-100\" \r\n            size={param}\r\n            onSearch={this.onSearch} \r\n            placeholder=\"功能...\" />\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, View } from 'tonva-tools';\r\nimport { observer } from 'mobx-react';\r\nimport { CHome } from './CHome';\r\nimport { observable } from 'mobx';\r\n\r\nconst LIGUOSHENG = 5;\r\n\r\ninterface CatItem {\r\n    title: string;\r\n    sub: string[];\r\n    img: string;\r\n}\r\n\r\ninterface Cat {\r\n    caption: string;\r\n    items?: CatItem[];\r\n}\r\n\r\nconst catItemStyle:React.CSSProperties = {\r\n    width:'12rem', \r\n    //height: '6rem', \r\n    overflow: 'hidden', \r\n};\r\nconst subStyle:React.CSSProperties = {\r\n    fontSize:'0.75rem',\r\n    overflow: 'hidden', \r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap'\r\n};\r\nconst imgStyle:React.CSSProperties = {\r\n    //float:'left', clear:'both', \r\n    height:'1.5rem', width:'1.5rem', opacity:0.1, \r\n    marginRight: '0.5rem',\r\n};\r\n\r\nexport class VHome extends View<CHome> {\r\n\r\n    async open(param?: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private renderSection = (item: any, index: number) => {\r\n        return <section>\r\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\r\n            <p>{item.content}</p>\r\n        </section>\r\n    }\r\n\r\n    render(param: any): JSX.Element {\r\n        return <this.content />\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let { openMetaView } = this.controller;\r\n        let viewMetaButton = <></>;\r\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\r\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\r\n        }\r\n\r\n        return <Page header={false} footer={viewMetaButton}>\r\n            <this.content />\r\n        </Page>;\r\n    })\r\n\r\n    private content = observer(() => {\r\n        let siteHeader = this.controller.renderSiteHeader();\r\n        return <>\r\n            {siteHeader}\r\n            {this.controller.renderCategoryRootList()}\r\n        </>\r\n    });\r\n}","import * as React from 'react';\r\nimport { TuidMain } from 'tonva-react-uq';\r\nimport { VSiteHeader } from './VSiteHeader';\r\nimport { CSCMApp } from '../CSCMApp';\r\nimport { PageItems, Controller } from 'tonva-tools';\r\nimport { VSearchHeader } from './VSearchHeader';\r\nimport { VHome } from './VHome';\r\n\r\nclass HomeSections extends PageItems<any> {\r\n\r\n    private sectionTuid: TuidMain;\r\n\r\n    constructor(sectionTuid: TuidMain) {\r\n        super();\r\n        this.firstSize = this.pageSize = 13;\r\n        this.sectionTuid = sectionTuid;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.sectionTuid.search(\"\", pageStart, pageSize);\r\n        return ret;\r\n    }\r\n\r\n    protected setPageStart(item: any): any {\r\n        if (item === undefined) return 0;\r\n        return item.id;\r\n    }\r\n}\r\n\r\nexport class CHome extends Controller {\r\n\r\n    cApp: CSCMApp;\r\n    homeSections: HomeSections;\r\n    sectionTuid: TuidMain;\r\n\r\n    constructor(cApp: CSCMApp, res: any) {\r\n        super(res);\r\n\r\n        this.cApp = cApp;\r\n    }\r\n\r\n    async internalStart(param: any) {\r\n\r\n        let { cFunctionCategory } = this.cApp;\r\n        await cFunctionCategory.start();\r\n        this.openVPage(VHome);\r\n    }\r\n\r\n    renderSiteHeader = () => {\r\n        return this.renderView(VSiteHeader);\r\n    }\r\n\r\n    renderSearchHeader = (size?:string) => {\r\n        return this.renderView(VSearchHeader, size);\r\n    }\r\n\r\n    renderCategoryRootList = () => {\r\n        let { cFunctionCategory } = this.cApp;\r\n        return cFunctionCategory.renderRootList();\r\n    }\r\n\r\n    renderHome = () => {\r\n        return this.renderView(VHome);\r\n    }\r\n\r\n    openMetaView = () => {\r\n        this.cApp.startDebug();\r\n    }\r\n\r\n    tab = () => <this.renderHome />;\r\n}","import * as React from 'react';\r\nimport { View } from 'tonva-tools';\r\nimport { CFunctionCategory } from './CFunctionCategory';\r\nimport { consts } from '../home/consts';\r\nimport { FA } from 'tonva-react-form';\r\n\r\nconst imgStyle: React.CSSProperties = {\r\n  height: '1.5rem', width: '1.5rem',\r\n  marginLeft: '0.1rem',\r\n  marginRight: '0.3rem'\r\n}\r\n\r\nexport const titleTitle: React.CSSProperties = {\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n}\r\n\r\nexport const subStyle: React.CSSProperties = {\r\n  fontSize: '0.75rem',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n}\r\n\r\nexport class VRootCategory extends View<CFunctionCategory> {\r\n  private categoryClick = async (categoryWapper: any, parent: any) => {\r\n    await this.controller.openMainPage(categoryWapper, parent);\r\n  }\r\n\r\n  private renderRootCategory = (item: any, parent: any) => {\r\n    let { name, children } = item;\r\n    return <div className=\"bg-white mb-3\" key={name}>\r\n      <div className=\"py-2 px-3\">\r\n        <b>{name}</b>\r\n      </div>\r\n      <div className=\"\"\r\n        style={{ paddingRight: '1px' }}\r\n      >\r\n        <div className=\"row no-gutters\">\r\n          {children === undefined ? '' : children.map(v => this.renderSubCategory(v, item))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  private renderSubCategory = (item: any, parent: any) => {\r\n    let {name, children} = item;\r\n    return <div key={name}\r\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\r\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\r\n      onClick={() => this.categoryClick(item, parent)}>\r\n      <div className=\"py-2 px-2\"\r\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }} >\r\n        <div style={titleTitle}>\r\n          <span className=\"ml-1 align-middle\">\r\n            <FA name=\"chevron-circle-right\" className=\"text-info\" />\r\n            &nbsp; {name}\r\n          </span>\r\n        </div>\r\n        {children === undefined ? '' : renderThirdCategory(children)}\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  render(param: any): JSX.Element {\r\n    let { categories } = this.controller;\r\n    return <>{categories.map(v => this.renderRootCategory(v, undefined))}</>;\r\n  }\r\n}\r\n\r\nexport function renderThirdCategory(items: any) {\r\n  return <div className=\"py-1 px-1 text-muted small\" style={subStyle}>\r\n      {items.length === 0 ? <>&nbsp;</> : items.map(v => v.name).join(' / ')}\r\n  </div>\r\n}","import * as React from 'react';\r\nimport { CFunctionCategory } from './CFunctionCategory';\r\nimport { VPage, Page } from 'tonva-tools';\r\nimport { List, FA } from 'tonva-react-form';\r\nimport { tv } from 'tonva-react-uq';\r\nimport { titleTitle, subStyle } from './VRootCategory';\r\n\r\nexport class VCategory extends VPage<CFunctionCategory> {\r\n\r\n  async open(categoryWaper: any) {\r\n    this.openPage(this.page, categoryWaper);\r\n  }\r\n\r\n  private renderChild = (childWapper: any) => {\r\n    return <div className=\"py-2\"><FA name=\"hand-o-right mr-2\"></FA>{childWapper.name}</div>\r\n  }\r\n\r\n  private categoryClick = async (childWapper: any, parent: any) => {\r\n    await this.controller.openMainPage(childWapper, parent);\r\n  }\r\n\r\n  private renderRootCategory = (item: any, parent: any) => {\r\n    let { name, children } = item;\r\n    return <div className=\"bg-white mb-3\" key={name}>\r\n      <div className=\"py-2 px-3\">\r\n        <b>{name}</b>\r\n      </div>\r\n      <div className=\"\"\r\n        style={{ paddingRight: '1px' }}\r\n      >\r\n        <div className=\"row no-gutters\">\r\n          {children.map(v => this.renderSubCategory(v, item))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  private renderSubCategory = (item: any, parent: any) => {\r\n    let { name, children } = item;\r\n    return <div key={name}\r\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\r\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\r\n      onClick={() => this.categoryClick(item, parent)}>\r\n      <div className=\"pt-1 pb-1 px-2\"\r\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\r\n      >\r\n        <div style={titleTitle}>\r\n          <span className=\"ml-1 align-middle\">\r\n            <FA name=\"chevron-right\" className=\"text-info small\" />\r\n            &nbsp; {name}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n    // <img src={consts.appIcon} alt=\"structure\" style={imgStyle} />\r\n  }\r\n\r\n  private page = (categoryWaper: any) => {\r\n\r\n    let { cHome } = this.controller.cApp;\r\n    let header = cHome.renderSearchHeader();\r\n\r\n    let { categoryWaper: item, parent } = categoryWaper;\r\n    return <Page header={header} >\r\n      {this.renderRootCategory(item, parent)}\r\n    </Page>\r\n  }\r\n}","export const funcs = [\r\n  {\r\n    name: \"基础信息\",\r\n    id: 1,\r\n    children: [\r\n      { name:\"商品信息\",\r\n        id: 101,\r\n        pid: 1,\r\n        page: \"product\" }, \r\n      { name: \"供应商信息\",\r\n        id: 102,\r\n        pid: 1,\r\n        page: \"supplier\" },\r\n      { name: \"客户信息\",\r\n        id: 103,\r\n        pid: 1,\r\n        page: \"customer\" },\r\n      { name: \"部门信息\",\r\n        id: 104,\r\n        pid: 1,\r\n        page: \"department\" },\r\n      { name: \"职员信息\",\r\n        id: 105,\r\n        pid: 1,\r\n        page: \"staff\" },\r\n      { name: \"物流中心（自建、委托）\",\r\n        id: 106,\r\n        pid: 1 },\r\n      { name: \"库区信息（自建）\",\r\n        id: 107,\r\n        pid: 1,\r\n        page: \"warehouse\" },\r\n      { name: \"货位信息（自建）\",\r\n        id: 108,\r\n        pid: 1,\r\n        page: \"goodslocation\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购管理\",\r\n    id: 2,\r\n    children: [\r\n      { name:\"采购订单\",\r\n        id: 201,\r\n        pid: 2,\r\n        page: \"purchase\" }, \r\n      { name: \"采购收货（自建）\",\r\n        id: 202,\r\n        pid: 2 }, \r\n      { name: \"采购验收（自建）\",\r\n        id: 203,\r\n        pid: 2 }, \r\n      { name: \"采购入库（自建）\",\r\n        id: 204,\r\n        pid: 2 }, \r\n      { name: \"采购记账\",\r\n        id: 205,\r\n        pid: 2 }, \r\n      { name: \"采购退货\",\r\n        id: 206,\r\n        pid: 2 }, \r\n      { name: \"采退出库（自建）\",\r\n        id: 207,\r\n        pid: 2 }, \r\n      { name: \"采退复核（自建）\",\r\n        id: 208,\r\n        pid: 2 }, \r\n      { name: \"采退记账\",\r\n        id: 209,\r\n        pid: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购结算管理\",\r\n    id: 3,\r\n    children: [\r\n      { name: \"采购发票\",\r\n        id: 301,\r\n        pid: 3 }, \r\n      { name: \"采购组票\",\r\n        id: 302,\r\n        pid: 3 }, \r\n      { name: \"采购结算\",\r\n        id: 303,\r\n        pid: 3 }, \r\n      { name: \"采价调整\",\r\n        id: 304,\r\n        pid: 3 }, \r\n      { name: \"采购冲差\",\r\n        id: 305,\r\n        pid: 3 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售管理\",\r\n    id: 4,\r\n    children: [\r\n      { name:\"销售订单\",\r\n        id: 401,\r\n        pid: 4 }, \r\n      { name: \"销售出库（自建）\",\r\n        id: 402,\r\n        pid: 4 }, \r\n      { name: \"出库复核（自建）\",\r\n        id: 403,\r\n        pid: 4 }, \r\n      { name: \"销售记账（自建、委托）\",\r\n        id: 404,\r\n        pid: 4 }, \r\n      { name: \"销售退货\",\r\n        id: 405,\r\n        pid: 4 }, \r\n      { name: \"销售退货验收（自建）\",\r\n        id: 406,\r\n        pid: 4 }, \r\n      { name: \"销售退货入库（自建）\",\r\n        id: 407,\r\n        pid: 4 }, \r\n      { name: \"销售退货记账（自建、委托）\",\r\n        id: 408,\r\n        pid: 4 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售结算管理\",\r\n    id: 5,\r\n    children: [\r\n      { name:\"销售换票\",\r\n        id: 501,\r\n        pid: 5 }, \r\n      { name: \"销售结算\",\r\n        id: 502,\r\n        pid: 5 }, \r\n      { name: \"销价调整\",\r\n        id: 503,\r\n        pid: 5 }, \r\n      { name: \"销售冲差\",\r\n        id: 504,\r\n        pid: 5 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"期初管理\",\r\n    id: 6,\r\n    children: [\r\n      { name:\"商品库存期初\",\r\n        id: 601,\r\n        pid: 6 }, \r\n      { name: \"供应商期初\",\r\n        id: 602,\r\n        pid: 6 }, \r\n      { name: \"客商期初\",\r\n        id: 603,\r\n        pid: 6 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"价格管理\",\r\n    id: 7,\r\n    children: [\r\n      { name:\"商品定价\",\r\n        id: 701,\r\n        pid: 7 }, \r\n      { name: \"客商定价\",\r\n        id: 702,\r\n        pid: 7 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"查询报表\",\r\n    id: 8,\r\n    children: [\r\n      { name: \"库存相关\",\r\n        id: 801,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"库存查询\",\r\n            id: 80101,\r\n            pid: 801 },\r\n          { name: \"进销存查询\",\r\n            id: 80102,\r\n            pid: 801 },\r\n        ]\r\n      }, \r\n      { name: \"销售相关\",\r\n        id: 802,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"客商销售汇总查询\",\r\n            id: 80201,\r\n            pid: 802 },\r\n          { name: \"客商销售明细查询\",\r\n            id: 80202,\r\n            pid: 802 }\r\n        ]\r\n      }, \r\n      { name: \"采购相关\",\r\n        id: 803,\r\n        pid: 8,\r\n        children: []\r\n      }, \r\n      { name: \"应收应付相关\",\r\n        id: 804,\r\n        pid: 8,\r\n        children: [\r\n          { name: \"客商应收账款汇总查询\",\r\n            id: 80401,\r\n            pid: 804 },\r\n          { name: \"客商应收账款明细查询\",\r\n            id: 80402,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款汇总查询\",\r\n            id: 80403,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款明细查询\",\r\n            id: 80404,\r\n            pid: 804 }\r\n        ]\r\n      }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"测试\",\r\n    id: 9,\r\n    children: [\r\n      { name:\"全部测试\",\r\n        id: 901,\r\n        pid: 9,\r\n        page: \"testAllTab\" }\r\n    ]\r\n  }\r\n]\r\n","import React from 'react';\r\nimport { nav, VPage, Page, meInFrame, Controller } from 'tonva-tools';\r\nimport {AppUI, CApp, VTuidEdit, VTuidMain, CLink} from 'tonva-react-uq';\r\nimport { FA } from 'tonva-react-form';\r\nimport {CSCMApp} from 'CSCMApp'\r\nimport { consts } from 'home/consts';\r\nimport uui from \"ui\";\r\n\r\nexport class TestPage2 extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    public appPage = () => {\r\n        let {cUqArr: cUsqArr} = this.controller;\r\n        let content;\r\n        if (cUsqArr.length === 0) {\r\n            content = <div className=\"p-3 text-info\">\r\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUsqArr.map((v,i) => \r\n            <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <Page header={'全部功能'}\r\n          logout={async ()=>{meInFrame.unit = undefined}}>\r\n            <div className=\"p-3\">-------</div>\r\n            {content}\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { nav, Page, VPage, Controller } from 'tonva-tools';\r\nimport { AppUI, CApp, VTuidEdit, VTuidMain, CLink } from 'tonva-react-uq';\r\nimport { consts } from 'home/consts';\r\nimport {TestPage2} from './testpage2'\r\n\r\nconst baseInfoNames : string[] = [\r\n  \"product\", \"supplier\", \"customer\", \"department\", \"staff\", \"warehouse\", \"goodslocation\"\r\n]\r\n\r\nconst sheetNames : string[] = [\r\n  \"purchase\"\r\n]\r\n\r\nclass NavTuidMainPage extends VPage<CApp> {\r\n  async open(param?: any) {\r\n    if (param !== undefined) {\r\n      let cuq = this.controller.getCUq(consts.uqBasedata);\r\n      let mid = cuq.tuid(param);\r\n      if (mid !== undefined) {\r\n        await cuq.cTuidMain(mid).start();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass NavSheetPage extends VPage<CApp> {\r\n  async open(param?: any) {\r\n    if (param !== undefined) {\r\n      let cuq = this.controller.getCUq(consts.uqBasedata);\r\n      let mid = cuq.sheet(param);\r\n      if (mid !== undefined) {\r\n        await cuq.cSheet(mid).start();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const navToPage = (name : string, cApp : CSCMApp) => {\r\n  if (baseInfoNames.includes(name)) {\r\n    cApp.showOneVPage(NavTuidMainPage, name);\r\n  }\r\n  else if (sheetNames.includes(name)) {\r\n    cApp.showOneVPage(NavSheetPage, name);\r\n  }\r\n  else if (name === \"testAllTab\")\r\n  {\r\n    cApp.showOneVPage(TestPage2, \"testAllTab\")\r\n  }\r\n}","import * as React from 'react';\r\nimport { Query } from 'tonva-react-uq';\r\nimport { observable } from 'mobx';\r\nimport { VRootCategory } from './VRootCategory';\r\nimport { VCategory } from './VCategory';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { nav, Page, Loading, Controller } from 'tonva-tools';\r\nimport { funcs } from './funcCategories';\r\nimport { navToPage } from 'pages'\r\n\r\nexport class CFunctionCategory extends Controller {\r\n\r\n  cApp: CSCMApp;\r\n  // categories: any[];\r\n  @observable categories: any[] = [];\r\n\r\n  constructor(cApp: CSCMApp, res: any) {\r\n    super(res);\r\n\r\n    this.cApp = cApp;\r\n  }\r\n\r\n  async internalStart(param: any) {\r\n    this.categories = funcs;\r\n  }\r\n\r\n  renderRootList = () => {\r\n    return this.renderView(VRootCategory);\r\n  };\r\n\r\n  async openMainPage(categoryWaper: any, parent: any) {\r\n    if (categoryWaper === undefined)\r\n      return;\r\n    let { children, page, name } = categoryWaper;\r\n    if (children === undefined || children.length == 0) {\r\n      \r\n      if (page !== undefined) {\r\n        navToPage(page, this.cApp);\r\n      }\r\n    }\r\n    else {\r\n      this.openVPage(VCategory, { categoryWaper, parent });\r\n    }\r\n  }\r\n}","import * as React from 'react';\r\n\r\nimport { CApp, CUq } from 'tonva-react-uq';\r\nimport { CHome } from './home/CHome';\r\nimport { CFunctionCategory } from 'functionCategory/CFunctionCategory';\r\nimport { consts } from './home/consts';\r\nimport { WebUser } from 'CurrentUser';\r\nimport { Controller, VPage } from 'tonva-tools'\r\n\r\nexport class CSCMApp extends CApp {\r\n\r\n  currentUser: WebUser;\r\n  currentSalesRegion: any;\r\n  currentLanguage: any;\r\n\r\n  cHome: CHome;\r\n  cFunctionCategory: CFunctionCategory;\r\n\r\n  protected async internalStart() {\r\n    if (this.isLogined) {\r\n      //this.currentUser.user = this.user;\r\n    }\r\n\r\n    this.cFunctionCategory = new CFunctionCategory(this, undefined);\r\n    this.cHome = new CHome(this, undefined);\r\n\r\n    let promises: PromiseLike<void>[] = [];\r\n    promises.push(this.cFunctionCategory.start());\r\n    await Promise.all(promises);\r\n    this.showMain();\r\n  }\r\n\r\n  showMain(initTabName?: string) {\r\n    this.openVPage(this.VAppMain, initTabName);\r\n  }\r\n\r\n  public async showOneVPage(vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> {\r\n    await (new vp(this)).open(param);\r\n  }\r\n\r\n  protected onDispose() {\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { VTuidMain } from \"tonva-react-uq\";\r\nimport { Page } from 'tonva-tools';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class MyVTuidMain extends VTuidMain {\r\n    protected get view() {\r\n        let {label, proxyLinks} = this.controller;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                改写的TuidMain\r\n                <div className='my-3'>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { LMR, Muted } from 'tonva-react-form';\r\nimport { tv, TuidUI, FieldTuidUI } from 'tonva-react-uq';\r\nimport { MyCTuid } from './myCTuid'\r\n\r\nconst customer:TuidUI = {\r\n    CTuidMain : MyCTuid,\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name} = row;\r\n        let right = <Muted>{}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\r\n    },\r\n};\r\n\r\nconst manufactor:TuidUI = {\r\n    content: (values) => {\r\n        let {id, name} = values;\r\n        return <>{name || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name, id} = row;\r\n        let right = <Muted>{}</Muted>;\r\n        let mid = <>{'id ' + id}</>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={mid}/>\r\n    },\r\n}\r\n\r\nconst productPackRowContent = observer((values) => {\r\n    let {id, ratio, name, $owner} = values;\r\n    let content, rText = String(ratio);\r\n    if ($owner !== undefined) {\r\n        let packType = $owner.valueFromFieldName('packType');\r\n        if (packType !== undefined) {\r\n            let packName = packType.valueFromFieldName? packType.valueFromFieldName('name') : packType['name'];\r\n            if (packName) {\r\n                if (name) content = name + ' = ' + (rText + packName);\r\n                else content = (rText + packName);\r\n            }\r\n        }\r\n    }\r\n    if (content === undefined) content = (name? name + ' ' + rText : rText) + ' err: no $owner in values';\r\n    return <div className=\"px-3 py-2\">{content}</div>;\r\n});\r\n\r\nconst product:TuidUI = {\r\n    content: (values) => {\r\n        let {id, discription} = values;\r\n        return <>{discription || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: observer((row):JSX.Element => {\r\n        let {discription, packType} = row;\r\n        let right;\r\n        if (packType && packType.content) {\r\n            right = <Muted>{tv(packType)}</Muted>;\r\n        }\r\n        return <LMR className=\"px-3 py-2\" left={discription} right={right}/>\r\n    }),\r\n    divs: {\r\n        pack: {\r\n            content: observer((values) => {\r\n                let {id, ratio, name, $owner} = values;\r\n                if ($owner === undefined)\r\n                    return <>{name || ratio || 'id' + id + ' ...'}</>;\r\n                let packType = $owner.valueFromFieldName('packType');\r\n                return <>{name || (ratio + (packType && packType.name)) || 'id' + id + ' ...'}</>;\r\n            }),\r\n            rowContent: productPackRowContent,\r\n        }\r\n    },\r\n    form: {\r\n        items: {\r\n            packType: {\r\n                autoList: true,\r\n            } as FieldTuidUI,\r\n            pack: {\r\n                rowContent: productPackRowContent,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst packType:TuidUI = {\r\n    content: (values) => {\r\n        let {id, name, discription} = values;\r\n        return <>{discription || name || 'id ' + id + ' ...'}</>;\r\n    },\r\n    rowContent: (row):JSX.Element => {\r\n        let {name, discription} = row;\r\n        let right = <Muted>{discription}</Muted>;\r\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\r\n    },\r\n};\r\n\r\nexport default {\r\n    manufactor: manufactor,\r\n    customer: customer,\r\n    product: product,\r\n    packType: packType,\r\n}\r\n","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\r\nimport { MyVTuidMain } from \"./vTuidMain\";\r\n\r\nexport class MyCTuid extends CTuidMain {\r\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\r\n\r\n    // protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\r\n    //     let {name} = field;\r\n    //     switch (arr) {\r\n    //     case undefined:\r\n    //         switch (name) {\r\n    //         case 'fromUser':\r\n    //             return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n    //                 let {_tuid} = field;\r\n    //                 let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n    //                 let ret = await cTuidSelect.call();\r\n    //                 return ret.id;\r\n    //             };\r\n    //         }\r\n    //         break;\r\n    //     }\r\n    //     return super.buildSelect(field, arr, fieldTuidUI);\r\n    // }\r\n}\r\n","import { UqUI } from 'tonva-react-uq';\r\n//import res from './res';\r\nimport tuid from './tuid';\r\nimport res from './res';\r\n//import sheet from './sheet';\r\n//import map from './map';\r\n\r\nconst uqUI:UqUI = {\r\n    //CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    res: res\r\n}\r\n\r\n\r\nconst uqUIs = uqUI;\r\n/*\r\n{\r\n    $: uqUI,\r\n    \"aa-bb\": aa_BB_UsqUI,\r\n}\r\n*/\r\nexport default uqUIs;\r\n","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\nimport _ from 'lodash';\n\nexport default {\n  x: {\n    no: '编号',\n    team: '部门',\n    staff: '员工',\n    noStaff: '无员工',\n    post: '职位',\n    noPost: '无职位',\n    a: 'aaa',\n    b: {\n      s: 'sss',\n      d: () => <span className=\"text-success\">ddd</span>,\n    },\n    c: () => <span className=\"text-danger\">ccc</span>,\n  },\n  usq: 'scmbasedata',\n  tuid: '基础档案',\n  map: '对照表',\n  tuidPlaceHolder: '选择',\n  submit: '提交',\n  arrNew: '新增',\n  arrEdit: '保存',\n  entity: {\n    customer: {\n      label: '客户信息',\n      fields: {\n        name: '客户名称'\n      }\n    },\n    manufactor: {\n      label: '生产厂商',\n      fields: {\n        name: '名称'\n      }\n    },\n    product: {\n      label: '商品信息',\n      fields: {\n        discription: '名称',\n        packType: '计量类型',\n      },\n      arrs: {\n        pack: {\n          label: '包装单位',\n          fields: {\n            ratio: '换算率(相对基本单位)',\n            name: '名称'\n          }\n        }\n      }\n    },\n    packtype: {\n      label: '计量类型',\n      fields: {\n        name: '计量单位(如 g,ml,台,个)',\n        discription: '计量类型(如 重量，长度,单体)',\n      },\n    },\n    department: {\n      label: '部门信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    goodslocation: {\n      label: '货位信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    staff: {\n      label: '职员信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    supplier: {\n      label: '供应商信息',\n      fields: {\n        name: '名称',\n      }\n    },\n    warehouse: {\n      label: '库区信息',\n      fields: {\n        no: '编码',\n      }\n    },\n    purchase: {\n      label: '采购订单',\n    },\n    message: {\n      label: '消息-message',\n      arrNew: '新增消息',\n      arrEdit: '保存消息',\n      fields: {\n        fromUser: '发送人',\n        fromUnit: '发送部门',\n        type: '类型',\n        date: '日期',\n        subject: '主题',\n        discription: '描述',\n        content: '内容'\n      },\n    },\n    getMessage: {\n      label: '获取Message',\n      submit: '获取消息',\n      fields: {\n        msg: '消息'\n      }\n    },\n    newMessage: {\n      label: '新建消息',\n      fields: {\n        type: '类型',\n        subject: '主题',\n      },\n      arrs: {\n        to: {\n          label: '发送',\n          newSubmit: '新增to',\n          editSumbit: '保存to',\n        },\n        cc: {\n          label: '抄送',\n          newSubmit: '新增cc',\n          editSumbit: '保存cc',\n        }\n      }\n    },\n    sectionTeam: {\n      label: '大部设置',\n    },\n    teamPerson: {\n      label: '部门员工职位',\n      fields: {\n      },\n      confirmDelete: _.template('真的要删除${label}吗'),\n    },\n    user: {\n      label: '用户'\n    }\n  }\n}\n","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { FA } from \"tonva-react-form\";\r\nimport { Page } from \"tonva-tools\";\r\nimport { CQuery, VQueryMain } from \"tonva-react-uq\";\r\nimport { tv } from 'tonva-react-uq';\r\n\r\nexport class CGetMessage extends CQuery {\r\n    protected get VQueryMain() {return VMain}\r\n}\r\n\r\nexport class VMain extends VQueryMain {\r\n    protected queryResult = observer((result:any) => {\r\n        let ret0 = result.ret[0];\r\n        let rightClose = <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={this.again}>\r\n            <FA name=\"search\" /> 再查询\r\n        </button>;\r\n        return <Page header={this.label} right={rightClose}>\r\n            重载的CGetMessage <br/>\r\n            {tv(ret0.fromUser)/*ret0.fromUser.content()*/}\r\n            <pre>{JSON.stringify(ret0, undefined, '\\t')}</pre>\r\n        </Page>;\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport { VTuidMain } from \"tonva-react-uq\";\r\nimport { Page } from 'tonva-tools';\r\nimport { SearchBox, List, Muted } from 'tonva-react-form';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport class MyVTuidMain extends VTuidMain {\r\n    protected get view() {\r\n        let {label, proxyLinks} = this.controller;\r\n        return () => <Page header={label}>\r\n            {proxyLinks === undefined ?\r\n            <>\r\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\r\n                改写的TuidMain\r\n                <div className='my-3'>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\r\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\r\n                </div>\r\n            </> :\r\n            <List className=\"my-2\"\r\n                header={<Muted>{label} 代理下列Tuid</Muted>}\r\n                items={proxyLinks}\r\n                item={{render: this.entityRender, onClick:this.entityClick}} />\r\n            }\r\n        </Page>;\r\n    }\r\n}","import { AppUI, CApp } from \"tonva-react-uq\";\r\nimport { VHome } from './main';\r\nimport { CSCMApp } from '../CSCMApp';\r\nimport scmbaseUI from './scmbase';\r\nimport $unitx from './$unitx';\r\n\r\nconst ui: AppUI = {\r\n    appName: \"bruce/SCMBase\",\r\n    CApp: CSCMApp,\r\n    main: VHome,\r\n    uqs: {\r\n        '$$$/$unitx': $unitx,\r\n        'bruce/scmbasedata': scmbaseUI\r\n    }\r\n}\r\n\r\nexport const uiorg: AppUI = {\r\n    appName: \"bruce/SCMBase\",\r\n    CApp: CSCMApp,\r\n    main: VHome,\r\n    uqs: {\r\n    }\r\n}\r\n\r\nexport default ui;\r\n","import { UqUI } from 'tonva-react-uq';\r\nimport tuid from './tuid';\r\nimport map from './map';\r\nimport query from './query';\r\nimport res from './res';\r\nimport { MyCTuid } from './cTuid';\r\n\r\nconst usqUI:UqUI = {\r\n    CTuidMain: MyCTuid,\r\n    tuid: tuid,\r\n    map: map,\r\n    query: query,\r\n    res: res,\r\n}\r\n\r\nexport default usqUI;","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\r\nimport { MyVTuidMain } from \"./vTuidMain\";\r\n\r\nexport class MyCTuid extends CTuidMain {\r\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\r\n\r\n    protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\r\n        let {name} = field;\r\n        switch (arr) {\r\n        case undefined:\r\n            switch (name) {\r\n            case 'fromUser':\r\n                return async (form:VForm, field:Field, values:any):Promise<any> => {\r\n                    let {_tuid} = field;\r\n                    let cTuidSelect = this.cUq.cTuidSelect(_tuid);\r\n                    let ret = await cTuidSelect.call();\r\n                    return ret.id;\r\n                };\r\n            }\r\n            break;\r\n        }\r\n        return super.buildSelect(field, arr, fieldTuidUI);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { TuidUI } from 'tonva-react-uq';\r\n\r\nconst organization:TuidUI = {\r\n    divs: {\r\n        post: {\r\n            content: (values) => {\r\n                let {id, title} = values;\r\n                return <>{title}</>\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    user: {\r\n        content: (values) => {\r\n            let {id, name, nick, assigned} = values;\r\n            if (assigned !== undefined) {\r\n                return <>{assigned} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (nick != undefined) {\r\n                return <>{nick} - <Muted>{name}</Muted></>;\r\n            }\r\n            if (name !== undefined) return name;\r\n            return 'id ' + id + ' ...';\r\n        }\r\n    },\r\n    section: {\r\n        content: (values) => {\r\n            let {id, name} = values;\r\n            return <>{name}</>;\r\n        }\r\n    },\r\n    organization: organization,\r\n}\r\n","import teamPerson from './teamPerson';\r\n\r\nexport default {\r\n    teamPerson: teamPerson,\r\n};\r\n","import * as React from 'react';\r\nimport { Muted } from 'tonva-react-form';\r\nimport { left0 } from 'tonva-tools';\r\n//import { dictionary as x } from '../../res';\r\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \r\n\r\nclass CMapTeamPerson extends CMap {\r\n    async searchOnKey(keyField:Field, param):Promise<number> {\r\n        switch (keyField.name) {\r\n            default: return await super.searchOnKey(keyField, param);\r\n            case 'post': return await this.searchOnPost(param);                \r\n        }\r\n    }\r\n\r\n    private async searchOnPost(param: any):Promise<number> {\r\n        let querySelect = this.cQuerySelect('teamPosts');\r\n        let val = await querySelect.call(param);\r\n        return val['post'].id;\r\n    }\r\n}\r\n\r\nclass VMapTeamPerson extends VMapMain {\r\n}\r\n\r\nconst ui:MapUI = {\r\n    CMap: CMapTeamPerson,\r\n    //label: '部门员工对照表',\r\n    //main: VMapTeamPerson,\r\n    keys: [\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.team}</Muted> {name}</>,\r\n            none: (x)=>x.noStaff,\r\n        },\r\n        {\r\n            content: ({name, id}:any, x) => <><Muted>{x.staff}</Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\r\n            none: (x)=>x.noPost,\r\n        },\r\n        {\r\n            content: ({x, title, id}:any) => <><Muted>{x.post}</Muted> {title}</>,\r\n            none: undefined,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default ui;\r\n","import getMessage from './getMessage';\r\nimport teamPosts from './teamPosts';\r\n\r\nexport default {\r\n    getMessage: getMessage,\r\n    teamPosts: teamPosts,\r\n};\r\n","import { QueryUI } from \"tonva-react-uq\";\r\nimport { VMain } from \"./cGetMessge\";\r\n\r\nconst ui:QueryUI = {\r\n    main: VMain,\r\n}\r\n\r\nexport default ui;\r\n","import React from 'react';\r\nimport { QueryUI, tv } from \"tonva-react-uq\";\r\nimport { observer } from 'mobx-react';\r\n\r\nconst ui:QueryUI = {\r\n    row: observer((values:any) => <div className=\"px-3 py-2\">{tv(values.post)/*.content()*/}</div>),\r\n}\r\n\r\nexport default ui;","import CN from './zh/CN';\r\n\r\nconst res = {\r\n    zh: {\r\n        CN: CN\r\n    }\r\n};\r\n\r\nexport default res;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n    x: {\r\n        no: '编号',\r\n        team: '部门',\r\n        staff: '员工',\r\n        noStaff: '无员工',\r\n        post: '职位',\r\n        noPost: '无职位',\r\n        a: 'aaa',\r\n        b: {\r\n            s: 'sss',\r\n            d: ()=><span className=\"text-success\">ddd</span>,\r\n        },\r\n        c: ()=><span className=\"text-danger\">ccc</span>,\r\n    },\r\n    usq: '$UNITX',\r\n    tuid: '基础档案',\r\n    map: '对照表',\r\n    tuidPlaceHolder: '选择',\r\n    submit: '提交',\r\n    arrNew: '新增',\r\n    arrEdit: '保存',\r\n    entity: {\r\n        message: {\r\n            label: '消息-message',\r\n            arrNew: '新增消息',\r\n            arrEdit: '保存消息',\r\n            fields: {\r\n                fromUser: '发送人',\r\n                fromUnit: '发送部门',\r\n                type: '类型',\r\n                date: '日期',\r\n                subject: '主题',\r\n                discription: '描述',\r\n                content: '内容'\r\n            },\r\n        },\r\n        getMessage: {\r\n            label: '获取Message',\r\n            submit: '获取消息',\r\n            fields: {\r\n                msg: '消息'\r\n            }\r\n        },\r\n        newMessage: {\r\n            label: '新建消息',\r\n            fields: {\r\n                type: '类型',\r\n                subject: '主题',\r\n            },\r\n            arrs: {\r\n                to: {\r\n                    label: '发送',\r\n                    newSubmit: '新增to',\r\n                    editSumbit: '保存to',\r\n                },\r\n                cc: {\r\n                    label: '抄送',\r\n                    newSubmit: '新增cc',\r\n                    editSumbit: '保存cc',\r\n                }\r\n            }\r\n        },\r\n        sectionTeam: {\r\n            label: '大部设置',\r\n        },\r\n        teamPerson: {\r\n            label: '部门员工职位',\r\n            fields: {\r\n            },\r\n            confirmDelete: _.template('真的要删除${label}吗'),\r\n        },\r\n        teamOrganization: {\r\n            label: '部门机构对照表',\r\n        },\r\n        teamPosts: {\r\n            label: '部门职位',\r\n        },\r\n        person: {\r\n            label: '员工',\r\n            fields: {\r\n                name: '姓名',\r\n                nick: '别名',\r\n                given: '名字',\r\n                sur: '姓',\r\n                gender: '性别',\r\n                user: '用户',\r\n            }\r\n        },\r\n        organization: {\r\n            label: '组织结构',\r\n            arrs: {\r\n                post: {\r\n                    label: '职位',\r\n                }\r\n            }\r\n        },\r\n        user: {\r\n            label: '用户'\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, Page, Tabs } from 'tonva-tools';\r\nimport { startApp } from 'tonva-react-uq';\r\nimport ui from './ui';\r\n//import { faceTabs } from 'facetabs';\r\n\r\nclass App extends React.Component {\r\n\r\n  private onLogined = async () => {\r\n    await startApp(ui);\r\n    /*\r\n    let page = <Page header={false}>\r\n      <Tabs tabs={faceTabs} />\r\n    </Page>\r\n    nav.push(page);\r\n    */\r\n    //let b = new B('b');\r\n    //await b.d();\r\n    //nav.push(<div>ddd</div>)\r\n  }\r\n  public render() {\r\n    return <NavView onLogined={this.onLogined} />\r\n  }\r\n}\r\n\r\nexport default App;","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}