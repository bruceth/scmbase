{"version":3,"sources":["tonva-tools/entry/changePassword.tsx"],"names":["ChangePasswordPage","react__WEBPACK_IMPORTED_MODULE_1__","[object Object]","this","schema","name","type","maxLength","required","uiSchema","items","orgPassword","label","placeholder","newPassword","newPassword1","submit","widget","className","onSubmit","context","tslib__WEBPACK_IMPORTED_MODULE_0__","data","setError","centerAppApi","_net__WEBPACK_IMPORTED_MODULE_3__","undefined","changePassword","_ui__WEBPACK_IMPORTED_MODULE_2__","replace","header","back","onButtonClick","fieldLabelSize"],"mappings":"oLAIO,MAAMA,UAA2BC,EAAA,UAAxCC,kCACYC,KAAAC,OAAuB,CAC3B,CAACC,KAAK,cAAeC,KAAM,SAAUC,UAAW,GAAIC,UAAU,GAC9D,CAACH,KAAK,cAAeC,KAAM,SAAUC,UAAW,GAAIC,UAAU,GAC9D,CAACH,KAAK,eAAgBC,KAAM,SAAUC,UAAW,GAAIC,UAAU,GAC/D,CAACH,KAAK,SAAUC,KAAM,WAElBH,KAAAM,SAAqB,CACzBC,MAAO,CACHC,YAAa,CACTC,MAAO,qBACPC,YAAa,8CAEjBC,YAAa,CACTF,MAAO,qBACPC,YAAa,8CAEjBE,aAAc,CACVH,MAAO,2BACPC,YAAa,oDAEjBG,OAAQ,CACJC,OAAQ,SACRL,MAAO,eACPM,UAAW,qBAKff,KAAAgB,SAAW,EAAOd,EAAae,IAAkCC,EAAA,EAAAlB,UAAA,qBACrE,IAAIQ,YAACA,EAAWG,YAAEA,EAAWC,aAAEA,GAAgBK,EAAQE,KACvD,GAAIR,IAAgBC,EAEhB,YADAK,EAAQG,SAAS,eAAgB,sEAGrC,IAAIC,EAAe,IAAIC,EAAA,EAAa,WAAOC,IAE/B,WADIF,EAAaG,eAAe,CAAChB,YAAaA,EAAaG,YAAYA,KAKnFc,EAAA,IAAIC,QAAQ5B,EAAA,cAAC2B,EAAA,KAAI,CAACE,OAAO,2BAAOC,KAAK,SACjC9B,EAAA,qBAAKiB,UAAU,qBAAmB,gDAJlCE,EAAQG,SAAS,cAAe,qCAWxCrB,SACI,OAAOD,EAAA,cAAC2B,EAAA,KAAI,CAACE,OAAO,4BAChB7B,EAAA,cAAC2B,EAAA,KAAI,CACDV,UAAU,MACVd,OAAQD,KAAKC,OACbK,SAAUN,KAAKM,SACfuB,cAAe7B,KAAKgB,SACpBc,eAAgB","file":"static/js/2.92270de1.chunk.js","sourcesContent":["import * as React from 'react';\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, Context, ButtonSchema, UiButton, nav } from '../ui';\nimport { CenterAppApi } from '../net';\n\nexport class ChangePasswordPage extends React.Component {\n    private schema: ItemSchema[] = [\n        {name:'orgPassword', type: 'string', maxLength: 60, required: true} as StringSchema,\n        {name:'newPassword', type: 'string', maxLength: 60, required: true} as StringSchema,\n        {name:'newPassword1', type: 'string', maxLength: 60, required: true} as StringSchema,\n        {name:'submit', type: 'button'} as ButtonSchema\n    ];\n    private uiSchema: UiSchema = {\n        items: {\n            orgPassword: {\n                label: '原密码',\n                placeholder: '输入原来的密码'\n            } as UiPasswordItem,\n            newPassword: {\n                label: '新密码',\n                placeholder: '输入新设的密码'\n            } as UiPasswordItem,\n            newPassword1: {\n                label: '确认密码', \n                placeholder: '再次输入新设密码'\n            } as UiPasswordItem,\n            submit: {\n                widget: 'button',\n                label: '提交',\n                className: 'btn btn-primary'\n            } as UiButton,\n        }\n    };\n\n    private onSubmit = async (name:string, context: Context):Promise<any> => {\n        let {orgPassword, newPassword, newPassword1} = context.data;\n        if (newPassword !== newPassword1) {\n            context.setError('newPassword1', '新密码错误，请重新输入');\n            return;\n        }\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.changePassword({orgPassword: orgPassword, newPassword:newPassword});\n        if (ret === false) {\n            context.setError('orgPassword', '原密码错误');\n            return;\n        }\n        nav.replace(<Page header=\"修改密码\" back=\"close\">\n            <div className=\"m-3  text-success\">\n                密码修改成功！\n            </div>\n        </Page>);\n        return;\n    }\n\n    render() {\n        return <Page header=\"修改密码\">\n            <Form\n                className=\"m-3\" \n                schema={this.schema}\n                uiSchema={this.uiSchema}\n                onButtonClick={this.onSubmit}\n                fieldLabelSize={2} />\n        </Page>;\n    }\n}\n"],"sourceRoot":""}