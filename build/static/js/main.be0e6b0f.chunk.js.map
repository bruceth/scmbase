{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-react-uq/index.ts","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","home/consts.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/left0.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/IconText.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","images/logo.svg","tonva-tools/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","functionCategory/VRootCategory.tsx","functionCategory/VCategory.tsx","functionCategory/funcCategories.tsx","pages/testpage.tsx","pages/testpage2.tsx","pages/index.tsx","functionCategory/CFunctionCategory.tsx","ui/common.tsx","ui/product/index.tsx","ui/product/tuid/index.tsx","ui/product/tuid/productCategory.tsx","ui/$unitx/tuid/index.tsx","ui/$unitx/map/teamPerson/index.tsx","ui/$unitx/map/index.ts","ui/$unitx/query/getMessage/cGetMessge.tsx","ui/$unitx/query/teamPosts.tsx","ui/$unitx/query/index.ts","ui/$unitx/query/getMessage/index.ts","ui/$unitx/res/index.ts","ui/$unitx/res/zh/CN.tsx","ui/$unitx/cTuid/vTuidMain.tsx","ui/index.tsx","CSCMApp.tsx","ui/$unitx/index.ts","ui/$unitx/cTuid/myCTuid.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_left0__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_net__WEBPACK_IMPORTED_MODULE_2__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_1__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_loading__WEBPACK_IMPORTED_MODULE_11__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_10__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getUnitName","unitId","unitFromName","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","exHash","mif","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_9__","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_3__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","startApp","convertUIKeyToLowercase","obj","toLowerCase","Array","isArray","cApp","CApp","_controllers__WEBPACK_IMPORTED_MODULE_2__","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","value","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_4__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrDebug","at","a","opener","apiName","evt","data","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","clone","_ui__WEBPACK_IMPORTED_MODULE_2__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","parse","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","tslib_es6","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_3___default","_titleBar__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","findIndex","fetchUrl","debugHostUrl","localCheck","results","all","j","hostString","indexOf","timeout","text","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_react_form","size","placeholder","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vForm","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","renderRow","clickRow","callOnSelected","rowKey","ownerTop","ownerObj","ownerId","onSelected","vTuidList_VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","rules","required","null","checkRules","r","errors","readonly","FormMode","editable","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","setValue","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_query__WEBPACK_IMPORTED_MODULE_6__","_map__WEBPACK_IMPORTED_MODULE_7__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_link__WEBPACK_IMPORTED_MODULE_15__","control_ControlBase","formView","renderControl","hasError","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","rule","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickControl_PickControl","Content","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","entity_Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","arrName","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","splice","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","tuid_TuidMain","Main","tuid_TuidDiv","cacheIds","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_8__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_7__","_resUploader__WEBPACK_IMPORTED_MODULE_4__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_6__","mobx__WEBPACK_IMPORTED_MODULE_3__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_3__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_4__","onRowClick","selectUnitPage","appUnits","tonvaApp","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_2___default","CUq","_uq__WEBPACK_IMPORTED_MODULE_5__","cUqArr","VAppMain","loadAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","userName","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_6__","userAppUnits","appContent","appPage","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_5__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_4__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","centerApi","consts","uqBasedata","appIcon","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidEdit","CTuidList","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","template","v0","q","retFields","newItem","addItem","VMapMain","callParam","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","ItemEdit","itemSchema","uiItem","internalStart","internalEnd","_nav__WEBPACK_IMPORTED_MODULE_1__","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","account","verify","prop","left0","zero","num","fix","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_3__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","month","getMonth","hm","getFullYear","Media","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","maxMsg","checkMore","integer","widget_Widget","context","fieldProps","contextErrors","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","getUiItem","removeErrorWidget","addErrorWidget","isChanging","initData","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","Templet","errorList","tag","textWidget_TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","checkContextRules","removeErrors","renderTemplet","renderErrors","numberWidget_NumberWidget","updownWidget_UpdownWidget","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","idWidget_IdWidget","pickId","clearContextError","required-item","cursor-pointer","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","onButtonClick","observerRender","widget","widgetType","ButtonClass","context_Context","uiSchema","isRow","widgets","errorWidgets","subContexts","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkFieldRules","clearContextErrors","rowContext","setContextError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","parentData","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","imageItemEdit","imageSrc","end","ui_image","widgetsFactory","datetime","time","email","updown","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","contextType","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","pull","pulse","rotate","flip","inverse","IconText_IconText","iconClass","textClass","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","userSetProp","Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","FetchErrorView","reApi","errContent","LocalData","Data","homeTabCur","module","exports","meTab","LoadableComponent","lib_default","loader","VSiteHeader_VSiteHeader","logo_default","alt","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","renderCategoryRootList","CHome_CHome","cFunctionCategory","renderRootList","renderHome","startDebug","titleTitle","textOverflow","whiteSpace","VRootCategory_subStyle","fontSize","VRootCategory_VRootCategory","categoryClick","categoryWapper","openMainPage","renderRootCategory","renderSubCategory","marginRight","renderThirdCategory","categories","VCategory_VCategory","renderChild","childWapper","categoryWaper","cHome","funcs","pid","testpage_TestPage","cUsqArr","cuq","getCUq","tonva_react_uq","testpage2_TestPage2","navToPage","showOneVPage","CFunctionCategory_CFunctionCategory","productUI","product","brand","description","CAS","purity","molecularFomula","molecularWeight","origin","common_item","packx","radiox","radioy","ui_product","productx","productCategory","$unitx_tuid","assigned","section","organization","teamPerson","_super","searchOnPost","querySelect","team","noStaff","staff","noPost","cGetMessge_VMain","ret0","fromUser","getMessage","teamPosts","$unitx_res","CN","usq","arrNew","arrEdit","fromUnit","subject","newMessage","editSumbit","sectionTeam","teamOrganization","person","given","sur","gender","vTuidMain_MyVTuidMain","Button","src_ui","cUqProcut","initTabName","faceTabs","$$$/$unitx","fieldTuidUI","bruce/scmbasedata","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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yyD,IAAK,GACP,CAAE71D,KAAM,mDACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,mDACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,KAGX,CACE71D,KAAM,uCACNoD,GAAI,EACJma,SAAU,CACR,CAAEvd,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,KAGX,CACE71D,KAAM,2BACNoD,GAAI,EACJma,SAAU,CACR,CAAEvd,KAAK,2BACLoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,mDACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,mDACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,qEACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,+DACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,+DACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,iFACNoD,GAAI,IACJyyD,IAAK,KAGX,CACE71D,KAAM,uCACNoD,GAAI,EACJma,SAAU,CACR,CAAEvd,KAAK,2BACLoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,KAGX,CACE71D,KAAM,2BACNoD,GAAI,EACJma,SAAU,CACR,CAAEvd,KAAK,uCACLoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,iCACNoD,GAAI,IACJyyD,IAAK,GACP,CAAE71D,KAAM,2BACNoD,GAAI,IACJyyD,IAAK,KAGX,CACE71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","file":"static/js/main.be0e6b0f.chunk.js","sourcesContent":["export {left0} from './left0';\nexport * from './user';\nexport * from './net';\nexport * from './ui';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\nexport * from './entry';\n\n","export * from './form';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './components';\nexport * from './media';\nexport * from './listView';\nexport * from './searchBox';\nexport * from './multiStep';\nexport * from './uid';\n\n//test fork","import * as React from 'react';\nimport { Controller, VPage, View } from 'tonva-tools';\nimport { Entity, Field, TuidMain } from '../entities';\nimport { CUq } from './uq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid, _ownerField} = field;\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\n            let param:any = undefined;\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import * as React from 'react';\nimport {observable, has} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../fetchError';\nimport {appUrl, setMeInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\nimport {LocalData} from '../local';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\n\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n\nconst logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface State {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, State> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        if (key === undefined) return;\n        if (this.stack.find(v => v.key === key) === undefined) return;\n        while (this.stack.length >0) {\n            let len = this.stack.length;\n            let top = this.stack[len-1];\n            if (top.key === key) break;\n            this.pop();\n        }\n    }\n\n    topKey():number {\n        let len = this.stack.length;\n        if (len === 0) return undefined;\n        return this.stack[len-1].key;\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        //this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (self != window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <Loading />\n                </li>;\n                break;\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n                //<span className=\"sr-only\">Loading...</span>\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\n        return (\n        <ul className='va'>\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    @observable user: User/*InNav*/ = undefined;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getUnitName() {\n        try {\n            let unitRes = await fetch('unit.json', {});\n            //if (unitRes)\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.clear();\n            return;\n        }\n    }\n\n    private async loadUnit() {\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (isDevelopment !== true) return unit.id;\n            unitName = await this.getUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    hashParam: string;\n    private centerHost: string;\n    async start() {\n        try {\n            let hash = document.location.hash;\n            if (hash !== undefined && hash.length > 0) {\n                let pos = getExHashPos();\n                if (pos < 0) pos = undefined;\n                this.hashParam = hash.substring(1, pos);\n            }\n            nav.clear();\n            this.startWait();\n            await host.start();\n            let {url, ws, resHost} = host;\n            this.centerHost = url;\n            this.resUrl = 'http://' + resHost + '/res/';\n            this.wsHost = ws;\n            setCenterUrl(url);\n            \n            let unit = await this.loadUnit();\n            meInFrame.unit = unit;\n\n            let guest:Guest = this.local.guest.get();\n            if (guest === undefined) {\n                guest = await guestApi.guest();\n            }\n            nav.setGuest(guest);\n\n            let exHash = getExHash();\n            let mif = setMeInFrame(exHash);\n            if (exHash !== undefined && window !== window.parent) {\n                if (mif !== undefined) {\n                    this.ws = wsBridge;\n                    console.log('this.ws = wsBridge in sub frame');\n                    //nav.user = {id:0} as User;\n                    if (self !== window.parent) {\n                        window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\n                    }\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                    //await this.showAppView();\n                    return;\n                }\n            }\n\n            let user: User = this.local.user.get();\n            if (user === undefined) {\n                let {notLogined} = this.nav.props;\n                if (notLogined !== undefined) {\n                    await notLogined();\n                }\n                else {\n                    await nav.showLogin(undefined);\n                }\n                return;\n            }\n\n            await nav.logined(user);\n        }\n        catch (err) {\n        }\n        finally {\n            this.endWait();\n        }\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        logoutApis();\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\n        ws.connect();\n\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, top?:any, withBack?:boolean) {\n        let lv = await import('../entry/login');\n         let loginView = <lv.default withBack={withBack} callback={callback} top={top} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    async changePassword() {\n        let cp = await import('../entry/changePassword');\n        nav.push(<cp.ChangePasswordPage />);\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    topKey():number {\n        return this.nav.topKey();\n    }\n    popTo(key:number) {\n        this.nav.popTo(key);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import * as React from 'react';\nimport { CApp, AppUI } from './controllers';\nexport * from './entities';\nexport * from './controllers';\nexport * from './centerApi';\nexport * from './tools';\n\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n\nexport async function startApp(ui: AppUI) {\n    convertUIKeyToLowercase(ui);\n    let cApp = new (ui && ui.CApp || CApp)(ui);\n    await cApp.start();\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify } from '../../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","import { decodeGuestToken } from '../user';\nimport { CenterApi } from './uqApi';\n\nexport class GuestApi extends CenterApi {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './uqApi';\nexport {meInFrame, isBridged, getExHash} from './appBridge';\nexport * from './host';\nexport {httpGet} from './httpChannel';\n","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { BoxId, Tuid } from \"../entities\";\nimport { PureJSONContent } from '../controllers';\n\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    if (typeof bi === 'number') return <>{bi}</>;\n    let {id, _$tuid, _$com} = bi as BoxId;\n    let t:Tuid = _$tuid;\n    if (t === undefined) {\n        if (ui !== undefined) return ui(bi, x);\n        return PureJSONContent(bi, x);\n    }\n    let com = ui || _$com;\n    if (com === undefined) {\n        com = bi._$com = t.getTuidContent();\n    }\n    let val = t.valueFromId(id);\n    if (typeof val === 'number') val = {id: val};\n    if (ui !== undefined) {\n        let ret = ui(val, x);\n        if (ret !== undefined) return ret;\n        return <>{id}</>;\n    }\n    return React.createElement(com, val);\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'undefined':\n            break;\n        case 'object':\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\n            break;\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }       \n    if (nullUI === undefined) return <>null</>;\n    return nullUI();\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","export * from './jsonStringify';\nexport * from './tv';\n","export * from './nav';\nexport * from './titleBar';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';","import _ from 'lodash';\nimport {nav} from '../ui';\nimport {uid} from '../uid';\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\ninterface UqTokenAction extends UqToken {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) uqTokens[i] = undefined;\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let meInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                url: ret.url,\n                urlDebug: ret.urlDebug,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    let user = nav.user = message; // message.user;\n    setCenterToken(user.id, user.token);\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\n    let {unit} = appInFrame;\n    let parts = apiName.split('/');\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\n    if (ret === undefined) {\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\n        throw 'api not found';\n    }\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, url, urlDebug, token} = message;\n    let action = uqTokens[apiName];\n    if (action === undefined) {\n        throw 'error app api return';\n        //return;\n    }\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\n    action.url = realUrl;\n    action.token = token;\n    action.resolve(action);\n}\n\nexport function setMeInFrame(appHash: string):AppInFrame {\n    if (appHash) {\n        let parts = appHash.split('-');\n        let len = parts.length;\n        if (len > 0) {\n            let p = 1;\n            meInFrame.hash = parts[p++];\n            if (len>0) meInFrame.unit = Number(parts[p++]);\n            if (len>1) meInFrame.page = parts[p++];\n            if (len>2) meInFrame.param = parts.slice(p++);\n        }\n    }\n    return meInFrame;\n}\n\nexport function getExHashPos():number {\n    let hash = document.location.hash;\n    if (hash !== undefined && hash.length > 0) {\n        let pos = hash.lastIndexOf('#tv-');\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\n        return pos;\n    }\n    return -1;\n}\n\nexport function getExHash():string {\n    let pos = getExHashPos();\n    if (pos < 0) return undefined;\n    return document.location.hash.substring(pos);\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv-' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken === undefined) {\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\n            throw err;\n        }\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: meInFrame.hash,\n        }, \"*\");\n    });\n}\n\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import {nav} from '../ui/nav';\nimport {FetchError} from '../fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel} from './httpChannel';\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\nimport {appUq, meInFrame, logoutUqTokens} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\nimport { nav } from '../ui';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n    logoutUqTokens();\n}\n\ninterface UqLocal {\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n            return false;\n        }\n        uq.isNet = true;\n        return true;\n    }\n}\n\nconst localUqs = new CacheUqLocals;\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\n        this.token = uqToken.token;\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n\n    async update():Promise<string> {\n        return await this.get('update');\n    }\n\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    async loadAccess():Promise<any> {\n        return await localUqs.loadAccess(this);\n    }\n\n    async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }\n\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }\n\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\n        try {\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\n            let ret = await this.get(url);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }\n\n    async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }\n\n    async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }\n\n    async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }\n\n    async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }\n\n    async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }\n\n    async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    async user():Promise<any> {\n        return await this.get('user');\n    }\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, url, urlDebug} = ret;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        this.token = token;\n        return new HttpChannel(false, realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    loginedUserId = userId;\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\n}\n\nexport abstract class CenterApi extends ApiBase {\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokens = 'uqTokens';\nexport class UqTokenApi extends CenterApi {\n    private local: UqLocals;\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        try {\n            let {unit:unitParam, uqOwner, uqName} = params;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqTokens);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {unit, user} = this.local;\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: params.unit,\n                    uqs: {}\n                };\n            }\n\n            let un = uqOwner+'/'+uqName;\n            let nowTick = new Date().getTime();\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {tick, value} = uq;\n                if ((nowTick - tick) < 24*3600*1000) {\n                    return _.clone(value);\n                }\n            }\n            let ret = await this.get('app-uq', params);\n            this.local.uqs[un] = {\n                tick: nowTick,\n                value: ret,\n            }\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\n            return _.clone(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqTokens);\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApi {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface App {\n    id: number;\n    uqs: AppUq[];\n}\n\nexport interface AppUq {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    access: string;\n}\n\nexport interface UqService {\n    id: number;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\n\nconst appUqs = 'appUqs';\n\nexport class CenterAppApi extends CenterApi {\n    private cachedUqs: App;\n    async uqs(appOwner:string, appName:string):Promise<App> {\n        let ret:any;\n        let ls = localStorage.getItem(appUqs);\n        if (ls !== null) {\n            let rLs = JSON.parse(ls);\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(appOwner, appName);\n            let obj = {\n                appOwner:appOwner, \n                appName:appName, \n                value: ret,\n            }\n            localStorage.setItem(appUqs, JSON.stringify(obj));\n        }\n        return this.cachedUqs = _.cloneDeep(ret);\n    }\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\n    }\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(appOwner, appName);\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\n        let {id:retId, uqs:retUqs} = ret;\n        if (cachedId !== retId) return false;\n        if (cachedUqs.length !== retUqs.length) return false;\n        let len = cachedUqs.length;\n        for (let i=0; i<len; i++) {\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\n        }\n        return true;\n    }\n    async unitxUq(unit:number):Promise<UqService> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\n        return await this.post('tie/reset-password', param);\n    }\n}\n\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    //let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(appOwner, appName);\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\n        if (v === false) {\n            localStorage.removeItem(appUqs);\n            nav.start();\n        }\n    });\n    return ret;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from 'tonva-tools';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {TitleBar} from './titleBar';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string;\n    icon?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    logout?: boolean | (()=>Promise<void>);\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs[0];\n        if (t0 === undefined) return;\n        await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot');\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num');\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let titleBar;\n        if (header !== false) {\n            titleBar = <TitleBar \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right} \n            />;\n        }\n\n        return <article className='page-container'>\n            {titleBar}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                })\n            }\n            </section>\n            {tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\n        let titleBar;\n        if (header !== false)\n            titleBar = <TitleBar \n                back={back} \n                center={header as any}\n                right={right}\n                logout={this.props.logout}\n            />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {titleBar}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter;\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n}\n\nexport function Image(props: ImageProps) {\n    let {className, style, src} = props;\n    if (!src) {\n        return <div className={classNames(className, 'image-none')} style={style}>\n            <i className=\"fa fa-camera\" />\n        </div>;\n    }\n    if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} style={style} />;\n}\n","export const isDevelopment = process.env.NODE_ENV === 'development';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start() {\n        if (isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, urlDebug:string):string {\n        if (isDevelopment !== true) return url;\n        if (!urlDebug) return url;\n        for (let i in hosts) {\n            let host = hosts[i];\n            let {value, local} = host;\n            let hostString = `://${i}/`;\n            let pos = urlDebug.indexOf(hostString);\n            if (pos > 0) {\n                if (local === false) return url;\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\n                return urlDebug;\n            }\n        }\n        return url;\n    }\n\n    async localCheck(urlDebug: string):Promise<boolean> {\n        return await localCheck(urlDebug);\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 200;\n\nfunction fetchLocalCheck(url:string):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, fetchOptions as any)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\nimport { TuidMain, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, proxyLinks, isFrom} = this.controller;\n        let newButton:any;\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\n        let content:any;\n        if (proxyLinks === undefined) {\n            let right = <>\n                {newButton}\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\n            </>;\n            content = <LMR className='m-3' right={right}>\n                <SearchBox className=\"w-100\" size=\"md\"\n                    onSearch={this.onSearch} \n                    placeholder={'搜索'+label} />\n            </LMR>;\n        }\n        else {\n            content = <List className=\"my-2\"\n                header={<Muted>{label} 代理下列Tuid</Muted>}\n                items={proxyLinks}\n                item={{render: this.entityRender, onClick:this.entityClick}} />\n        }\n        return () => <Page header={label}>\n            {content}\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { TuidMain, Tuid } from '../../entities';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { nav, Page } from 'tonva-tools';\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../entities';\nimport { CTuid, TuidUI } from './cTuid';\nimport { SearchBox, List } from 'tonva-react-form';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.owner === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { TuidMain } from '../../entities';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import { PageItems } from 'tonva-tools';\nimport { Tuid } from \"../../entities\";\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\nimport { JSONContent, RowContent } from '../form/viewModel';\n\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidMainList extends VTuidMainListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isFrom === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n","import _ from 'lodash';\nimport { TypeVPage, PageItems } from 'tonva-tools';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from \"../uq/cUq\";\nimport { CLink } from \"../link\";\nimport { VTuidInfo } from \"./vTuidInfo\";\nimport { TuidPageItems } from \"./pageItems\";\nimport { VTuidMainList } from './vTuidList';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity.owner || this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport class CTuidMain extends CTuid<TuidMain> {\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n        let tuid = this.entity;\n        this.proxies = tuid.proxies;\n        if (this.proxies !== undefined) {\n            this.proxyLinks = [];\n            for (let i in this.proxies) {\n                let link = this.cUq.linkFromName('tuid', i);\n                this.proxyLinks.push(link);\n            }\n        }\n    }\n\n    async from():Promise<CTuidMain> {\n        let ret = await this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    async cUqFrom():Promise<CUq> {\n        return await this.entity.cUqFrom();\n    }\n    async cEditFrom(): Promise<CTuidEdit> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidEditFromName(this.entity.name);\n    }\n    async cInfoFrom(): Promise<CTuidInfo> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidInfoFromName(this.entity.name);\n    }\n    async cSelectFrom(): Promise<CTuidSelect> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    proxies: {[name:string]: TuidMain};\n    proxyLinks: CLink[];\n    isFrom: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': v = this.VTuidEdit; break;\n            case 'list': v = this.VTuidList; break;\n            case 'edit': await this.edit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        await this.openVPage(v, value);\n    }\n\n    protected async edit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        let v = this.VTuidEdit;\n        await this.openVPage(v, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidEdit extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.edit(id);\n    }\n}\n\nexport class CTuidList extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<TuidDiv> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ' + this.entity.name);\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\nimport { uid } from 'tonva-react-form';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames'\nimport { ViewModel } from \"./viewModel\";\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed, action } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { ViewModel } from \"../viewModel\";\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || this.field !== undefined && this.field.null === false) {\n            this.rules.push(new RuleRequired);\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            mode === FormMode.edit && this.fieldUI.editable === false;\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum);\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (ret === NaN)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) == v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt);\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../entities';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\nimport { IObservableArray, observable } from 'mobx';\nimport _ from 'lodash';\nimport { List, FA, Muted } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields, Field } from '../../entities';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../../tools';\nimport { Field, Tuid } from '../../../entities';\nimport { VField, RedMark } from \"./vField\";\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput, FormMode } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: Tuid;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        let {_ownerField} = this.field;\n        if (_ownerField !== undefined) {\n            let {name, arr} = _ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || this.input.placeHolder}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let redDot;\n        let {required} = this.fieldUI;\n        if (required === true || this.field.null === false) {\n            redDot = <RedMark />;\n        }\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\nimport { Field, ArrFields } from \"../../entities\";\nimport { VForm, FormOptions } from \"./vForm\";\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\nimport { VSubmit } from \"./vSubmit\";\nimport { VField, buildVField, VComputeField } from \"./vField\";\nimport { VArr } from \"./vArr\";\nimport { VTuidField } from \"./vField/vTuidField\";\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name, fields} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n            vField = VIntField;\n            break;\n        case 'bigint':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { observer } from \"mobx-react\";\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../entities';\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from 'tonva-react-form';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(this, values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields, id, order} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","export * from './vForm';\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from '../fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../ui/nav';\nimport { isDevelopment } from './host';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private isCenter: boolean;\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.isCenter = isCenter;\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\n        navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","export * from './CApp';\nexport * from './startApp';\nexport * from './uq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Rule} from '../rule';\n\nexport abstract class ControlBase {\n    protected formView: FormView;\n    constructor(formView:FormView) {\n        this.formView = formView;\n    }\n    render():JSX.Element {\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n        </div>;\n    }\n    protected abstract renderControl():JSX.Element;\n    @computed get hasError():boolean {return false;}\n    @computed get filled():boolean {return false;}\n    clear() {}\n    clearErrors() {}\n    readValues(values:any):any {}\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    isOk():boolean {this.validate(); return !this.hasError;}\n    protected validate() {}\n}\n\nexport abstract class Control extends ControlBase {\n    protected field: Field;\n    protected face: Face;\n    protected props: any;\n    protected rules: Rule[];\n\n    protected element: HTMLElement;\n    @observable protected isOK?: boolean;\n    @observable protected error: string;\n    @observable protected value: any;\n\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView);\n        this.field = field;\n        this.face = face;\n        this.init();\n        this.setProps();\n    }\n    protected ref(element: HTMLElement) {\n        this.element = element;\n    }\n    protected init() {\n        this.rules = [];\n        let r = this.field.rules;\n        if (r !== undefined) {\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\n            else this.rules.push(r as Rule);\n        }\n    };\n    protected setProps():any {\n        return this.props = {\n            ref: this.ref.bind(this),\n            name: this.field.name,\n        }\n    };\n    @computed get hasError():boolean {return this.error !== undefined;}\n    @computed get filled():boolean {\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\n        return ret;\n    }\n    clearValue() { this.value = undefined; }\n    clear() { this.clearErrors(); this.clearValue(); }\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\n    readValues(values:any):any {\n        values[this.field.name] = this.value;\n    }\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    protected getValueFromElement():any {return this.value;}\n    protected validate() {\n        try {\n            let v = this.getValueFromElement();\n            if (this.rules.length > 0) {\n                let isOk:boolean;\n                for (let rule of this.rules) {\n                    console.log('validate: %s', v);\n                    let err = rule(v);\n                    console.log('validate: %s err: %s', v, err);\n                    if (err === true) {\n                        this.error = undefined;\n                        isOk = true;\n                    }\n                    else if (err !== undefined) {\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \n                        //    this.field.name, JSON.stringify(v), rule, err);\n                        this.error = err;\n                        this.isOK = false;\n                        return;\n                    }\n                }\n                this.isOK = isOk;\n            }\n            this.value = v;\n        }\n        catch (e) {\n            this.error = e.message;\n        }\n    }\n    render():JSX.Element {\n        let n;\n        if (this.face !== undefined) {\n            let {notes} = this.face;\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\n        }\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n            {n}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {ControlBase} from './control';\n\nexport class ButtonsControl extends ControlBase {\n    constructor(props) {\n        super(props);\n        this.otherClick = this.otherClick.bind(this);\n    }\n    private otherClick() {\n        let onOther = this.formView.props.onOther;\n        if (onOther === undefined) return;\n        let values = this.formView.readValues();\n        onOther(values);\n    }\n    renderControl():JSX.Element {\n        console.log('buttons.renderControl');\n        let nothing = this.formView.nothing;\n        let hasError = this.formView.hasError;\n        let props = this.formView.props;\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\n        let {submitButton, otherButton, onOther} = props;\n        let btnOther;\n        if (otherButton !== undefined) {\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\n                {otherButton}\n            </button>\n        }\n        return <div className=\"d-flex justify-content-start\">\n            <button\n                className=\"btn btn-primary\"\n                type=\"submit\" \n                disabled={nothing || hasError}>\n                {submitButton || '提交'}\n            </button>\n            {btnOther}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, Placeholder} from '../face';\nimport {Control} from './control';\n\nconst TxtRequired = '必须填入要求内容';\n\nexport abstract class CharsControl extends Control {\n    protected init() {\n        super.init();\n        if (this.field.required === true) {\n            this.rules.push((v) => {\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\n                return true;\n            });\n        }\n    }\n\n    protected element: HTMLInputElement;\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onBlur: this.onBlur.bind(this),\n            onFocus: this.onFocus.bind(this),\n            onChange: this.onChange.bind(this),\n        });\n        let face = this.face as Placeholder;\n        if (face !== undefined) {\n            _.assign(this.props, {\n                placeholder: face.placeholder,\n            });\n        }\n        return this.props;\n    };\n    protected parseValue(value?:string):any {return value;}\n    private onBlur() {\n        //console.log('field %s onBlure', this.field.name);\n        this.validate();\n    }\n    private onChange() {\n        console.log('onChange');\n        this.validate();\n    }\n    private onFocus() {\n        this.clearErrors();\n        //this.error = undefined;\n        //this.formView.clearErrors();\n    }\n    protected className() {\n        return classNames({\n            \"form-control\": true,\n            \"has-success\": this.isOK === true,\n            \"is-invalid\": this.error !== undefined,\n            \"is-valid\": this.error === undefined && this.isOK === true,\n        });\n    }\n    protected renderInput():JSX.Element {\n        return <input className={this.className()} {...this.props} />;\n    }\n    protected ref(element: HTMLInputElement) {\n        super.ref(element);\n        if (element) {\n            element.value = this.value === undefined? '':this.value;\n        }\n    }\n    protected renderError():JSX.Element {\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\n        if (this.error === undefined) return null;\n        return <div className=\"invalid-feedback\">{this.error}</div>\n    }\n    clearValue() { super.clearValue(); this.element.value = ''; }\n    setError(fieldName:string, error:string) {\n        if (this.field.name === fieldName) this.error = error;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) return;\n        //this.element.value = v;\n        this.value = v;\n    }\n    renderControl():JSX.Element {\n        return <React.Fragment>\n            {this.renderInput()}\n            {this.renderError()}\n        </React.Fragment>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\n\nexport class StringControl extends CharsControl {\n    protected field: StringField;\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'text',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        return value;\n    }\n}\n\nexport class PasswordControl extends StringControl {\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'password',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {IntField, DecField, NumberField} from '../field';\nimport {CharsControl} from './charsControl';\n\nconst ErrInvalidNumber = '无效的数字';\nconst ErrMin = '最小值为';\nconst ErrMax = '最大值为';\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport class NumberControl extends CharsControl {\n    protected field: IntField | DecField | NumberField;\n    protected value: number;\n    protected extraChars: number[];\n    \n    protected init() {\n        super.init();\n        this.extraChars = [];\n        let {min, max} = this.field;\n        if (min !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\n        }\n        else {\n            this.extraChars.push(KeyCode_Neg);\n        }\n\n        if (max !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        let n = Number.parseFloat(value);\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\n        return n;\n    }\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            type: 'number',\n            step: (this.field as DecField).step,\n            onKeyPress: this.onKeyPress.bind(this),\n        });\n    }\n\n    onKeyPress(event:KeyboardEvent) {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.element.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.element.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.element.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.element.value = v;\n    }\n}\n","import * as React from 'react';\nimport {Control, ControlBase} from './control';\nimport {FormView} from '../formView';\n\nexport class UnknownControl extends Control {\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n            don't know how to create control<br/>\n            field: {JSON.stringify(this.field)} must be object <br/>\n            face: {JSON.stringify(this.face)} must be object <br/>\n            </div>\n        </div>;\n    }\n}\n\nexport class EmptyControl extends ControlBase {\n    private element:JSX.Element;\n    constructor(formView:FormView, element:JSX.Element) {\n        super(formView);\n        this.element = element;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            {this.element}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, IdPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickIdControl extends Control {\n    protected face: IdPickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    onPicked = (value: any) => {\n        this.value = value.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private controlContent():string|JSX.Element {\n        let {itemFromId, fromPicked, initCaption} = this.face;\n        if (this.value === undefined) {\n            return initCaption || '请选择Id';\n        }\n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        if (itemFromId !== undefined) {\n            if (fromPicked !== undefined) {\n                let item = itemFromId(this.value);\n                if (item) {\n                    let ret = fromPicked(item);\n                    if (ret !== undefined) return ret.caption;\n                }\n            }\n        }\n        return String(this.value);\n    }\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\n                onClick={this.onClick}>\n                {this.controlContent()}\n            </div>;\n        }\n        return <div className=\"form-control-static \">\n            <input.component id={this.value} \n                ui={tuid}\n                //input={input}\n                //entitiesUI={this.formView.props.context} \n                //params={this.formView.readValues()}\n                //onPicked={this.onPicked}\n                />\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, TuidPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickTuidControl extends Control {\n    protected face: TuidPickFace;\n    // protected value: number;\n    @observable private caption: string|JSX.Element;\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.onIdChanged = this.onIdChanged.bind(this);\n        //this.onClick = this.onClick.bind(this);\n    }\n    /*\n    private async onClick() {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }*/\n    onIdChanged(id: any) {\n        this.value = id.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private buildContent():JSX.Element {\n        //let {tuid, input} = this.face;\n        return <this.face.input.component \n            {...this.face}\n            id={this.value}\n            //ui={this.face.ui}\n            //input={input}\n            //entitiesUI={this.formView.props.context} \n            onFormValues={()=>this.formView.readValues()}\n            onIdChanged={this.onIdChanged} />;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static \">\n            {this.buildContent()}\n        </div>;\n    }\n}\n/*\n<button className=\"form-control btn btn-outline-info\"\ntype=\"button\"\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\nonClick={this.onClick}>\n{this.buildContent()}\n</button>\n*/","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, PickFace} from '../face';\nimport {Control} from './control';\nimport { observer } from 'mobx-react';\n\nexport class PickControl extends Control {\n    protected face: PickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    /*\n    private controlContent():string|JSX.Element {\n        let {content: Content} = this.face;\n        if (this.value === undefined) {\n            return '请选择';\n        }\n        \n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        return <Content id={this.value} />;\n    }*/\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        return <this.view />;\n        /*\n        let {content:Content} = this.face;\n        //if (this.value === undefined) {\n            //return <div>no input on idpick</div>;\n        //}\n        //return <div className=\"form-control-static \">\n        //    <Content />\n        //</div>;\n        */\n    }\n\n    private view = observer(() => {\n        let content;\n        let {content: Content} = this.face;\n        if (this.value === undefined || this.value === null) {\n            content = '请选择';\n        }\n        /*\n        else if (this.caption !== undefined) {\n            content = this.caption;\n        }*/\n        else {\n            content = <Content id={this.value} />;\n        } \n        return <div\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\n            onClick={this.onClick}>\n            {content}\n        </div>\n    });\n}\n","export * from './control';\nexport * from './buttonsControl';\nexport * from './stringControl';\nexport * from './numberControl';\n\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Control, ControlBase} from './control';\nimport {ButtonsControl} from './buttonsControl';\nimport {CheckControl} from './checkControl';\nimport {RadioControl} from './radioControl';\nimport {TextAreaControl} from './textAreaControl';\nimport {SelectControl} from './selectControl';\nimport {UnknownControl, EmptyControl} from './unknownControl';\nimport {StringControl, PasswordControl} from './stringControl';\nimport {NumberControl} from './numberControl';\n\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\nimport { PickIdControl } from './pickIdControl';\nimport { PickTuidControl } from './pickTuidControl';\nimport { PickControl } from './pickControl';\n\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\n\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\n    let label = row.label;\n    if ((<GroupRow>row).group !== undefined)\n        return createGroupControl(form, label, row as GroupRow);\n    if ((<FieldRow>row).field !== undefined)\n        return createFieldControl(form, label, row as FieldRow);\n    return new EmptyControl(form, row.help);\n}\n\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\n    \"string\": StringControl,\n    \"password\": PasswordControl,\n    \"number\": NumberControl,\n    \"checkbox\": CheckControl,\n    \"radiobox\": RadioControl,\n    \"select\": SelectControl,\n    \"pick-id\": PickIdControl,\n    \"pick-tuid\": PickTuidControl,\n    \"textarea\": TextAreaControl,\n    \"pick\": PickControl,\n};\nconst defaultFaces:{[type:string]: Face} = {\n    \"string\": {type:'string'},\n    \"number\": {type:'number'},\n    \"int\": {type:'number'},\n    \"dec\": {type:'number'},\n    \"bool\": {type:'checkbox'},\n}\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\n    let {field, face} = fieldRow;\n    switch (typeof field) {\n        case 'string':\n            field = {\n                name: (field as any) as string,\n                type: 'string',\n            }\n            break;\n        case 'object':\n            break;\n        default:\n            return new UnknownControl(form, field, face);\n    }\n    let fieldType = field.type || 'string';\n    if (face === undefined) {\n        face = defaultFaces[fieldType];\n        if (face === undefined) return new UnknownControl(form, field, face);\n    }\n    else if (face.type === undefined) {\n        let f = defaultFaces[fieldType];\n        face.type = f===undefined? 'string' : f.type;\n    }\n    let control = controls[face.type || fieldType] || UnknownControl;\n    return new control(form, field, face);\n}\n\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\n    return new UnknownControl(form, groupRow as any, undefined);\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field, BoolField} from '../field';\nimport {Face, CheckBoxFace} from '../face';\nimport {Control} from './control';\n\nexport class CheckControl extends Control {    \n    protected element: HTMLInputElement;\n    protected field: BoolField;\n    protected face: CheckBoxFace;\n    private trueValue: any;\n    private falseValue: any;\n\n    protected init() {\n        super.init();\n        let {trueValue, falseValue} = this.field;\n        if (trueValue === undefined) this.trueValue = 1;\n        if (falseValue === undefined) this.falseValue = 0;\n    }\n\n    setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onChange: this.onChange.bind(this),\n        });\n    }\n\n    clearValue() {\n        this.element.checked = this.field.defaultValue === this.trueValue;\n        this.value = this.getValueFromElement();\n    }\n\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) {\n            v = this.field.defaultValue;\n        }\n        if (v !== undefined) {\n            //this.element.checked = v === this.trueValue;\n            //this.value = this.getValueFromElement();\n        }\n    }\n\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\n\n    private onChange() {\n        this.value = this.getValueFromElement();\n    }\n\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <label className=\"form-control\">\n                <label className=\"custom-control custom-checkbox mb-0\">\n                    <input type='checkbox'\n                        name={this.field.name}\n                        ref={this.props.ref}\n                        onChange={this.props.onChange}\n                        className=\"custom-control-input\" />\n                    <span className=\"custom-control-indicator\" />\n                    <span className=\"custom-control-description\">{this.face.label}</span>\n                </label>\n            </label>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, RadioFace} from '../face';\nimport {Control} from './control';\n\nexport class RadioControl extends Control {\n    protected face: RadioFace;\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <div className=\"form-control\">\n            {\n                this.face.list.map((item, index) => {\n                    let t, v;\n                    if (typeof item !== 'object') t = v = item;\n                    else {\n                        t = item.text;\n                        v = item.value;\n                    }\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\n                        <input type='radio'\n                            name={this.field.name} \n                            className=\"custom-control-input\" />\n                        <span className=\"custom-control-indicator\"></span>\n                        <span className=\"custom-control-description\">{t}</span>\n                    </label>;\n                })\n            }\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, SelectFace} from '../face';\nimport {Control} from './control';\n\nexport class SelectControl extends Control {\n    constructor (formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.ref = this.ref.bind(this);\n    }\n    protected face: SelectFace;\n    protected element: HTMLSelectElement;\n    protected getValueFromElement():any {\n        let {selectedIndex, selectedOptions} = this.element;\n        let v:any = selectedOptions[0].value;\n        switch (this.field.type) {\n            case 'number': v = Number(v); break;\n            case 'date': v = new Date(v); break;\n            case 'bool': \n                if (typeof v === 'string') {\n                    v = ((v as string).toLowerCase() === 'true');\n                }\n                break;\n        }\n        return v;\n    }\n    renderControl():JSX.Element {\n        let {list} = this.face;\n        let def = this.face.default;\n        let options: any[] = [];\n        if (def === undefined)\n            options.push(<option key={-1} value={undefined}>请选择</option>);\n        options.push(...list.map((item, index) => {\n            let t, v;\n            if (typeof item !== 'object') t = v = item;\n            else {\n                t = item.text;\n                v = item.value;\n            }\n            return <option key={index} value={v}>{t}</option>;\n        }));\n        return <div className=\"form-control-static\">\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\n                {options}\n            </select>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\nimport {TextAreaFace} from '../face';\n\nexport class TextAreaControl extends CharsControl {\n    protected field: StringField;\n    protected face: TextAreaFace;\n    private el: HTMLTextAreaElement;\n    protected setProps() {\n        let p = super.setProps();\n        let {maxLength} = this.field;\n        let {rows} = this.face;\n        _.assign(p, {\n            maxLength: maxLength,\n            rows: rows,\n        });\n        return p;\n    };\n    protected renderInput():JSX.Element {\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\n    }\n}\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\nimport { TuidMain, Tuid } from './tuid';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    protected entities: Entities;\n    protected schema: any;\n    private jName: string;\n    sys?: boolean;\n    readonly name: string;\n    readonly typeId: number;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        this.entities = entities;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    protected get tvApi() {return this.entities.uqApi;}\n    async getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = await this.entities.uqApi.schema(this.name);\n        this.setSchema(schema);\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        if (this.schema !== undefined) return;\n        this.schema = schema;\n        let {name, fields, arrs, returns} = schema;\n        if (name !== this.name) this.jName = name;\n        this.entities.buildFieldTuid(this.fields = fields);\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\n        //this.newMain = this.buildCreater(fields);\n        //this.newArr = this.buildArrCreater(arrs);\n        //this.newRet = this.buildArrCreater(returns);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromField(field:Field):Tuid {\n        let {_tuid, tuid} = field;\n        if (tuid === undefined) return;\n        if (_tuid !== undefined) return _tuid;\n        return field._tuid = this.entities.getTuid(tuid, undefined);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.entities;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid, undefined);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    protected buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields; \n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name} = field;\n            let d = params[name];\n            let val:any;\n            switch (typeof d) {\n                default: val = d; break;\n                case 'object':\n                    let tuid = field._tuid;\n                    if (tuid === undefined) val = d.id;\n                    else val = tuid.getIdFromObj(d);\n                    break;\n            }\n            result[name] = val;\n        }\n    }\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n    \n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (typeof d) {\n            default: return d;\n            case 'object':\n                let tuid = field._tuid;\n                if (tuid === undefined) return d.id;\n                return tuid.getIdFromObj(d);\n            case 'string':\n                let len = d.length;\n                let r = '', p = 0;\n                for (let i=0;i<len;i++) {\n                    let c = d.charCodeAt(i);\n                    switch(c) {\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                    }\n                }\n                return r + d.substring(p);\n            case 'undefined': return '';\n        }\n    }\n    \n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n    \n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n    \n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n    \n    unpackReturns(data:string):any {\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n    \n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[f.name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[f.name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) break;\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[f.name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[f.name] = null;\n                }\n                ++p;\n                ++i;\n                break;\n            }\n        }\n        return p;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'date':\n            case 'time':\n                let date = new Date(Number(v));\n                return date;\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'dec': return Number(v);\n            case 'bigint':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                _tuid.useId(id, true);\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport _ from 'lodash';\nimport { Entity } from './entity';\nimport { Entities, Field, ArrFields } from './entities';\nimport { isNumber } from 'util';\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\n\nexport class BoxId {\n    id: number;\n    obj?: any;\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\n    _$com?: any;\n    _$tuid?: Tuid;\n    getObj: ()=>any;\n}\n\nconst maxCacheSize = 1000;\nexport abstract class Tuid extends Entity {\n    private BoxId: ()=>void;\n    get typeName(): string { return 'tuid';}\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private waitingIds: number[] = [];          // 等待loading的\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n    idName: string;\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\n    unique: string[];\n    schemaFrom: {owner:string; uq:string};\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        super(entities, name, typeId);\n        this.buildIdBoxer();\n    }\n\n    abstract get Main():Tuid;\n\n    private buildIdBoxer() {\n        this.BoxId = function():void {};\n        let prototype = this.BoxId.prototype;\n        Object.defineProperty(prototype, '_$tuid', {\n            value: this,\n            writable: false,\n            enumerable: false,\n        })\n        Object.defineProperty(prototype, 'obj', {\n            enumerable: false,\n            get: function() {\n                if (this.id === undefined || this.id<=0) return undefined;\n                return this._$tuid.valueFromId(this.id);\n            }\n        })\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\n            let t:Tuid = this._$tuid;\n            return t.valueFromFieldName(fieldName, this.obj);\n        }\n        prototype.getObj = function():any {\n            if (this._$tuid !== undefined) {\n                return this._$tuid.getCacheValue(this.id);\n            }\n        }\n        prototype.toJSON = function() {return this.id}\n    }\n    boxId(id:number):BoxId {\n        this.useId(id);\n        let ret:BoxId = new this.BoxId();\n        ret.id = id;\n        return ret;\n    }\n    getTuidContent() {\n        return this.entities.cUq.getTuidContent(this);\n    }\n    getIdFromObj(item:any):number {\n        return item[this.idName];\n    }\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id, unique} = schema;\n        this.idName = id;\n        this.unique = unique;\n        this.schemaFrom = this.schema.from;\n    }\n\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        let tId = typeof id;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getCacheValue(_id);\n    }\n    getCacheValue(id:number) {\n        let v = this.cache.get(id);\n        if (this.owner !== undefined && typeof v === 'object') {\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\n        }\n        return v;\n    }\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\n        if (obj === undefined) return;\n        let f = this.fields.find(v => v.name === fieldName);\n        if (f === undefined) return;\n        let v = obj[fieldName];\n        let {_tuid} = f;\n        if (_tuid === undefined) return v;\n        return _tuid.valueFromId(v);\n    }\n    resetCache(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.useId(id);\n    }\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;\n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.entities.cacheTuids(defer===true?70:20);\n        //let idVal = this.createID(id);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n    async proxied(name:string, id:number):Promise<any> {\n        let proxyTuid = this.entities.getTuid(name, undefined);\n        proxyTuid.useId(id);\n        let proxied = await this.tvApi.proxied(this.name, name, id);\n        this.cacheValue(proxied);\n        return proxied;\n    }\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        //let cacheVal = this.createID(id, val);\n        this.cache.set(id, val);\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\n        /*\n        let {tuids, fields} = this.schema;\n        if (tuids !== undefined && fields !== undefined) {\n            for (let f of fields) {\n                let {name, tuid} = f;\n                if (tuid === undefined) continue;\n                let t = this.entities.tuid(tuid);\n                if (t === undefined) continue;\n                t.useId(val[name]);\n            }\n        }*/\n        return true;\n    }\n    protected afterCacheId(tuidValue:any) {\n        for (let f of this.fields) {\n            let {_tuid} = f;\n            if (_tuid === undefined) continue;\n            _tuid.useId(tuidValue[f.name]);\n        }\n    }\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let name:string, arr:string;\n        if (this.owner === undefined) {\n            name = this.name;\n        }\n        else {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        let api = await this.getApiFrom();\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n            this.afterCacheId(tuidValue);\n        }\n        await this.cacheDivIds();\n    }\n    protected async cacheDivIds():Promise<void> {\n    }\n    async load(id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = await this.getApiFrom();\n        let values = await api.tuidGet(this.name, id);\n        if (values === undefined) return;\n        values._$tuid = this;\n        this.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n    protected getDiv(divName:string):TuidDiv {return;}\n    private cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.getDiv(name);\n                for (let row of arrValues) {\n                    row._$tuid = tuidDiv;\n                    row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n    private cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n    async save(id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        let ret = await this.tvApi.tuidSave(this.name, params);\n        let {id:retId, inId} = ret;\n        if (retId === undefined) {\n            params.id = id;\n            this.cacheValue(params);\n        }\n        else if (retId > 0) {\n            params.id = retId;\n            this.cacheValue(params);\n        }\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let {fields} = this.schema;\n        let name:string, arr:string;\n        if (this.owner !== undefined) {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        else {\n            name = this.name;\n            arr = undefined;\n        }\n        let api = await this.getApiFrom();\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = await this.getApiFrom();\n        return await api.tuidArrGet(this.name, arr, owner, id);\n    }\n    /*\n    async loadArrAll(owner:number):Promise<any[]> {\n        return this.all = await this.tvApi.tuidGetAll(this.name);\n    }*/\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\n    }\n    \n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\n    //private async ids(idArr:number[]) {\n    //    return await this.tvApi.tuidIds(this.name, idArr);\n    //}\n    async showInfo(id:number) {\n        await this.entities.cUq.showTuid(this, id);\n    }\n}\n\nexport class TuidMain extends Tuid {\n    get Main() {return this}\n    get uqApi() {return this.entities.uqApi};\n\n    divs: {[name:string]: TuidDiv};\n    proxies: {[name:string]: TuidMain};\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\n                tuidDiv.owner = this;\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n            }\n        }\n    }\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\n    /* 努力回避async里面的super调用，edge不兼容\n    async cacheIds():Promise<void> {\n        await super.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n    */\n    protected async cacheDivIds():Promise<void> {\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n\n    async cUqFrom(): Promise<CUq> {\n        if (this.schemaFrom === undefined) return this.entities.cUq;\n        let {owner, uq: uq} = this.schemaFrom;\n        let cUq = await this.entities.cUq\n        let cApp = cUq.cApp;\n        if (cApp === undefined) return cUq;\n        let cUqFrm = await cApp.getImportUq(owner, uq);\n        if (cUqFrm === undefined) {\n            console.error(`${owner}/${uq} 不存在`);\n            debugger;\n            return cUq;\n        }\n        let retErrors = await cUqFrm.loadSchema();\n        if (retErrors !== undefined) {\n            console.error('cUq.loadSchema: ' + retErrors);\n            debugger;\n            return cUq;\n        }\n        return cUqFrm;\n    }\n\n    async getApiFrom() {\n        let from = await this.from();\n        if (from !== undefined) {\n            return from.entities.uqApi;\n        }\n        return this.entities.uqApi;\n    }\n\n    async from(): Promise<TuidMain> {\n        let cUq = await this.cUqFrom();\n        return cUq.tuid(this.name);\n    }\n\n    async cFrom(): Promise<CTuidMain> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidMainFromName(this.name);\n    }\n\n    async cEditFrom(): Promise<CTuidEdit> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidEditFromName(this.name);\n    }\n\n    async cInfoFrom(): Promise<CTuidInfo> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidInfoFromName(this.name);\n    }\n\n    async cSelectFrom(): Promise<CTuidSelect> {\n        let cUq = await this.cUqFrom();\n        if (cUq === undefined) return;\n        return cUq.cTuidSelectFromName(this.name);\n    }\n\n    protected afterCacheId(tuidValue:any) {\n        super.afterCacheId(tuidValue);\n        if (this.proxies === undefined) return;\n        let {type, $proxy} = tuidValue;\n        let pTuid = this.proxies[type];\n        pTuid.useId($proxy);\n    }\n}\n\nexport class TuidDiv extends Tuid {\n    get Main() {return this.owner}\n\n    async getApiFrom() {\n        return await this.owner.getApiFrom();\n    }\n}\n","import {Entity} from './entity';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        await this.loadSchema();\n        let text = this.pack(data);\n        return await this.tvApi.action(this.name, {data:text});\n    }\n}\n\n","import {observable, IObservableArray} from 'mobx';\nimport {Entity} from './entity';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        await this.loadSchema();\n        let {appId} = this.entities;\n        let text = this.pack(data);\n\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\n        return ret;\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        await this.loadSchema();\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n    }\n    private async unpack(data:any):Promise<any> {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.getSheet(this.name, id);\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return await this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchive(this.name, id)\n        return await this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        await this.loadSchema();\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {observable, IObservableArray} from 'mobx';\nimport {Field, ArrFields} from './entities';\nimport {Entity} from './entity';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        this.returns = returns;\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw 'call resetPage(size:number, params:any) first';\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n    async query(params:any):Promise<any> {\n        await this.loadSchema();\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\nimport { Field } from './entities';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.entities.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let schema = actions[i];\n            let {name} = schema;\n            let action = this.entities.newAction(name, undefined);\n            action.setSchema(schema);\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let schema = queries[i];\n            let {name} = schema;\n            let query = this.entities.newQuery(name, undefined);\n            query.setSchema(schema);\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n    }\n\n    async del(param:any) {\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n    }\n\n    async all() {\n        await this.loadSchema();\n        return await this.queries.all.query({});\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n    }\n\n    async query(param:any) {\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import {TuidMain, Tuid} from './tuid';\nimport {Action} from './action';\nimport {Sheet, SheetState, SheetAction} from './sheet';\nimport {Query} from './query';\nimport {Book} from './book';\nimport {History} from './history';\nimport { UqApi } from 'tonva-tools';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { CUq } from '../controllers';\n\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text': \n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    url?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _ownerField: Field;\n    _tuid: Tuid;\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\n\nexport class Entities {\n    private tuids: {[name:string]: TuidMain} = {};\n    private actions: {[name:string]: Action} = {};\n    private sheets: {[name:string]: Sheet} = {};\n    private queries: {[name:string]: Query} = {};\n    private books: {[name:string]: Book} = {};\n    private maps: {[name:string]: Map} = {};\n    private histories: {[name:string]: History} = {};\n    private pendings: {[name:string]: Pending} = {};\n    private cacheTimer: any;\n    cUq: CUq;\n    uqApi: UqApi;\n    appId: number;\n    uqId: number;\n\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\n        this.cUq = cUq;\n        this.uqApi = uqApi;\n        this.appId = appId;\n    }\n\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: TuidMain[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    async loadAccess() {\n        let accesses = await this.uqApi.loadAccess();\n        if (accesses === undefined) return;\n        this.buildEntities(accesses);\n    }\n\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n\n    private buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        let {access, tuids} = entities;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\n        let tuid = this.tuids[name];\n        if (tuid === undefined) return;\n        if (div === undefined) return tuid;\n        return tuid.divs[div];\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.cacheIds();\n        }\n    }\n\n    private buildTuids(tuids:any) {\n        let proxyColl = {} as any;\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name, typeId, proxies} = schema;\n            let tuid = this.newTuid(i, typeId);\n            tuid.sys = true;\n            //tuid.setSchema(schema);\n            if (proxies !== undefined) proxyColl[i] = proxies;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name} = schema;\n            let tuid = this.getTuid(i);\n            //tuid.sys = true;\n            tuid.setSchema(schema);\n        }\n        for (let i in proxyColl) {\n            let proxies:string[] = proxyColl[i];\n            let tuid = this.tuids[i];\n            tuid.proxies = {};\n            for (let p of proxies) {\n                tuid.proxies[p] = this.tuids[p];\n            }\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n        /*\n        for (let tuid of this.tuidArr) {\n            tuid.setProxies(this);\n        }*/\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    newTuid(name:string, id:number):TuidMain {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            case 'uq': this.uqId = id; break;\n            case 'tuid': \n                let tuid = this.newTuid(name, id);\n                tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n        /*\n        let states = sheet.states;\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    /*\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }*/\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid, arr, url} = f;\n            if (tuid === undefined) continue;\n            f._tuid = this.getTuid(tuid, arr, url);\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    throw `owner field ${owner} is undefined`;\n                }\n            }\n            f._ownerField = ownerField;\n            let {arr, url} = f;\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n}\n","export * from './entities';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\n","import * as React from 'react';\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\n\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\n\nexport abstract class RowContainer {\n    protected form:FormView;\n    protected row: FormRow;\n    protected control: ControlBase;\n    constructor(form:FormView, row: FormRow) {\n        this.form = form;\n        this.row = row;\n        if ((row as JSX.Element).type === undefined) {\n            let cc:CreateControl = (row as LabelFormRow).createControl;\n            if (cc === undefined) cc = form.createControl;\n            if (cc === undefined) cc = createControl;\n            this.control = cc(form, row);\n        }\n    }\n    abstract render(key:string):JSX.Element;\n    \n    isOk():boolean {\n        if (this.control === undefined) return true;\n        return this.control.isOk();\n    }\n\n    contains(fieldName:string):boolean {\n        let field = (this.row as FieldRow).field;\n        if (field !== undefined) return fieldName === field.name;\n        let group = (this.row as GroupRow).group;\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\n        return false;\n    }\n    get hasError():boolean {return this.control.hasError;}\n    get filled():boolean {return this.control.filled;}\n    clear() {\n        if (this.control !== undefined) this.control.clear();\n    }\n    clearErrors() {\n        if (this.control !== undefined) this.control.clearErrors();\n    }\n    readValues(values:any):any {\n        if (this.control !== undefined) this.control.readValues(values);\n    }\n    setError(fieldName:string, error:string) {\n        if (this.control !== undefined) this.control.setError(fieldName, error);\n    }\n    setInitValues(values:any) {\n        if (this.control !== undefined) this.control.setInitValues(values);\n    }\n}\n\nclass ElementRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\n    }\n    get hasError():boolean {return false;}\n    get filled():boolean {return false;}\n}\n\nclass BootStrapRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className='form-group row'>\n            <label className='col-sm-2 col-form-label'>\n                {(this.row as LabelFormRow).label}\n            </label>\n            {this.control.render()}\n        </div>;\n\n        //has-success is-valid\n    }\n}\n\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new BootStrapRowContainer(form, row);\n}\n\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new ElementRowContainer(form, row);\n}\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {nav, mobileHeaderStyle} from './nav';\n\nexport interface TitleBarProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>Promise<void>);\n}\nexport interface TitleBarState {\n    hasBack: boolean;\n}\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n    private navChangeHandler: ()=>void;\n    constructor(props) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.showLogout(this.logout);\n        /*\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\n                </div>\n            </div>\n        </Page>);\n        */\n    }\n    private logout = async () => {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            await logout(); \n        }\n        await nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || self != top;\n        let {right, center, logout} = this.props;\n        let back, pop, debugLogout;\n        if (logout !== undefined && self === top) {\n            if (typeof logout === 'boolean' && logout === true\n                || typeof logout === 'function')\n            {\n                let {user} = nav;\n                if (user !== undefined) {\n                    let {nick, name} = user;\n                    debugLogout = <div className=\"d-flex align-items-center\">\n                        <small className=\"text-light\">{nick || name}</small>\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\n                            role=\"button\"\n                            onClick={this.logoutClick}>\n                            <i className=\"fa fa-sign-out\" />\n                        </a>\n                    </div>;\n                }\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (self != top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView;\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\n        return (\n        <header style={mobileHeaderStyle}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>\n        );\n    }\n}\n","import React from 'react';\nimport { jsonStringify } from '../../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { List, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { TuidMain, Query, Entity } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {name, list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { Query } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from \"react\";\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Query } from \"../../entities\";\nimport { VQueryMain } from \"./vQueryMain\";\nimport { VQuerySelect } from \"./vQuerySelect\";\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId: string;\n    @observable private overSize: boolean = false;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;        \n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        let ret = await this.resUploader.upload();\n        if (ret === null) {\n            this.overSize = true;\n            setTimeout(() => this.overSize = false, 3000);\n            return;\n        }\n        this.resId = ret;\n        this.isChanged = (this.resId != this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        let overSize:any;\n        if (this.overSize === true) {\n            overSize = <div className=\"text-danger\">\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\n            </div>;\n        }\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>\n                    <div>上传图片：</div>\n                    <div className=\"my-3\">\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\n                    </div>\n                    <div>\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\n                    </div>\n                </div>\n                {overSize}\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"w-12c h-12c mr-4\"\n                        style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-100 h-100\" src={this.resId} />\n                    </div>\n                    <div>\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n\n/*\nexport function Loading() {\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\n        加载中...\n    </div>\n    </div>\n}\n*/\n\n\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    className?: string;\n    multiple?: boolean;\n    maxSize?: number;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let {maxSize} = this.props;\n        if (maxSize === undefined || maxSize <= 0) \n            maxSize = 100000000000;\n        else\n            maxSize = maxSize * 1024;\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            if (file.size > maxSize) return null;\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment} from 'tonva-tools';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { CUq, EntityType, UqUI } from './uq';\nimport { centerApi } from '../centerApi';\n\nexport interface RoleAppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\n    res?: any;\n}\n\nexport interface AppUI extends RoleAppUI {\n    appName: string; // 格式: owner/appName\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\n}\n\nexport class CApp extends Controller {\n    private appOwner:string;\n    private appName:string;\n    private cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    id: number;\n    appUnits:any[];\n\n    constructor(ui:AppUI) {\n        super(resLang(ui && ui.res));\n        let tonvaApp = ui.appName;\n        if (tonvaApp === undefined) {\n            throw 'appName like \"owner/app\" must be defined in UI';\n        }\n        let parts = tonvaApp.split('/');\n        if (parts.length !== 2) {\n            throw 'tonvaApp name must be / separated, owner/app';\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n        if (ui.uqs === undefined) ui.uqs = {};\n        this.ui = ui;\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    readonly caption: string; // = 'View Model 版的 Uq App';\n    cUqCollection: {[uq:string]: CUq} = {};\n\n    async startDebug() {\n        let appName = this.appOwner + '/' + this.appName;\n        let cApp = new CApp({appName: appName, uqs:{}} );\n        let keepNavBackButton = true;\n        await cApp.start(keepNavBackButton);    \n    }\n\n    protected async loadUqs(): Promise<string[]> {\n        let retErrors:string[] = [];\n        let unit = meInFrame.unit;\n        let app = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = app;\n        this.id = id;\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        let roleAppUI = await this.buildRoleAppUI();\n        for (let appUq of uqs) {\n            let {id:uqId, uqOwner, uqName, access} = appUq;\n            let uq = uqOwner + '/' + uqName;\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\n            this.cUqCollection[uq] = cUq;\n            promises.push(cUq.loadSchema());\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    //debugger;\n                    //nav.start();\n                    //return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n\n    private async buildRoleAppUI():Promise<RoleAppUI> {\n        if (!this.ui) return undefined;\n        let {hashParam} = nav;\n        if (!hashParam) return this.ui;\n        let {roles} = this.ui;\n        let ret:RoleAppUI = {} as any;\n        for (let i in this.ui) {\n            if (i === 'roles') continue;\n            ret[i] = _.cloneDeep(this.ui[i]);\n        }\n        let roleAppUI = roles && roles[hashParam];\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\n        _.merge(ret, roleAppUI);\n        return ret;\n    }\n\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\n        let retError = await cUq.loadSchema();\n        if (retError !== undefined) {\n            console.error(retError);\n            debugger;\n            return;\n        }\n        return cUq;\n    }\n\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(apiName:string):CUq {\n        return this.cUqCollection[apiName];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        try {\n            let {unit} = meInFrame;\n            if (isDevelopment === true) {\n                let app = await loadAppUqs(this.appOwner, this.appName);\n                let {id} = app;\n                this.id = id;\n                let {user} = nav;\n                if (user !== undefined && user.id > 0) {\n                    await this.loadAppUnits();\n                    switch (this.appUnits.length) {\n                        case 0:\n                            this.showUnsupport(unit);\n                            return false;\n                        case 1:\n                            let appUnit = this.appUnits[0].id;\n                            if (appUnit === undefined || appUnit < 0 || \n                                unit !== undefined && appUnit != unit)\n                            {\n                                this.showUnsupport(unit);\n                                return false;\n                            }\n                            meInFrame.unit = appUnit;\n                            break;\n                        default:\n                            if (unit>0 && this.appUnits.find(v => v.id===unit) !== undefined) {\n                                meInFrame.unit = unit;\n                                break;\n                            }\n                            nav.push(<this.selectUnitPage />)\n                            return false;\n                    }\n                }\n            }\n\n            let retErrors = await this.loadUqs();\n            if (retErrors !== undefined) {\n                this.openPage(<Page header=\"ERROR\">\n                    <div className=\"m-3\">\n                        <div>Load Uqs 发生错误：</div>\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\n                    </div>\n                </Page>);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            nav.push(<Page header=\"App start error!\">\n                <pre>\n                    {typeof err === 'string'? err : err.message}\n                </pre>\n            </Page>);\n            return false;\n        }\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n    async load() {\n        await this.beforeStart();\n    }\n\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport(unit:number) {\n        this.clearPrevPages();\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">登录用户: </div>\n                    <div className=\"col\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">App:</div>\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">小号:</div>\n                    <div className=\"col\">{unit || <small className=\"text-muted\">[无小号]</small>}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">\n                        <FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"text-muted\">无法运行可能原因：</div>\n                        <ul className=\"p-0\">\n                            <li>没有小号运行 {this.ui.appName}</li>\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\n                            <li>用户 <b>{userName}</b> 没有加入小号 unit={unit}</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </Page>)\n    }\n\n    private async showMainPage() {\n        // #tv-RwPBwMef-23-sheet-api-108\n        let exHash = getExHash();\n        if (exHash !== undefined) {\n            let parts = exHash.split('-');\n            if (parts.length > 3) {\n                let action = parts[3];\n                // sheet_debug 表示centerUrl是debug方式的\n                if (action === 'sheet' || action === 'sheet_debug') {\n                    let uqId = Number(parts[4]);\n                    let sheetTypeId = Number(parts[5]);\n                    let sheetId = Number(parts[6]);\n                    let cUq = this.getCUqFromId(uqId);\n                    if (cUq === undefined) {\n                        alert('unknown uqId: ' + uqId);\n                        return;\n                    }\n                    this.clearPrevPages();\n                    await cUq.navSheet(sheetTypeId, sheetId);\n                    return;\n                }\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.id === uqId) return cUq;\n        }\n        return;\n    }\n\n    private async loadAppUnits() {\n        let ret = await centerApi.userAppUnits(this.id);\n        this.appUnits = ret;\n        /*\n        if (ret.length === 1) {\n            meInFrame.unit = ret[0].id;\n        }*/\n    }\n\n    renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    onRowClick = async (item: any) => {\n        meInFrame.unit = item.id; // 25;\n        await this.start();\n    }\n\n    protected selectUnitPage = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nclass VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage() {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={async()=>{meInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n","export * from './rule';\nexport * from './field';\nexport * from './face';\nexport * from './rowContainer';\nexport * from './formView';\nexport * from './TonvaForm';\nexport {ControlBase} from './control';\n","import * as React from 'react';\nimport {FormEvent} from 'react';\nimport {computed} from 'mobx';\nimport {uid} from '../uid';\nimport {Rule} from './rule';\nimport {Field} from './field';\nimport {Face} from './face';\nimport {CreateControl, ButtonsControl} from './control';\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\n\nexport interface FieldView {\n    field: Field;\n    face?: Face;\n}\n\nexport interface LabeledRow {\n    label?: string;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    help?: JSX.Element;\n}\n\nexport interface FieldRow extends LabeledRow, FieldView {\n}\n\nexport interface GroupRow extends LabeledRow {\n    group: FieldView[];\n}\n\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\nexport type FormRow = LabelFormRow|JSX.Element;\n\nexport interface SubmitResult {\n    success: boolean;\n    message?: string\n    result?: any;\n}\n\nexport interface FormProps {\n    formRows: FormRow[];\n    //context?: any;              // form context，比如，可以是EntitiesUI\n    rules?: Rule | Rule[];\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n    otherButton?: string|JSX.Element;\n    onOther?: (values:any) => void;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    readOnly?: boolean;\n}\n\nexport class FormView {\n    uid:string;\n    private rows: RowContainer[] = [];\n    private buttonsRow: RowContainer;\n    props: FormProps;\n    createControl?: CreateControl;\n    constructor(props:FormProps) {\n        this.uid = uid();\n        this.props = props;\n        this.buildRows(props);\n        this.createControl = props.createControl;\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    @computed get hasError():boolean {\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\n        console.log(ret);\n        return this.rows.some(row => row.hasError);\n    }\n    @computed get nothing():boolean {\n        let ret = this.rows.every(row => !row.filled);\n        return ret;\n    }\n\n    readValues():any {\n        let values = {} as any;\n        for (let row of this.rows) {\n            row.readValues(values);\n        }\n        return values;\n    }\n\n    clear() {\n        for (let row of this.rows) {\n            row.clear();\n        }\n    }\n\n    clearErrors() {\n        for (let row of this.rows) {\n            row.clearErrors();\n        }\n    }\n\n    setError(fieldName:string, error:string) {\n        for (let row of this.rows) {\n            row.setError(fieldName, error);\n        }\n    }\n\n    setInitValues(initValues:any) {\n        if (initValues === undefined) return;\n        for (let row of this.rows) {\n            row.setInitValues(initValues);\n        }\n    }\n\n    private buildRows(props:FormProps) {\n        let {formRows, createRow} = props;\n        if (formRows !== undefined) {\n            for (let row of formRows) {\n                this.rows.push(this.buildRow(row, createRow));\n            }\n            if (this.props.readOnly !== true) {\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\n            }\n        }\n        else {\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\n        }\n    }\n\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\n        let createRow:CreateRow;\n        let type = (formRow as JSX.Element).type;\n        if (type !== undefined) {\n            createRow = elementCreateRow;\n        }\n        else {\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\n            if (createRow === undefined) {\n                createRow = formRowCreator;\n                if (createRow === undefined) createRow = bootstrapCreateRow;\n            }\n        }\n        let row = createRow(this, formRow);\n        return row;\n    }\n\n    private createButtons(form:FormView, row: FormRow) {\n        return new ButtonsControl(form);\n    }\n\n    private isOk():boolean {\n        let isOk = true;\n        for (let row of this.rows) {\n            if (!row.isOk()) isOk = false;\n        }\n        return isOk;\n    }\n\n    render():JSX.Element {\n        return <form onSubmit={this.onSubmit}>\n            {this.rows.map((row,index) => row.render(this.uid + index))}\n            {this.buttons()}\n        </form>;\n    }\n\n    buttons():JSX.Element {\n        if (this.buttonsRow === undefined) return;\n        return this.buttonsRow.render(this.uid + this.rows.length);\n    }\n    \n    async onSubmit(event:FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (!this.isOk()) return;\n        let values = this.readValues();\n        await this.props.onSubmit(values);\n    }\n}\n","import React from 'react';\nimport { FA } from \"tonva-react-form\";\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n/*\nexport interface EntityRes {\n    caption: string;\n    icon: JSX.Element;\n}\n*/\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from \"tonva-tools\";\nimport { CUq } from \"./uq\";\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\n\n//\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","export const consts = {\n    uqBasedata: \"bruce/scmbasedata\",\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\n}","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page } from 'tonva-tools';\nimport { List, Muted, LMR } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, user, preState, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VForm, FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { nav, Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {id, no, discription, date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, nav } from 'tonva-tools';\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {id, no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {Page} from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nexport interface State {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + ':' + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import { Sheet } from \"../../entities\";\nimport { SheetUI, CSheet } from \"./cSheet\";\nimport { VEntity } from \"../CVEntity\";\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheet } from \"./vSheet\";\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import React from 'react';\nimport { nav, Page } from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from \"mobx\";\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\nimport { Sheet, StateCount } from \"../../entities\";\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\nimport { VSheetMain } from \"./vMain\";\nimport { VSheetNew } from \"./vNew\";\nimport { VSheetEdit } from \"./vEdit\";\nimport { VSheetAction } from \"./vSheetAction\";\nimport { VSheetSchema } from \"./vSchema\";\nimport { VArchives } from \"./vArchives\";\nimport { VSheetList } from \"./vList\";\nimport { VArchived } from \"./vArchived\";\nimport { VSheetSaved } from \"./vSaved\";\nimport { VSheetProcessing } from \"./vSheetProcessing\";\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to, push} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport { TuidMain, Book, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Book } from \"../../entities\";\nimport { VBookMain } from \"./vBookMain\";\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from \"react\";\nimport { View } from \"tonva-tools\";\nimport { List, Muted } from \"tonva-react-form\";\nimport { Entity } from \"../../entities\";\nimport { CLink } from \"../link\";\nimport { CUq } from \"./cUq\";\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../CApp';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        this.uq = uq;\n        this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        let token = undefined;\n        let uqOwner:string, uqName:string;\n        let p = uq.split('/');\n        switch (p.length) {\n            case 1:\n                uqOwner = '$$$';\n                uqName = p[0];\n                break;\n            case 2:\n                uqOwner = p[0];\n                uqName = p[1];\n                break;\n            default:\n                console.log('uq must be uqOwner/uqName format');\n                return;\n        }\n\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        let uqApi:UqApi;\n        if (uq === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            uqApi = new UnitxApi(meInFrame.unit);\n        }\n        else {\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.entities = new Entities(this, uqApi, appId);\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    uq: string;\n    id: number;\n    res: any;\n    entities:Entities;\n    error: string;\n    private schemaLoaded:boolean = false;\n\n    protected async loadEntites() {\n        await this.entities.loadAccess();\n    }\n\n    async loadSchema():Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.loadEntites();\n            if (this.id === undefined) this.id = this.entities.uqId;\n\n            for (let i in this.ui) {\n                let g = this.ui[i];\n                if (g === undefined) continue;\n                let {caption, collection} = g;\n                if (collection === undefined) continue;\n                for (let j in collection) {\n                    if (this.entities[i](j) === undefined) {\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\n                    }\n                }\n            }\n            this.schemaLoaded = true;\n            return;\n        }\n        catch(err) {\n            console.error(err);\n            return this.error = err;\n            //debugger;\n            //return err.message;\n        }\n    }\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.entities.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\n    action(entityName:string) {return this.entities.action(entityName);}\n    query(entityName:string) {return this.entities.query(entityName);}\n    book(entityName:string) {return this.entities.book(entityName);}\n    map(entityName:string) {return this.entities.map(entityName);}\n    history(entityName:string) {return this.entities.history(entityName);}\n    pending(entityName:string) {return this.entities.pending(entityName);}\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        let tuid = this.entities.tuid(entityName);\n        if (tuid === undefined) return;\n        let {divs} = tuid;\n        if (divs === undefined) return;\n        return divs[divName];\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.entities.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.entities.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.entities.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.entities.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.entities.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.entities.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.entities.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.entities.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.entities.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.entities.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.entities.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.entities.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.entities.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.entities.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.entities.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui, res;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            let tUI = this.ui[typeName];\n            if (tUI !== undefined) {\n                ui = tUI[name];\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:TuidMain):CTuidMain {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:TuidMain):CTuidList {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.entities.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {owner} = tuid;\n        if (owner === undefined) {\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n            return (ui && ui.content) || PureJSONContent;\n        }\n        else {\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\n        }\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { tv } from '../../tools';\nimport { Map } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\nimport { PureJSONContent } from '../form/viewModel';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add:any, remove:any;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right:any;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content:any, border:any, valuesView:any;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = \"border-bottom\";\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)}\n                left={left}\n                right={right}\n            >\n                <div className=\"py-1\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from \"../CVEntity\";\nimport { MapUI, CMap } from \"./cMap\";\nimport { Map } from \"../../entities\";\nimport { Page } from \"tonva-tools\";\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\nimport { VMapMain } from \"./vMain\";\nimport { observable } from \"mobx\";\nimport { PureJSONContent } from '../form/viewModel';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuid = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children, box} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid, _ownerField} = keyField;\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\n        let callParam = param;\n        if (_ownerField !== undefined) {\n            callParam = param[_ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {name, type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\n        let label = cTuidMain.getLable(tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import * as React from 'react';\nimport { TuidMain, History, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { History } from \"../../entities\";\nimport { VHistoryMain } from \"./vHistoryMain\";\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","import * as React from 'react';\nimport { VPage, Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../entities';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Action } from \"../../entities\";\nimport { VActionMain } from \"./vActionMain\";\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","import * as React from 'react';\nimport { TuidMain, Pending, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Pending } from \"../../entities\";\nimport { VPendingMain } from \"./vPendingMain\";\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n}\n","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import {CenterApi} from '../net';\nimport {User, decodeUserToken} from '../user';\n//import { nav } from '../ui';\n\nexport class UserApi extends CenterApi {\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\n        //(params as any).device = nav.local.device.get();\n        let ret = await this.get('login', params);\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeUserToken(ret);\n            case 'object':\n                let token = ret.token;\n                let user = decodeUserToken(token);\n                let {nick, icon} = ret;\n                if (nick) user.nick = nick;\n                if (icon) user.icon = icon;\n                return user;\n        }\n        // !== undefined) return decodeToken(token);\n    }\n    async register(params: {\n        nick:string, \n        user:string, \n        pwd:string,\n        country:number, \n        mobile:number, \n        email:string,\n        verify:string,\n    }): Promise<any>\n    {\n        return await this.post('register', params);\n    }\n\n    async setVerify(account:string, type:'mobile'|'email') {\n        return await this.post('set-verify', {account:account, type:type});\n    }\n\n    async checkVerify(account:string, verify:string) {\n        return await this.post('check-verify', {account:account, verify:verify});\n    }\n\n    async isExists(account:string) {\n        return await this.get('is-exists', {account:account});\n    }\n\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\n        return await this.post('reset-password', {account:account, password, verify, type});\n    }\n    \n    async userSetProp(prop:string, value:any) {\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\n    }\n}\n\nconst userApi = new UserApi('tv/user/', undefined);\n\nexport default userApi;\n","\nconst zero = '00000000000000';\nexport function left0(num:number, fix:number) {\n    if (num === undefined) return '';\n    let r = num.toString();\n    let len = fix - r.length;\n    if (len <= 0) return r;\n    return zero.substr(0, len) + r;\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {User} from '../user';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { isDevelopment } from '../net';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp((this as any) as C)).open(param);\n    }\n\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\n        return (new view((this as any) as C)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any):Promise<void>;\n    async start(param?:any):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call(param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param);\n        });\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this as any)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Controller call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if (this.isFirst===true && len>this.firstSize ||\n            this.isFirst===false && len>this.pageSize)\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import {observable, computed} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport {FormView, FormProps} from './formView';\n\nexport function tonvaDebug() {\n    let a = 0;\n}\n\nexport interface TonvaFormProps extends FormProps {\n    className?: string;\n    initValues?: any;\n}\n\n@observer \nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\n    formView: FormView;\n    constructor(props:TonvaFormProps) {\n        super(props);\n        this.formView = new FormView(this.props);\n    }\n    componentWillMount() {\n        this.formView.setInitValues(this.props.initValues);\n    }\n    debug() {\n        let s = null;\n    }\n    render() {\n        let {className, children, initValues} = this.props;\n        return <div className={className}>\n            {\n                children === undefined? \n                    this.formView.render() : \n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\n            }\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Action {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: Action[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | string;\n}\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        let {date} = this.props;\n        if (!date) return null;\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\n        let now = new Date();\n        let tick = now.getTime() - d.getTime();\n        let nDate=now.getDate();\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\n        let hm = hour + ((minute<10?':0':':') + minute);\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\n        if (tick < 24*3600*1000) {\n            return _date!==nDate? \n                (tick < 0? '明天 ' : '昨天 ') + hm \n                : hm;\n        }\n        if (tick < 365*24*3600*1000) {\n            return month+'月'+_date+'日 ';\n        }\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Image } from 'tonva-tools';\n\nexport interface MediaProps {\n    icon: string;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp:any;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let cn = classNames(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport className from 'classnames';\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\n\nexport interface Step {\n    formRows: FormRow[];\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\n    ex?: any;                                   // 每一步额外的参数\n}\n\nexport interface MultiStepProps {\n    className?: string;\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    steps: {[name:string]: Step};\n    first: string;         // 第一步的名字\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n}\n\nexport interface StepView {\n    stepName: string;\n    step: Step;\n    props: FormProps;\n    //view: JSX.Element;\n}\nexport interface MultiStepState {\n    //num: number;\n    //step: Step;\n    //formView: FormView;\n    topView: StepView;\n    stepViews: StepView[];\n}\n\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\n    private values: any = {};\n    private stepViews: StepView[] = [];\n    private topView: StepView;\n    constructor(props) {\n        super(props);\n        this.state = {\n            topView: undefined,\n            stepViews: [],\n        }\n        this.onPrev = this.onPrev.bind(this);\n        this.onNext = this.onNext.bind(this);\n    }\n    \n    private setStep(stepName: string) {\n        let step = this.props.steps[stepName];\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\n        let otherButton, onOther;\n        if (this.stepViews.length > 0) {\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\n            onOther = this.onPrev;\n        }\n        let {header, footer} = this.props;\n        let btnContent = step.next === undefined?\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\n            {suffix: 'arrow-right', text: '下一步'}\n        let formProps = {\n            formRows: step.formRows,\n            submitButton: <ButtonConten {...btnContent} />,\n            onSubmit: this.onNext,\n            otherButton: otherButton,\n            onOther: onOther,\n        };\n        let num = this.stepViews.length + 1;\n        this.topView = {\n            stepName: stepName,\n            step: step,\n            props: formProps,\n        };\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    componentWillMount() {\n        this.setStep(this.props.first);\n    }\n    private onPrev(values:any) {\n        _.assign(this.values, values);\n        this.topView = this.stepViews.pop();\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    private onNext(values:any): Promise<SubmitResult|undefined> {\n        _.assign(this.values, values);\n        //let {num, step} = this.state;\n        let {next} = this.topView.step;\n        if (next === undefined) {\n            return this.props.onSubmit(this.values)\n        }\n        let nextStepName:string;\n        if (typeof next === 'string') {\n            nextStepName = next;\n        }\n        else {\n            nextStepName = next(this.values);\n        }\n        this.setStep(nextStepName);\n    }\n    render() {\n        let {className, header, footer} = this.props;\n        let {topView, stepViews} = this.state;\n        let {stepName, step} = topView;\n        let hidden = {visibility: 'hidden'};\n        let num = stepViews.length + 1;\n        return <div className={className}>\n            <div>\n                {header && header(step, num)}\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\n                {footer && footer(step, num)}\n            </div>\n        </div>;\n    }\n}\n\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\n    let {prefix, text, suffix} = props;\n    let pIcon, sIcon;\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\n}\n    \n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport abstract class Widget {\n    protected name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable protected errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    container = observer(():JSX.Element => {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any = this.label;\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.render());\n    })\n\n    protected get label():string {\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            else label = uiLabel || this.name;\n        }\n        return label;\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem, StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        this.internalOnKeyDown(evt);\n        if (evt.keyCode !== 13) return;\n        let {onEnter} = this.context.form.props;\n        if (onEnter === undefined) return;\n\n        this.changeValue(evt.currentTarget.value, true);\n        this.checkRules();\n        this.context.checkContextRules();\n\n        let ret = await onEnter(this.name, this.context);\n        if (ret !== undefined) {\n            this.context.setError(this.name, ret);\n        }\n    }\n\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n    }\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.removeErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleNum(res, min, max) :\n                new RuleInt(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || key>=48 && key<=57\n            || key>=96 && key<=105\n            || key===109 || key===189;\n    }\n    \n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n        let key = evt.keyCode;\n        event.returnValue = this.isValidKey(key);\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.removeErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline p-0');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        if (this.context.inNode === true) {\n            return <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n        }\n        else {\n            return <div className={cn}>\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\n            </div>;\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            this.context.checkRules()\n            if (this.context.hasError === true) {\n                return;\n            }\n        }\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, caption:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            caption = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = caption; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    protected get label():string {return null}\n\n    render() {\n        return <this.observerRender />\n    }\n}\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget as Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[name];\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        if (this.rules === undefined) return;\n        this.clearContextErrors();\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.removeErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) this.widgets[i].clearContextError();\n    }\n\n    checkRules() {\n        this.checkFieldRules();\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    removeErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    //get data() {return this.row.data;}\n    removeErrors() {\n        super.removeErrors();\n        this.parentContext.removeErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.removeErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.removeErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiImageItem } from '../../schema';\nimport { Image } from '../../image';\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class ImageWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiImageItem;\n    @observable private imageSrc: string;\n\n    protected init() {\n        super.init();\n        this.imageSrc = this.value;\n    }\n\n    protected onClick = async () => {\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\n        let ret = await edit.start();\n        if (ret !== null) {\n            this.setValue(ret);\n            this.imageSrc = ret;\n        }\n        await edit.end();\n    }\n\n    render() {\n        return <this.observerRender />;\n    }\n\n    private observerRender = observer(() => {\n        let cn = [\n            'bg-white p-1 d-flex justify-content-center',\n        ];\n        let onClick: any;\n        if (!this.readOnly && !this.disabled) {\n            cn.push('cursor-pointer');\n            onClick = this.onClick;\n        }\n        return <div className={classNames(cn)} onClick={onClick}>\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\n        </div>;\n    });\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\nimport { ImageWidget } from './imageWidget';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    image: {\n        dataTypes: ['string'],\n        widget: ImageWidget,\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {isRow, widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    return <widget.container />;\n    /*\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.container());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.container();\n        return widgetElement;\n    }\n    */\n}\n\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {};\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <textarea ref={(input) => this.input=input} \n            className={classNames(this.className, cn)}\n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow, inNode} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'form-radio-inline');\n        return <span className={cn}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n/*\n<div className=\"form-control d-flex border-0\"><input\nref={(input)=>this.input = input}\nclassName={classNames(this.className, 'align-self-center')}\ntype=\"checkbox\"\nstyle={{maxHeight:\"1.2em\"}}\ndefaultValue={this.defaultValue} \nonChange={this.onChange} />\n</div>\n*/","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    onEnter?: InputEnter;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    //private content: any;\n    //private formData: any;\n    private disposer: IReactionDisposer;\n    //@observable \n    readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, formData, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, res,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n\n        //this.formData = formData;\n        this.disposer = autorun(this.watch);\n        this.data = {};\n        // this.initRender();\n    }\n\n    private renderContent():any {\n        this.initData(this.props.formData);\n        let {children} = this.props;\n        if (children !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return <>{children}</>;\n        }\n\n        let Templet: TempletType;\n        if (this.uiSchema !== undefined) {\n            Templet = this.uiSchema.Templet;\n        }\n        if (Templet !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\n        }\n\n        this.formContext = new FormContext(this, false);\n        return <>{this.schema.map((v, index) => {\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n        })}</>;\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type !== 'arr') {\n            data[name] = formData[name];\n            return;\n        }\n\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\n        let {arr:arrItems} = arrItem;\n        if (arrItems === undefined) return;\n        let arrDict = arrItem.itemSchemas = {};\n        for (let item of arrItems) {\n            arrDict[item.name] = item;\n        }\n        let val:any[] = formData[name];\n        if (val === undefined) val = [];\n        else if (Array.isArray(val) === false) val = [val];\n        let arr:any[] = [];\n        for (let row of val) {\n            let {$isSelected, $isDeleted} = row;\n            let r = {\n                $source: row,\n                $isSelected: $isSelected,\n                $isDeleted: $isDeleted,\n            };\n            for (let item of arrItems) {\n                this.initDataItem(item, r, row);\n                /*\n                let {name:nm} = item;\n                let v = row[nm];\n                if (v === undefined) v = null;\n                r[nm] = v;\n                */\n            }\n            arr.push(r);\n        }\n        //data[name] = observable(arr);\n        data[name] = arr;\n        return;\n    }\n\n    private watch = () => {\n        let {formData} = this.props;\n        if (formData === undefined) return;\n        //this.initData(formData);\n        this.calcSelectOrDelete();\n    }\n    private calcSelectOrDelete() {\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        if (this.data === undefined) return;\n        let formArrVal = this.data[name];\n        if (formArrVal === undefined) return;\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        if (this.disposer !== undefined) this.disposer();\n    }\n\n    render() {\n        let content = this.renderContent();\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(content)}\n        </ContextContainer.Provider>;\n    }\n\n    async buttonClick(buttonName:string) {\n        this.formContext.checkRules()\n        if (this.formContext.hasError === true) return;\n\n        let {onButtonClick} = this.formContext.form.props;\n        if (onButtonClick === undefined) {\n            alert(`you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this.formContext);\n        if (ret === undefined) return;\n        this.formContext.setError(buttonName, ret);\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)}>\n            {content}\n        </form>;\n    }\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        //return <div className=\"row\">{content}</div>;\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class Field extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {Field} from './field';\nexport {Context, RowContext} from './context';\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as classNames from 'classnames';\nimport '../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from 'tonva-tools';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return; }\n    updateProps(nextProps:any) {}\n    abstract render(item:any, index:number):JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport { uid } from '../uid';\n\nexport class Static extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, render} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, computed, IObservableArray} from 'mobx';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../uid';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    private _items: SelectableItem[];\n    private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private buildItems() {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            return this._items = undefined;\n        }\n        if (items === null) {\n            return this._items = null;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        this._selectedItems = selectedItems;\n        if (selectedItems === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:false, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        if (compare === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:selectedItems.find(si => si === v) !== undefined, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        return this._items = itemsArray.map(v => {\n            return {\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \n                item:v, \n                labelId:uid()\n            };\n        });\n    }\n    @computed get items() {\n        //if (this._items === undefined) \n        this.buildItems();\n        return this._items;\n    }\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render(item:SelectableItem, index:number):JSX.Element {\n        let {className, key, render, onSelect} = this.list.props.item;\n        let {labelId, selected} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(item.item, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from 'tonva-tools';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport \"../css/va-list.css\";\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string;\n    };\n    compare?:(item:any, selectItem)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    constructor(props:ListProps) {\n        super(props);\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        this.listBase.updateProps(nextProps);\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\n        if (before === undefined) before = 'before';\n        if (loading === undefined) loading = 'loading';\n        if (none === undefined) none = 'none';        \n        //this.listBase.selectedItems = selectedItems;\n        let {isPaged, items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as className from 'classnames';\nimport {ListView} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"col-sm-12\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className=\"col-sm-2 col-form-label\">\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop as any;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = label===undefined? 'col-sm-12':'col-sm-10';\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n}\n\nexport class PropContainer extends PropRow {\n    render(key:string): JSX.Element {\n        return <div className=\"bg-white\">\n            <label className=\"col-sm-2 col-form-label\">\n                AAABBBCCC\n            </label>\n            <div className=\"col-sm-10\">\n                <div className=\"form-control-plaintext\">\n                    dsfasfa sdf asdf a\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import {ListViewProps} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {PropRow, PropBorder, PropGap, PropContainer,\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: ()=>void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props:any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps:PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps:PropGridProps, props:Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap:boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\nimport {PropContainer, PropBorder, PropGap} from './row';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n/*\n    private propView: PropView;\n    constructor(props:PropGridProps) {\n        super(props);\n    }\n*/\n/*\n    componentWillMount() {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(this.props.values);\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(nextProps.values);\n        this.forceUpdate();\n    }\n*/\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.newValue)}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            if (i>0) elItems.push(this.sep);\n            elItems.push(this.renderRow(schema[i]));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\n        let {name, type} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string = (uiItem && uiItem.label) || name;\n        let value:any = this.props.data[name];\n        switch (type) {\n            default:\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\n                break;\n            case 'image':\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                break;\n        }\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"w-6c\">{label}</div>\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\n        </div>;\n    }\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick} = this.props;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue != value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    else {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","export * from './edit';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {IObservableValue, IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport '../css/va-row.css';\n\nexport interface ListItem {\n    key?: string|number;\n    date?: Date;\n    icon?: string | JSX.Element;\n    main?: string;\n    vice?: string;\n    middle?: string | JSX.Element;\n    midSize?: number;\n    right?: string | JSX.Element;\n    onClick?: () => void;\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\n}\n\nexport interface ListRowProps extends ListItem {\n    //onClick: () => void;\n}\n\nexport interface ListRowState {\n    pressed: boolean;\n}\n\n@observer\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: false,\n        }\n    }\n    render() {\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\n        let header, isIcon:boolean, noteNum;\n        if (unread !== undefined) {\n            let uv:number;\n            if (typeof unread === 'number') uv = unread;\n            else uv = unread.get();\n                if (uv > 0)\n                noteNum = <b>{uv}</b>;\n            else if (uv < 0)\n                noteNum = <b className='dot' />;\n        }\n        switch (typeof icon) {\n            case 'object':\n                header = <header>{icon}{noteNum}</header>; \n                isIcon= false;\n                break;\n            case 'string': \n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\n                isIcon= true; \n                break;\n        }\n        let mid;\n        if (middle !== undefined) {\n            switch (typeof middle) {\n                case 'string':\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\n                    break;\n                default:\n                    mid = middle;\n                    break;\n            }\n        }\n        let footer;\n        if (right !== undefined) {\n            if (typeof right === 'string')\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\n            else\n                footer = <footer>{right}</footer>;\n        }\n        let viceSpan;\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\n        return (\n        <li className={cn} onClick={onClick}>\n            {header}\n            <div>\n                <div>{main}</div>\n                {viceSpan}\n            </div>\n            {mid}\n            {footer}\n        </li>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {ListItem, ListRow} from './listRow';\n\nexport interface ListViewProps {\n    className?: string;\n    items?: any[];\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\n    ex?: any;\n    header?: string|JSX.Element;\n    beforeLoad?: string|JSX.Element;\n    none?: string|JSX.Element;\n    footer?: string|JSX.Element;\n    itemClick?: (item:any)=>void;\n    converter?: (item:any)=>ListItem;\n}\n\n@observer\nexport class ListView extends React.Component<ListViewProps, null> {\n    render() {\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\n        let cn = classNames(className, 'va-list');\n        let content, elHeader;\n        if (items === undefined)\n            content = beforeLoad === null? null : <li className='empty'>\n                {beforeLoad || '...'}\n            </li>;\n        else if (items.length === 0) {\n            content = (\n            <li className='empty'>\n                {\n                    none || '[none]'\n                }\n            </li>);\n        }\n        else if (renderRow !== undefined) {\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\n        }\n        else {\n            content = items.map((item, index) => {\n                let onClick = item.onClick;\n                if (onClick === undefined && itemClick !== undefined) \n                    onClick = ()=>itemClick(item);\n                let listItem:ListItem;\n                if (converter !== undefined) {\n                    listItem = converter(item);\n                    if (listItem === undefined) return null;\n                }\n                else {\n                    listItem = {\n                        ...item\n                    }\n                }\n                if (listItem.key === undefined) listItem.key = listItem.main;\n                return <ListRow onClick={onClick} {...listItem} />;\n            });\n        }\n        if (header !== undefined) {\n            if (typeof header === 'string') {\n                elHeader = <div className='va-list-header'>{header}</div>;\n            }\n            else {\n                elHeader = header;\n            }\n        }\n\n        return (\n        <div className={cn}>\n            {elHeader}\n            <ul>\n                {content}\n            </ul>\n            {footer}\n        </div>\n        )\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\nimport userApi from './userApi';\n\nexport class EditMeInfo extends React.Component {\n    private schema:ItemSchema[] = [\n        {name:'nick', type:'string'} as StringSchema,\n        {name:'icon', type:'image'} as ImageSchema\n    ];\n    private uiSchema:UiSchema = {\n        items: {\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\n            icon: {widget:'image', label:'头像'} as UiImageItem,\n        }\n    }\n    @observable private data:any;\n\n    constructor(props:any) {\n        super(props);\n        let {nick, icon} = nav.user;\n        this.data = {\n            nick: nick,\n            icon: icon,\n        }\n    }\n\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\n        let {name} = itemSchema;\n        await userApi.userSetProp(name, newValue);\n        this.data[name] = newValue;\n        nav.user[name] = newValue;\n        nav.saveLocalUser();\n    }\n\n    render() {\n        return <Page header=\"个人信息\">\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\n                data={this.data}\n                onItemChanged={this.onItemChanged} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n\n    private _content: JSX.Element;\n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[] = [];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        switch (size) {\n            default:\n            case 'md': this.size = '3.2rem'; break;\n            case 'sm': this.size = '4rem'; break;\n            case 'lg': this.size = '2.5rem'; break;\n        }\n        this.tabs.push(...tabs.map(v => {\n                let tab = new Tab();\n                tab.name = v.name;\n                tab.selected = false;\n                tab.caption = v.caption;\n                tab.contentBuilder = v.content;\n                tab.notify = v.notify;\n                return tab;\n            }\n        ));\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    private tabClick = (tab:Tab) => {\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    showTab(tabName: string) {\n        let tab = this.tabs.find(v => v.name === tabName);\n        if (tab === undefined) return;\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        return <div className=\"tab\">\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\n                {this.tabs.map((v,index) => {\n                    let style:React.CSSProperties={\n                        display: v.selected===true? undefined : 'none'};\n                    return <div key={index} style={style}>{v.content}</div>;\n                })}\n            </div>\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\n                {this.tabs.map((v,index) => {\n                    let {selected, caption, notify} = v;\n                    let notifyCircle:any;\n                    if (notify !== undefined) {\n                        let num = notify.get();\n                        if (num !== undefined) {\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                        }\n                    }\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                        <div className=\"align-self-center\">\n                            {notifyCircle}\n                            {caption(selected)}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport {FetchError} from '../fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","import {User, Guest, Unit} from './user';\n\nexport interface ClearableData {\n    clear(): void;\n}\n\nexport class Data<T> implements ClearableData {\n    private name: string;\n    private value?: T;\n    constructor(name: string) {this.name = name; }\n    get(): T {\n        if (this.value !== undefined) return this.value;\n        let v = localStorage.getItem(this.name);\n        return this.value = v === null ? undefined : JSON.parse(v); \n    }\n    set(value: T) {\n        if (!value) { this.clear(); return; }\n        this.value = value;\n        localStorage.setItem(this.name, JSON.stringify(value));\n    }\n    clear() {\n        this.value = undefined;\n        localStorage.removeItem(this.name);\n    }\n}\n\nexport class LocalData {\n    user = new Data<User>('user');\n    guest = new Data<Guest>('guest');\n    unit = new Data<Unit>('unit');\n    homeTabCur = new Data<number>('homeTabCur');\n\n    logoutClear() {\n        [\n            this.user,\n            this.unit,\n            this.homeTabCur\n        ].map(d => d.clear());\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from 'tonva-tools';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva-tools';\nimport { CSCMApp } from 'CSCMApp';\nimport { observable } from 'mobx';\nimport { meTab } from '../me';\n\nexport const store = {\n    //homeCount: observable.box<number>(-1),\n    //cartCount: observable.box<number>(101),\n};\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CSCMApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { View, nav } from 'tonva-tools';\nimport { LMR, FA, SearchBox } from 'tonva-react-form';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CHome } from './CHome';\nimport { SearchBox } from 'tonva-react-form';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","import * as React from 'react';\nimport { VPage, Page, View } from 'tonva-tools';\nimport { observer } from 'mobx-react';\nimport { CHome } from './CHome';\nimport { observable } from 'mobx';\n\nconst LIGUOSHENG = 5;\n\ninterface CatItem {\n    title: string;\n    sub: string[];\n    img: string;\n}\n\ninterface Cat {\n    caption: string;\n    items?: CatItem[];\n}\n\nconst catItemStyle:React.CSSProperties = {\n    width:'12rem', \n    //height: '6rem', \n    overflow: 'hidden', \n};\nconst subStyle:React.CSSProperties = {\n    fontSize:'0.75rem',\n    overflow: 'hidden', \n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n};\nconst imgStyle:React.CSSProperties = {\n    //float:'left', clear:'both', \n    height:'1.5rem', width:'1.5rem', opacity:0.1, \n    marginRight: '0.5rem',\n};\n\nexport class VHome extends View<CHome> {\n\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private renderSection = (item: any, index: number) => {\n        return <section>\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\n            <p>{item.content}</p>\n        </section>\n    }\n\n    render(param: any): JSX.Element {\n        return <this.content />\n    }\n\n    private page = observer(() => {\n        let { openMetaView } = this.controller;\n        let viewMetaButton = <></>;\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n        }\n\n        return <Page header={false} footer={viewMetaButton}>\n            <this.content />\n        </Page>;\n    })\n\n    private content = observer(() => {\n        let siteHeader = this.controller.renderSiteHeader();\n        return <>\n            {siteHeader}\n            {this.controller.renderCategoryRootList()}\n        </>\n    });\n}","import * as React from 'react';\nimport { TuidMain } from 'tonva-react-uq';\nimport { VSiteHeader } from './VSiteHeader';\nimport { CSCMApp } from '../CSCMApp';\nimport { PageItems, Controller } from 'tonva-tools';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\n\nclass HomeSections extends PageItems<any> {\n\n    private sectionTuid: TuidMain;\n\n    constructor(sectionTuid: TuidMain) {\n        super();\n        this.firstSize = this.pageSize = 13;\n        this.sectionTuid = sectionTuid;\n    }\n\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n        if (pageStart === undefined) pageStart = 0;\n        let ret = await this.sectionTuid.search(\"\", pageStart, pageSize);\n        return ret;\n    }\n\n    protected setPageStart(item: any): any {\n        if (item === undefined) return 0;\n        return item.id;\n    }\n}\n\nexport class CHome extends Controller {\n\n    cApp: CSCMApp;\n    homeSections: HomeSections;\n    sectionTuid: TuidMain;\n\n    constructor(cApp: CSCMApp, res: any) {\n        super(res);\n\n        this.cApp = cApp;\n    }\n\n    async internalStart(param: any) {\n\n        let { cFunctionCategory } = this.cApp;\n        await cFunctionCategory.start();\n        this.openVPage(VHome);\n    }\n\n    renderSiteHeader = () => {\n        return this.renderView(VSiteHeader);\n    }\n\n    renderSearchHeader = (size?:string) => {\n        return this.renderView(VSearchHeader, size);\n    }\n\n    renderCategoryRootList = () => {\n        let { cFunctionCategory } = this.cApp;\n        return cFunctionCategory.renderRootList();\n    }\n\n    renderHome = () => {\n        return this.renderView(VHome);\n    }\n\n    openMetaView = () => {\n        this.cApp.startDebug();\n    }\n\n    tab = () => <this.renderHome />;\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { consts } from '../home/consts';\nimport { FA } from 'tonva-react-form';\n\nconst imgStyle: React.CSSProperties = {\n  height: '1.5rem', width: '1.5rem',\n  marginLeft: '0.1rem',\n  marginRight: '0.3rem'\n}\n\nexport const titleTitle: React.CSSProperties = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport const subStyle: React.CSSProperties = {\n  fontSize: '0.75rem',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport class VRootCategory extends View<CFunctionCategory> {\n  private categoryClick = async (categoryWapper: any, parent: any) => {\n    await this.controller.openMainPage(categoryWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children === undefined ? '' : children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let {name, children} = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"py-2 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }} >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-circle-right\" className=\"text-info\" />\n            &nbsp; {name}\n          </span>\n        </div>\n        {children === undefined ? '' : renderThirdCategory(children)}\n      </div>\n    </div>;\n  }\n\n  render(param: any): JSX.Element {\n    let { categories } = this.controller;\n    return <>{categories.map(v => this.renderRootCategory(v, undefined))}</>;\n  }\n}\n\nexport function renderThirdCategory(items: any) {\n  return <div className=\"py-1 px-1 text-muted small\" style={subStyle}>\n      {items.length === 0 ? <>&nbsp;</> : items.map(v => v.name).join(' / ')}\n  </div>\n}","import * as React from 'react';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { VPage, Page } from 'tonva-tools';\nimport { List, FA } from 'tonva-react-form';\nimport { tv } from 'tonva-react-uq';\nimport { titleTitle, subStyle } from './VRootCategory';\n\nexport class VCategory extends VPage<CFunctionCategory> {\n\n  async open(categoryWaper: any) {\n    this.openPage(this.page, categoryWaper);\n  }\n\n  private renderChild = (childWapper: any) => {\n    return <div className=\"py-2\"><FA name=\"hand-o-right mr-2\"></FA>{childWapper.name}</div>\n  }\n\n  private categoryClick = async (childWapper: any, parent: any) => {\n    await this.controller.openMainPage(childWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"pt-1 pb-1 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\n      >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-right\" className=\"text-info small\" />\n            &nbsp; {name}\n          </span>\n        </div>\n      </div>\n    </div>;\n    // <img src={consts.appIcon} alt=\"structure\" style={imgStyle} />\n  }\n\n  private page = (categoryWaper: any) => {\n\n    let { cHome } = this.controller.cApp;\n    let header = cHome.renderSearchHeader();\n\n    let { categoryWaper: item, parent } = categoryWaper;\n    return <Page header={header} >\n      {this.renderRootCategory(item, parent)}\n    </Page>\n  }\n}","export const funcs = [\r\n  {\r\n    name: \"基础信息\",\r\n    id: 1,\r\n    children: [\r\n      { name:\"商品信息\",\r\n        id: 101,\r\n        pid: 1,\r\n        page: \"productTab\" }, \r\n      { name: \"供应商信息\",\r\n        id: 102,\r\n        pid: 1,\r\n        page: \"supplierTab\" },\r\n      { name: \"客户信息\",\r\n        id: 103,\r\n        pid: 1 },\r\n      { name: \"部门信息\",\r\n        id: 104,\r\n        pid: 1 },\r\n      { name: \"职员信息\",\r\n        id: 105,\r\n        pid: 1 },\r\n      { name: \"物流中心（自建、委托）\",\r\n        id: 106,\r\n        pid: 1 },\r\n      { name: \"库区信息（自建）\",\r\n        id: 107,\r\n        pid: 1 },\r\n      { name: \"货位信息（自建）\",\r\n        id: 108,\r\n        pid: 1 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购管理\",\r\n    id: 2,\r\n    children: [\r\n      { name:\"采购订单\",\r\n        id: 201,\r\n        pid: 2 }, \r\n      { name: \"采购收货（自建）\",\r\n        id: 202,\r\n        pid: 2 }, \r\n      { name: \"采购验收（自建）\",\r\n        id: 203,\r\n        pid: 2 }, \r\n      { name: \"采购入库（自建）\",\r\n        id: 204,\r\n        pid: 2 }, \r\n      { name: \"采购记账\",\r\n        id: 205,\r\n        pid: 2 }, \r\n      { name: \"采购退货\",\r\n        id: 206,\r\n        pid: 2 }, \r\n      { name: \"采退出库（自建）\",\r\n        id: 207,\r\n        pid: 2 }, \r\n      { name: \"采退复核（自建）\",\r\n        id: 208,\r\n        pid: 2 }, \r\n      { name: \"采退记账\",\r\n        id: 209,\r\n        pid: 2 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"采购结算管理\",\r\n    id: 3,\r\n    children: [\r\n      { name: \"采购发票\",\r\n        id: 301,\r\n        pid: 3 }, \r\n      { name: \"采购组票\",\r\n        id: 302,\r\n        pid: 3 }, \r\n      { name: \"采购结算\",\r\n        id: 303,\r\n        pid: 3 }, \r\n      { name: \"采价调整\",\r\n        id: 304,\r\n        pid: 3 }, \r\n      { name: \"采购冲差\",\r\n        id: 305,\r\n        pid: 3 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售管理\",\r\n    id: 4,\r\n    children: [\r\n      { name:\"销售订单\",\r\n        id: 401,\r\n        pid: 4 }, \r\n      { name: \"销售出库（自建）\",\r\n        id: 402,\r\n        pid: 4 }, \r\n      { name: \"出库复核（自建）\",\r\n        id: 403,\r\n        pid: 4 }, \r\n      { name: \"销售记账（自建、委托）\",\r\n        id: 404,\r\n        pid: 4 }, \r\n      { name: \"销售退货\",\r\n        id: 405,\r\n        pid: 4 }, \r\n      { name: \"销售退货验收（自建）\",\r\n        id: 406,\r\n        pid: 4 }, \r\n      { name: \"销售退货入库（自建）\",\r\n        id: 407,\r\n        pid: 4 }, \r\n      { name: \"销售退货记账（自建、委托）\",\r\n        id: 408,\r\n        pid: 4 }\r\n    ]\r\n  },\r\n  {\r\n    name: \"销售结算管理\",\r\n    id: 5,\r\n    children: [\r\n      { name:\"销售换票\",\r\n        id: 501,\r\n        pid: 5 }, \r\n      { name: \"销售结算\",\r\n        id: 502,\r\n        pid: 5 }, \r\n      { name: \"销价调整\",\r\n        id: 503,\r\n        pid: 5 }, \r\n      { name: \"销售冲差\",\r\n        id: 504,\r\n        pid: 5 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"期初管理\",\r\n    id: 6,\r\n    children: [\r\n      { name:\"商品库存期初\",\r\n        id: 601,\r\n        pid: 6 }, \r\n      { name: \"供应商期初\",\r\n        id: 602,\r\n        pid: 6 }, \r\n      { name: \"客商期初\",\r\n        id: 603,\r\n        pid: 6 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"价格管理\",\r\n    id: 7,\r\n    children: [\r\n      { name:\"商品定价\",\r\n        id: 701,\r\n        pid: 7 }, \r\n      { name: \"客商定价\",\r\n        id: 702,\r\n        pid: 7 }, \r\n    ]\r\n  },\r\n  {\r\n    name: \"查询报表\",\r\n    id: 8,\r\n    children: [\r\n      { name: \"库存相关\",\r\n        id: 801,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"库存查询\",\r\n            id: 80101,\r\n            pid: 801 },\r\n          { name: \"进销存查询\",\r\n            id: 80102,\r\n            pid: 801 },\r\n        ]\r\n      }, \r\n      { name: \"销售相关\",\r\n        id: 802,\r\n        pid: 8, \r\n        children: [\r\n          { name: \"客商销售汇总查询\",\r\n            id: 80201,\r\n            pid: 802 },\r\n          { name: \"客商销售明细查询\",\r\n            id: 80202,\r\n            pid: 802 }\r\n        ]\r\n      }, \r\n      { name: \"采购相关\",\r\n        id: 803,\r\n        pid: 8,\r\n        children: []\r\n      }, \r\n      { name: \"应收应付相关\",\r\n        id: 804,\r\n        pid: 8,\r\n        children: [\r\n          { name: \"客商应收账款汇总查询\",\r\n            id: 80401,\r\n            pid: 804 },\r\n          { name: \"客商应收账款明细查询\",\r\n            id: 80402,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款汇总查询\",\r\n            id: 80403,\r\n            pid: 804 },\r\n          { name: \"供应商应付账款明细查询\",\r\n            id: 80404,\r\n            pid: 804 }\r\n        ]\r\n      }, \r\n    ]\r\n  }\r\n]\r\n","import React from 'react';\r\nimport { nav, VPage, Page, meInFrame, Controller } from 'tonva-tools';\r\nimport {AppUI, CApp, VTuidEdit, VTuidMain, CLink} from 'tonva-react-uq';\r\nimport { FA } from 'tonva-react-form';\r\nimport {CSCMApp} from 'CSCMApp'\r\nimport { consts } from 'home/consts';\r\nimport uui from \"ui\";\r\n\r\nexport class TestPage extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    public appPage = () => {\r\n        let {cUqArr: cUsqArr} = this.controller;\r\n        let content;\r\n        if (cUsqArr.length === 0) {\r\n            content = <div className=\"p-3 text-info\">\r\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\r\n            </div>;\r\n        }\r\n        else {\r\n            //content = cUsqArr.map((v,i) => \r\n            //<div key={i}>{v.render()}</div>);\r\n\r\n            let cuq = this.controller.getCUq(consts.uqBasedata);\r\n            let {tuidArr} = cuq.entities;\r\n            let mid = cuq.tuid(\"manufactor\");\r\n            let tuidLinks = new CLink(cuq.cTuidMain(mid));\r\n    \r\n            content = tuidLinks.render();\r\n        }\r\n        return <Page header={'商品信息'}\r\n          logout={async ()=>{meInFrame.unit = undefined}}>\r\n            <div className=\"p-3\">自定义程序界面。</div>\r\n            {content}\r\n        </Page>;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { nav, VPage, Page, meInFrame, Controller } from 'tonva-tools';\r\nimport {AppUI, CApp, VTuidEdit, VTuidMain, CLink} from 'tonva-react-uq';\r\nimport { FA } from 'tonva-react-form';\r\nimport {CSCMApp} from 'CSCMApp'\r\nimport { consts } from 'home/consts';\r\nimport uui from \"ui\";\r\n\r\nexport class TestPage2 extends VPage<CApp> {\r\n    async open(param?:any) {\r\n        this.openPage(this.appPage);\r\n    }\r\n\r\n    public appPage = () => {\r\n        let {cUqArr: cUsqArr} = this.controller;\r\n        let content;\r\n        if (cUsqArr.length === 0) {\r\n            content = <div className=\"p-3 text-info\">\r\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\r\n            </div>;\r\n        }\r\n        else {\r\n            content = cUsqArr.map((v,i) => \r\n            <div key={i}>{v.render()}</div>);\r\n        }\r\n        return <Page header={'供应商信息'}\r\n          logout={async ()=>{meInFrame.unit = undefined}}>\r\n            <div className=\"p-3\">-------</div>\r\n            {content}\r\n        </Page>;\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { CSCMApp } from 'CSCMApp';\r\nimport { nav, Page, Loading, Controller } from 'tonva-tools';\r\nimport {TestPage} from 'pages/testpage'\r\nimport {TestPage2} from 'pages/testpage2'\r\n\r\nexport const findPage = (name) => {\r\n  if (name === \"productTab\") {\r\n    return Loadable({\r\n      loader: ()=>import('./product/tab'),\r\n      loading: Loading\r\n    });\r\n  }\r\n  else if (name === \"supplierTab\") {\r\n    \r\n    return Loadable({\r\n      loader: ()=>import('./supplier/tab'),\r\n      loading: Loading\r\n    });\r\n  }\r\n}\r\n\r\nexport const navToPage = (name : string, cApp : CSCMApp) => {\r\n  if (name === \"productTab\") {\r\n    cApp.showOneVPage(TestPage, \"商品信息\");\r\n  }\r\n  else if (name === \"supplierTab\")\r\n  {\r\n    cApp.showOneVPage(TestPage2, \"供应商信息\")\r\n  }\r\n}","import * as React from 'react';\nimport { Query } from 'tonva-react-uq';\nimport { observable } from 'mobx';\nimport { VRootCategory } from './VRootCategory';\nimport { VCategory } from './VCategory';\nimport { CSCMApp } from 'CSCMApp';\nimport { nav, Page, Loading, Controller } from 'tonva-tools';\nimport Loadable from 'react-loadable';\nimport { funcs } from './funcCategories';\nimport { findPage, navToPage } from 'pages'\n\nexport class CFunctionCategory extends Controller {\n\n  cApp: CSCMApp;\n  // categories: any[];\n  @observable categories: any[] = [];\n\n  constructor(cApp: CSCMApp, res: any) {\n    super(res);\n\n    this.cApp = cApp;\n  }\n\n  async internalStart(param: any) {\n    this.categories = funcs;\n  }\n\n  renderRootList = () => {\n    return this.renderView(VRootCategory);\n  };\n\n  async openMainPage(categoryWaper: any, parent: any) {\n    if (categoryWaper === undefined)\n      return;\n    let { children, page, name } = categoryWaper;\n    if (children === undefined || children.length == 0) {\n      \n      if (page !== undefined) {\n        // let LoadableComponent = findPage(page);\n        // if (LoadableComponent !== undefined) {\n        //   nav.push(<Page header={name}><LoadableComponent /></Page>);\n        // }\n        navToPage(page, this.cApp);\n      }\n    }\n    else {\n      this.openVPage(VCategory, { categoryWaper, parent });\n    }\n  }\n}","import * as React from 'react';\nimport { TuidUI, tv } from 'tonva-react-uq';\n\nexport const productUI: TuidUI = {\n    content: (values: any) => {\n        let product = values;\n        let { brand, description, CAS, purity, molecularFomula, molecularWeight, origin } = product;\n        return <div className=\"row d-flex\">\n            <div className=\"col-12\">\n                <div className=\"row py-2\">\n                    <div className=\"col-12\"><strong>{description}</strong></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <img src=\"favicon.ico\" alt=\"structure\" />\n                    </div>\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {item('CAS', CAS)}\n                            {item('纯度', purity)}\n                            {item('分子式', molecularFomula)}\n                            {item('分子量', molecularWeight)}\n                            {item('产品编号', origin)}\n                            {tv(brand, (values: any) => <>{item(\"品牌\", values.name)}</>)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    },\n    divs: {\n        packx: {\n            content: (values: any) => {\n                let { radiox, radioy, unit } = values;\n                if (radioy === 0) return <>{radiox} {unit}</>;\n                if (radiox !== 1) return <>{radiox} &#2df; {radiox}{unit}</>;\n                return <>{radioy}{unit}</>;\n            }\n        }\n    }\n}\n\nfunction item(caption: string, value: any) {\n    if (value === null || value === undefined) return null;\n    return <>\n        <div className=\"col-4 text-muted pr-0\">{caption}:</div>\n        <div className=\"col-8\">{value}</div>\n    </>;\n}\n","import { UqUI, Tuid } from \"tonva-react-uq\";\nimport tuid from './tuid';\n\nconst uqUI: UqUI = {\n    tuid: tuid,\n}\n\nexport default uqUI;\n","import { productUI } from 'ui/common';\nimport { productCategoryUI } from './productCategory';\n\nexport default {\n    product: productUI,\n    productx: productUI,\n    productCategory: productCategoryUI,\n}\n","import * as React from 'react';\n\nexport const productCategoryUI = {\n\n    content: (values: any) => {\n        let { children } = values;\n        return <>\n            aaa\n        </>\n    }\n}","import * as React from 'react';\nimport { Muted } from 'tonva-react-form';\nimport { TuidUI } from 'tonva-react-uq';\n\nconst organization:TuidUI = {\n    divs: {\n        post: {\n            content: (values) => {\n                let {id, title} = values;\n                return <>{title}</>\n            }\n        }\n    }\n};\n\nexport default {\n    user: {\n        content: (values) => {\n            let {id, name, nick, assigned} = values;\n            if (assigned !== undefined) {\n                return <>{assigned} - <Muted>{name}</Muted></>;\n            }\n            if (nick != undefined) {\n                return <>{nick} - <Muted>{name}</Muted></>;\n            }\n            if (name !== undefined) return name;\n            return 'id ' + id + ' ...';\n        }\n    },\n    section: {\n        content: (values) => {\n            let {id, name} = values;\n            return <>{name}</>;\n        }\n    },\n    organization: organization,\n}\n","import * as React from 'react';\nimport { Muted } from 'tonva-react-form';\nimport { left0 } from 'tonva-tools';\n//import { dictionary as x } from '../../res';\nimport { VMapMain, MapUI, Field, CMap }  from 'tonva-react-uq'; \n\nclass CMapTeamPerson extends CMap {\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        switch (keyField.name) {\n            default: return await super.searchOnKey(keyField, param);\n            case 'post': return await this.searchOnPost(param);                \n        }\n    }\n\n    private async searchOnPost(param: any):Promise<number> {\n        let querySelect = this.cQuerySelect('teamPosts');\n        let val = await querySelect.call(param);\n        return val['post'].id;\n    }\n}\n\nclass VMapTeamPerson extends VMapMain {\n}\n\nconst ui:MapUI = {\n    CMap: CMapTeamPerson,\n    //label: '部门员工对照表',\n    //main: VMapTeamPerson,\n    keys: [\n        {\n            content: ({name, id}:any, x) => <><Muted>{x.team}</Muted> {name}</>,\n            none: (x)=>x.noStaff,\n        },\n        {\n            content: ({name, id}:any, x) => <><Muted>{x.staff}</Muted> {name} &nbsp; <Muted>{x.no} {left0(id, 4)}</Muted></>,\n            none: (x)=>x.noPost,\n        },\n        {\n            content: ({x, title, id}:any) => <><Muted>{x.post}</Muted> {title}</>,\n            none: undefined,\n        },\n    ]\n}\n\nexport default ui;\n","import teamPerson from './teamPerson';\n\nexport default {\n    teamPerson: teamPerson,\n};\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { FA } from \"tonva-react-form\";\nimport { Page } from \"tonva-tools\";\nimport { CQuery, VQueryMain } from \"tonva-react-uq\";\nimport { tv } from 'tonva-react-uq';\n\nexport class CGetMessage extends CQuery {\n    protected get VQueryMain() {return VMain}\n}\n\nexport class VMain extends VQueryMain {\n    protected queryResult = observer((result:any) => {\n        let ret0 = result.ret[0];\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            重载的CGetMessage <br/>\n            {tv(ret0.fromUser)/*ret0.fromUser.content()*/}\n            <pre>{JSON.stringify(ret0, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import React from 'react';\nimport { QueryUI, tv } from \"tonva-react-uq\";\nimport { observer } from 'mobx-react';\n\nconst ui:QueryUI = {\n    row: observer((values:any) => <div className=\"px-3 py-2\">{tv(values.post)/*.content()*/}</div>),\n}\n\nexport default ui;","import getMessage from './getMessage';\nimport teamPosts from './teamPosts';\n\nexport default {\n    getMessage: getMessage,\n    teamPosts: teamPosts,\n};\n","import { QueryUI } from \"tonva-react-uq\";\nimport { VMain } from \"./cGetMessge\";\n\nconst ui:QueryUI = {\n    main: VMain,\n}\n\nexport default ui;\n","import CN from './zh/CN';\n\nconst res = {\n    zh: {\n        CN: CN\n    }\n};\n\nexport default res;\n","import React from 'react';\nimport _ from 'lodash';\n\nexport default {\n    x: {\n        no: '编号',\n        team: '部门',\n        staff: '员工',\n        noStaff: '无员工',\n        post: '职位',\n        noPost: '无职位',\n        a: 'aaa',\n        b: {\n            s: 'sss',\n            d: ()=><span className=\"text-success\">ddd</span>,\n        },\n        c: ()=><span className=\"text-danger\">ccc</span>,\n    },\n    usq: '$UNITX',\n    tuid: '基础档案',\n    map: '对照表',\n    tuidPlaceHolder: '选择',\n    submit: '提交',\n    arrNew: '新增',\n    arrEdit: '保存',\n    entity: {\n        message: {\n            label: '消息-message',\n            arrNew: '新增消息',\n            arrEdit: '保存消息',\n            fields: {\n                fromUser: '发送人',\n                fromUnit: '发送部门',\n                type: '类型',\n                date: '日期',\n                subject: '主题',\n                discription: '描述',\n                content: '内容'\n            },\n        },\n        getMessage: {\n            label: '获取Message',\n            submit: '获取消息',\n            fields: {\n                msg: '消息'\n            }\n        },\n        newMessage: {\n            label: '新建消息',\n            fields: {\n                type: '类型',\n                subject: '主题',\n            },\n            arrs: {\n                to: {\n                    label: '发送',\n                    newSubmit: '新增to',\n                    editSumbit: '保存to',\n                },\n                cc: {\n                    label: '抄送',\n                    newSubmit: '新增cc',\n                    editSumbit: '保存cc',\n                }\n            }\n        },\n        sectionTeam: {\n            label: '大部设置',\n        },\n        teamPerson: {\n            label: '部门员工职位',\n            fields: {\n            },\n            confirmDelete: _.template('真的要删除${label}吗'),\n        },\n        teamOrganization: {\n            label: '部门机构对照表',\n        },\n        teamPosts: {\n            label: '部门职位',\n        },\n        person: {\n            label: '员工',\n            fields: {\n                name: '姓名',\n                nick: '别名',\n                given: '名字',\n                sur: '姓',\n                gender: '性别',\n                user: '用户',\n            }\n        },\n        organization: {\n            label: '组织结构',\n            arrs: {\n                post: {\n                    label: '职位',\n                }\n            }\n        },\n        user: {\n            label: '用户'\n        }\n    }\n}\n","import * as React from 'react';\nimport { VTuidMain } from \"tonva-react-uq\";\nimport { Page } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\n\nexport class MyVTuidMain extends VTuidMain {\n    protected get view() {\n        let {label, proxyLinks} = this.controller;\n        return () => <Page header={label}>\n            {proxyLinks === undefined ?\n            <>\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\n                改写的TuidMain\n                <div className='my-3'>\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\n                    <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\n                </div>\n            </> :\n            <List className=\"my-2\"\n                header={<Muted>{label} 代理下列Tuid</Muted>}\n                items={proxyLinks}\n                item={{render: this.entityRender, onClick:this.entityClick}} />\n            }\n        </Page>;\n    }\n}","import { AppUI, CApp } from \"tonva-react-uq\";\nimport { VHome } from './main';\nimport { CSCMApp } from '../CSCMApp';\nimport orderUI from './order';\nimport productUI from './product';\nimport customerUI from './customer';\nimport warehouseUI from './warehouse';\nimport $unitx from './$unitx';\n\nconst ui: AppUI = {\n    appName: \"bruce/SCMBase\",\n    CApp: CSCMApp,\n    main: VHome,\n    uqs: {\n        '$$$/$unitx': $unitx,\n        'bruce/scmbasedata': productUI\n    }\n}\n\nexport default ui;\n","import * as React from 'react';\n\nimport { CApp, CUq } from 'tonva-react-uq';\nimport { CHome } from './home/CHome';\nimport { CFunctionCategory } from 'functionCategory/CFunctionCategory';\nimport { consts } from './home/consts';\nimport { WebUser } from 'CurrentUser';\nimport { Controller, VPage } from 'tonva-tools'\n\nexport class CSCMApp extends CApp {\n\n    currentUser: WebUser;\n    cUqProcut : CUq;\n    currentSalesRegion: any;\n    currentLanguage: any;\n\n    cHome: CHome;\n    cFunctionCategory: CFunctionCategory;\n\n    protected async internalStart() {\n        this.cUqProcut = this.getCUq(consts.uqBasedata);\n        if (this.isLogined) {\n            //this.currentUser.user = this.user;\n        }\n\n        let ccc = this.cUqProcut.tuid('product');\n        let ccm = this.cUqProcut.tuid('manufactor');\n\n        this.cFunctionCategory = new CFunctionCategory(this, undefined);\n        this.cHome = new CHome(this, undefined);\n\n        let promises: PromiseLike<void>[] = [];\n        promises.push(this.cFunctionCategory.start());\n        await Promise.all(promises);\n        this.showMain();\n    }\n\n    showMain(initTabName?: string){\n        this.openVPage(this.VAppMain, initTabName);\n    }\n\n    public async showOneVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\n        await (new vp(this)).open(param);\n    }\n\n    protected onDispose() {\n    }\n}\n","import { UqUI } from 'tonva-react-uq';\nimport tuid from './tuid';\nimport map from './map';\nimport query from './query';\nimport res from './res';\nimport { MyCTuid } from './cTuid';\n\nconst usqUI:UqUI = {\n    CTuidMain: MyCTuid,\n    tuid: tuid,\n    map: map,\n    query: query,\n    res: res,\n}\n\nexport default usqUI;","import { CTuidMain, VTuidMain, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { MyVTuidMain } from \"./vTuidMain\";\n\nexport class MyCTuid extends CTuidMain {\n    protected get VTuidMain():typeof VTuidMain {return MyVTuidMain}\n\n    protected buildSelect(field:Field, arr:string, fieldTuidUI: FieldTuidUI):FieldCall {\n        let {name} = field;\n        switch (arr) {\n        case undefined:\n            switch (name) {\n            case 'fromUser':\n                return async (form:VForm, field:Field, values:any):Promise<any> => {\n                    let {_tuid} = field;\n                    let cTuidSelect = this.cUq.cTuidSelect(_tuid);\n                    let ret = await cTuidSelect.call();\n                    return ret.id;\n                };\n            }\n            break;\n        }\n        return super.buildSelect(field, arr, fieldTuidUI);\n    }\n}\n","import * as React from 'react';\nimport './App.css';\nimport { NavView, nav, Page, Tabs } from 'tonva-tools';\nimport { startApp } from 'tonva-react-uq';\nimport ui from './ui';\n//import { faceTabs } from 'facetabs';\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await startApp(ui);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}