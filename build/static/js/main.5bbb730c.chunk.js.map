{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-tools/ui/nav.tsx","tonva-tools/ui/form/context.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/page.tsx","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-react-form/uid.ts","tonva-tools/ui/index.ts","tonva-tools/net/host.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-tools/ui/image.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-uq/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/user.ts","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/widgets/index.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-tools/net/netToken.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/IconText.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-tools/ui/edit/itemEdit.tsx","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","images/logo.svg","tonva-tools/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","functionCategory/VRootCategory.tsx","functionCategory/VCategory.tsx","functionCategory/CFunctionCategory.tsx","ui/common.tsx","ui/index.tsx","CSCMApp.tsx","ui/product/index.tsx","ui/product/tuid/index.tsx","ui/product/tuid/productCategory.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","ui","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","react__WEBPACK_IMPORTED_MODULE_1__","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","start","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","view","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","i","len","backLevel","popAndDispose","Error","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","className","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_14__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getUnitName","unitId","unitFromName","_page__WEBPACK_IMPORTED_MODULE_3__","header","_loading__WEBPACK_IMPORTED_MODULE_15__","url","resHost","centerHost","resUrl","wsHost","loadUnit","setGuest","hash","document","location","origin","isInFrame","startsWith","mif","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","_net_wsChannel__WEBPACK_IMPORTED_MODULE_13__","parent","logined","notLogined","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","withBack","lv","e","then","loginView","default","onClick","logout","logoutClear","startWait","endWait","onError","show","replace","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","Context","uiSchema","data","inNode","isRow","widgets","errors","errorWidgets","renderErrors","mobx_react__WEBPACK_IMPORTED_MODULE_3__","initData","rules","Array","isArray","arrName","subContexts","arrRowContexts","itemName","value","widget","setValue","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkRules","j","checkFieldRules","clearContextErrors","rule","setError","rowContext","removeErrors","checkContextRules","setContextError","addErrorWidget","clearContextError","findIndex","pos","splice","hasError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","rowKey","itemSchemas","parentData","FormContext","ContextContainer","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","vm","replacer","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","guestApi","uqApi","wsChannel","apiBase","appBridge","host","uqTokens","logoutUqTokens","appsInFrame","meInFrame","_unit","isBridged","setMeInFrame","appHash","parts","split","Number","page","slice","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","loadAppUqs","appOwner","appName","centerAppApi","_uqApi__WEBPACK_IMPORTED_MODULE_4__","uqs","checkUqs","localStorage","removeItem","_ui__WEBPACK_IMPORTED_MODULE_2__","appUq","uq","uqOwner","uqName","uqToken","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrDebug","at","a","opener","apiName","evt","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","clone","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","appInFrame","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","title","redDot","img","redDotView","cn","classnames__WEBPACK_IMPORTED_MODULE_3___default","_titleBar__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","getItem","parse","loginedUserId","isNet","un","__loadAccess","saveLocal","lodash_default","cloneDeep","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","join","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","rLs","rUnit","rAppOwner","rAppName","uqsPure","obj","cachedUqs","Link","cLink_CLink","tslib_es6","classnames_default","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","postWsToSubApp","netThis","send","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","fetchUrl","debugHostUrl","localCheck","results","all","hostString","indexOf","timeout","text","catch","fetchLocalCheck","_a","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","render","newButton","proxyLinks","isFrom","tonva_tools","tonva_react_form","placeholder","entityRender","entityClick","vTuidEdit_VTuidEdit","next","vForm","reset","closePage","finish","getValues","save","unique","isCalling","returnCall","openPageElement","size","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","rowContent","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","alert","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","renderRow","clickRow","callOnSelected","ownerTop","ownerObj","ownerId","onSelected","vTuidList_VTuidMainList","cTuid_CTuid","buildPageItems","first","searchArr","cTuid_CTuidMain","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","edit","itemChanged","cTuidInfo","cTuid_CTuidInfo","merge","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","Image","_nav__WEBPACK_IMPORTED_MODULE_1__","defaultImage","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","isOk","disabled","caption","mobx_module","Rule","RuleRequired","defy","trim","NaN","RuleNum","RuleInt","n","isNaN","isInteger","RuleMin","min","check","RuleMax","max","vField_VField","fieldRes","init","buildRules","required","null","r","readonly","FormMode","editable","vField_VInputControl","renderError","ref","input","setInputValue","onFocus","onBlur","computeFields","onChange","currentTarget","inputGroup","suffix","ctrlCN","inputType","readOnly","maxLength","onKeyPress","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","vField_VIntField","VDecField","VTextField","VDateTimeField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","list","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","rows","row","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","toLowerCase","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","control_ControlBase","formView","renderControl","filled","validate","control_Control","face","setProps","element","defaultValue","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","form-control","has-success","is-invalid","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickControl_PickControl","Content","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","password","number","parseFloat","checkbox","trueValue","falseValue","checked","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","textarea","int","dec","bool","ln","entity_Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldTuid","buildArrFieldsTuid","getTuid","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","substring","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","retId","inId","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","tuid_TuidMain","Main","tuid_TuidDiv","cacheIds","cApp","cUqFrm","getImportUq","retErrors","cTuidMainFromName","$proxy","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","proxyColl","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","mainFields","ownerField","af","startApp","convertUIKeyToLowercase","CApp","_controllers__WEBPACK_IMPORTED_MODULE_2__","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","RowContainer","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","_nav__WEBPACK_IMPORTED_MODULE_2__","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","Loading","ResUploader","upload","files","fileInput","FormData","file","abortController","AbortController","signal","multiple","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","tonvaApp","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_3__","onRowClick","selectUnitPage","appUnits","promiseChecks","newCUq","checks","retError","CUq","_uq__WEBPACK_IMPORTED_MODULE_4__","cUqArr","VAppMain","isProduction","loadAppUnits","showUnsupport","loadUqs","clearPrevPages","showMainPage","beforeStart","renderView","sheetTypeId","getCUqFromId","navSheet","_centerApi__WEBPACK_IMPORTED_MODULE_5__","userAppUnits","appContent","appPage","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_5__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_4__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","centerApi","RuleCustom","func","RulePredefined","rules_RuleNum","minMsg","template","maxMsg","checkMore","integer","widget_Widget","context","itemSchema","fieldProps","contextErrors","onInputChange","changeValue","getUiItem","visible","removeErrorWidget","isChanging","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","FieldClass","uiLabel","requiredFlag","FieldContainer","Templet","errorList","tag","textWidget_TextWidget","renderTemplet","onKeyDown","numberWidget_NumberWidget","updownWidget_UpdownWidget","keyCode","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","defaultChecked","selectWidget_SelectWidget","option","idWidget_IdWidget","pickId","required-item","cursor-pointer","Unknown","dataType","uiType","dataTypes","buttonWidget_ButtonWidget","onButtonClick","observerRender","widgetType","ButtonClass","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","form_context","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","editContainer","deleted","row-selected","Provider","widgetsFactory","datetime","time","month","email","updown","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","WidgetElement","renderContainer","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidEdit","CTuidList","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","cTuidEdit","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","border","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","v0","q","retFields","newItem","addItem","VMapMain","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","internalStart","_resolve_$","View","VPage","coordinator","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_3__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","getMonth","hm","getFullYear","Media","classnames__WEBPACK_IMPORTED_MODULE_1__","imgStyle","height","disp","px","py","alt","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","mobx__WEBPACK_IMPORTED_MODULE_3__","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","pull","pulse","rotate","flip","inverse","IconText_IconText","iconClass","textClass","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","itemEdit_ItemEdit","uiItem","isChanged","internalEnd","stringItemEdit_StringItemEdit","preValue","imageItemEdit_ImageItemEdit","resUploader","resId","padding","ui_image","edit_Edit","defaultSepClassName","defaultRowContainerClassName","onItemChanged","onItemClick","itemEdit","createItemEdit","end","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","formRes","zh","form_Form","calcSelectOrDelete","formData","arrItemOperated","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","formArrVal","beforeShow","contextType","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","prop","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","display","notifyCircle","num","FetchErrorView","reApi","errContent","LocalData","Data","homeTabCur","module","exports","meTab","LoadableComponent","lib_default","loader","VSiteHeader_VSiteHeader","logo_default","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","renderCategoryRootList","CHome_CHome","cFunctionCategory","renderRootList","renderHome","startDebug","titleTitle","textOverflow","whiteSpace","VRootCategory_subStyle","fontSize","VRootCategory_VRootCategory","categoryClick","categoryWapper","openMainPage","renderRootCategory","renderSubCategory","marginRight","renderThirdCategory","categories","VCategory_VCategory","renderChild","childWapper","categoryWaper","cHome","funcCategories","pid","CFunctionCategory_CFunctionCategory","productUI","product","brand","description","CAS","purity","molecularFomula","molecularWeight","common_item","tonva_react_uq","packx","radiox","radioy","src_ui","initTabName","faceTabs","SCM/product","productx","productCategory","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bbb730c.chunk.js","sourcesContent":["export {left0} from './left0';\nexport * from './user';\nexport * from './net';\nexport * from './ui';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\n","export * from './form';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './components';\nexport * from './media';\nexport * from './listView';\nexport * from './searchBox';\nexport * from './multiStep';\nexport * from './uid';\n","import * as React from 'react';\nimport { Controller, VPage, View } from 'tonva-tools';\nimport { Entity, Field, TuidMain } from '../entities';\nimport { CUq } from './uq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid, _ownerField} = field;\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\n            let param:any = undefined;\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../fetchError';\nimport {appUrl, setMeInFrame, logoutUqTokens} from '../net/appBridge';\nimport {LocalData} from '../local';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, meInFrame, isDevelopment, host} from '../net';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\nimport { Callbacks, Callback } from './callbacks';\n\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n\nconst logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface State {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, State> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        throw new Error('to be designed');\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (self != window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n                    <span className=\"sr-only\">Loading...</span>\n                </li>;\n                break;\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\n        return (\n        <ul className='va'>\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    @observable user: User/*InNav*/ = undefined;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getUnitName() {\n        try {\n            let unitRes = await fetch('unit.json', {});\n            //if (unitRes)\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.clear();\n            return;\n        }\n    }\n\n    private async loadUnit() {\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (isDevelopment !== true) return unit.id;\n            unitName = await this.getUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    private isInFrame:boolean;\n    private centerHost: string;\n    async start() {\n        nav.clear();\n        nav.push(<Page header={false}><Loading /></Page>);\n        await host.start();\n        let {url, ws, resHost} = host;\n        this.centerHost = url;\n        this.resUrl = 'http://' + resHost + '/res/';\n        this.wsHost = ws;\n        setCenterUrl(url);\n        \n        let unit = await this.loadUnit();\n        meInFrame.unit = unit;\n\n        let guest:Guest = this.local.guest.get();\n        if (guest === undefined) {\n            guest = await guestApi.guest();\n        }\n        nav.setGuest(guest);\n\n        let hash = document.location.hash;\n        // document.title = document.location.origin;\n        console.log(\"url=%s hash=%s\", document.location.origin, hash);\n        this.isInFrame = hash !== undefined && hash !== '' && hash.startsWith('#tv');\n        if (this.isInFrame === true) {\n            let mif = setMeInFrame(hash);\n            if (mif !== undefined) {\n                this.ws = wsBridge;\n                console.log('this.ws = wsBridge in sub frame');\n                //nav.user = {id:0} as User;\n                if (self !== window.parent) {\n                    window.parent.postMessage({type:'sub-frame-started', hash: mif.hash}, '*');\n                }\n                // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                //await this.showAppView();\n                return;\n            }\n        }\n\n        let user: User = this.local.user.get();\n        if (user === undefined) {\n            let {notLogined} = this.nav.props;\n            if (notLogined !== undefined) {\n                await notLogined();\n            }\n            else {\n                await nav.showLogin(undefined);\n            }\n            return;\n        }\n\n        await nav.logined(user);\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n    /*\n    private loginCallbacks = new Callbacks<(user: User)=>Promise<void>>();\n    private logoutCallbacks = new Callbacks<()=>Promise<void>>();\n    registerLoginCallback(callback: (user:User)=>Promise<void>) {\n        this.loginCallbacks.register(callback);\n    }\n    unregisterLoginCallback(callback: (user:User)=>Promise<void>) {\n        this.loginCallbacks.unregister(callback);\n    }\n    registerLogoutCallback(callback: ()=>Promise<void>) {\n        this.logoutCallbacks.register(callback);\n    }\n    unregisterLogoutCallback(callback: ()=>Promise<void>) {\n        this.logoutCallbacks.unregister(callback);\n    }\n    */\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\n        ws.connect();\n\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\n        let lv = await import('../entry/login');\n        let loginView = <lv.default withBack={withBack} callback={callback} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        logoutUqTokens();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget as Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[name];\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        if (this.rules === undefined) return;\n        this.clearContextErrors();\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.removeErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) this.widgets[i].clearContextError();\n    }\n\n    checkRules() {\n        this.checkFieldRules();\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    removeErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    //get data() {return this.row.data;}\n    removeErrors() {\n        super.removeErrors();\n        this.parentContext.removeErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify } from '../../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { BoxId, Tuid } from \"../entities\";\nimport { PureJSONContent } from '../controllers';\n\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    if (typeof bi === 'number') return <>{bi}</>;\n    let {id, _$tuid, _$com} = bi as BoxId;\n    let t:Tuid = _$tuid;\n    if (t === undefined) {\n        if (ui !== undefined) return ui(bi, x);\n        return PureJSONContent(bi, x);\n    }\n    let com = ui || _$com;\n    if (com === undefined) {\n        com = bi._$com = t.getTuidContent();\n    }\n    let val = t.valueFromId(id);\n    if (typeof val === 'number') val = {id: val};\n    if (ui !== undefined) {\n        let ret = ui(val, x);\n        if (ret !== undefined) return ret;\n        return <>{id}</>;\n    }\n    return React.createElement(com, val);\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'undefined':\n            break;\n        case 'object':\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\n            break;\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }       \n    if (nullUI === undefined) return <>null</>;\n    return nullUI();\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","export * from './jsonStringify';\nexport * from './tv';\n","import { decodeGuestToken } from '../user';\nimport { CenterApi } from './uqApi';\n\nexport class GuestApi extends CenterApi {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './uqApi';\nexport {meInFrame, loadAppUqs, isBridged} from './appBridge';\nexport * from './host';\nexport {httpGet} from './httpChannel';\n","import _ from 'lodash';\nimport {nav} from '../ui';\nimport {uid} from '../uid';\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\ninterface UqTokenAction extends UqToken {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) uqTokens[i] = undefined;\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let meInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                url: ret.url,\n                urlDebug: ret.urlDebug,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    nav.user = message; // message.user;\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\n    let {unit} = appInFrame;\n    let parts = apiName.split('/');\n    let ret = await uqTokenApi.uq({unit: unit, uqOwner: parts[0], uqName: parts[1]});\n    if (ret === undefined) {\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\n        throw 'api not found';\n    }\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, url, urlDebug, token} = message;\n    let action = uqTokens[apiName];\n    if (action === undefined) {\n        throw 'error app api return';\n        //return;\n    }\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\n    action.url = realUrl;\n    action.token = token;\n    action.resolve(action);\n}\n\nexport function setMeInFrame(appHash: string):AppInFrame {\n    let parts = appHash.split('-');\n    let len = parts.length;\n    meInFrame.hash = parts[0].substr(3);\n    if (len>0) meInFrame.unit = Number(parts[1]);\n    if (len>1) meInFrame.page = parts[2];\n    if (len>2) meInFrame.param = parts.slice(3);\n    return meInFrame;\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nexport async function loadAppUqs(appOwner:string, appName): Promise<App> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(unit, appOwner, appName);\n    centerAppApi.checkUqs(unit, appOwner, appName).then(v => {\n        if (v === false) {\n            //修正无限刷新死循环\n            localStorage.removeItem('appUqs');\n            //\n            nav.start();\n        }\n    });\n    return ret;\n}\n\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        uqToken = await uqTokenApi.uq({unit: meInFrame.unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken === undefined) {\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\n            throw err;\n        }\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", meInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: meInFrame.hash,\n        }, \"*\");\n    });\n}\n\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {TitleBar} from './titleBar';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string;\n    icon?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    logout?: boolean | (()=>void);\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs[0];\n        if (t0 === undefined) return;\n        await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot');\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num');\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let titleBar;\n        if (header !== false) {\n            titleBar = <TitleBar \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right} \n            />;\n        }\n\n        return <article className='page-container'>\n            {titleBar}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                })\n            }\n            </section>\n            {tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\n        let titleBar;\n        if (header !== false)\n            titleBar = <TitleBar \n                back={back} \n                center={header as any}\n                right={right}\n                logout={this.props.logout}\n            />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {titleBar}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter;\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","import {nav} from '../ui/nav';\nimport {FetchError} from '../fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel} from './httpChannel';\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\nimport {appUq} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n}\n\ninterface UqLocal {\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n        }\n        return isMatch;\n\n    }\n}\n\nconst localUqs = new CacheUqLocals;\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\n        this.token = uqToken.token;\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n\n    async update():Promise<string> {\n        return await this.get('update');\n    }\n\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    async loadAccess():Promise<any> {\n        return await localUqs.loadAccess(this);\n    }\n\n    async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }\n\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }\n\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\n        try {\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\n            let ret = await this.get(url);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }\n\n    async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }\n\n    async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }\n\n    async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }\n\n    async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }\n\n    async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }\n\n    async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    async user():Promise<any> {\n        return await this.get('user');\n    }\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, url, urlDebug} = ret;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        this.token = token;\n        return new HttpChannel(false, realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\n}\n\nexport abstract class CenterApi extends ApiBase {\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokens = 'uqTokens';\nexport class UqTokenApi extends CenterApi {\n    private local: UqLocals;\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        try {\n            let {unit:unitParam, uqOwner, uqName} = params;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqTokens);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {unit, user} = this.local;\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: params.unit,\n                    uqs: {}\n                };\n            }\n\n            let un = uqOwner+'/'+uqName;\n            let nowTick = new Date().getTime();\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {tick, value} = uq;\n                if ((nowTick - tick) < 24*3600*1000) {\n                    return value;\n                }\n            }\n            let ret = await this.get('app-uq', params);\n            this.local.uqs[un] = {\n                tick: nowTick,\n                value: ret,\n            }\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\n            return ret;\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqTokens);\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApi {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface App {\n    id: number;\n    uqs: AppUq[];\n}\n\nexport interface AppUq {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    url: string;\n    urlDebug: string;\n    ws: string;\n    wsDebug: string;\n    access: string;\n    token: string;\n}\n\nexport class CenterAppApi extends CenterApi {\n    private cachedUqs: any;\n    async uqs(unit:number, appOwner:string, appName:string):Promise<App> {\n        let ret:any;\n        let ls = localStorage.getItem('appUqs');\n        if (ls !== null) {\n            let rLs = JSON.parse(ls);\n            let {unit:rUnit, appOwner:rAppOwner, appName:rAppName, value} = rLs;\n            if (unit === rUnit && appOwner === rAppOwner && appName === rAppName) ret = value;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(unit, appOwner, appName);\n            let obj = {\n                unit:unit, \n                appOwner:appOwner, \n                appName:appName, \n                value: ret,\n            }\n            localStorage.setItem('appUqs', JSON.stringify(obj));\n        }\n        return this.cachedUqs = _.cloneDeep(ret);\n    }\n    private async uqsPure(unit:number, appOwner:string, appName:string):Promise<App> {\n        return await this.get('tie/app-uqs', {unit:unit, appOwner:appOwner, appName:appName});\n    }\n    async checkUqs(unit:number, appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(unit, appOwner, appName);\n        return _.isMatch(this.cachedUqs, ret);\n    }\n    async unitxUq(unit:number):Promise<AppUq> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from 'tonva-tools';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","export * from './nav';\nexport * from './titleBar';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';","export const isDevelopment = process.env.NODE_ENV === 'development';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start() {\n        if (isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl, fetchOptions));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, urlDebug:string):string {\n        if (isDevelopment !== true) return url;\n        if (!urlDebug) return url;\n        for (let i in hosts) {\n            let host = hosts[i];\n            let {value, local} = host;\n            let hostString = `://${i}/`;\n            let pos = urlDebug.indexOf(hostString);\n            if (pos > 0) {\n                if (local === false) return url;\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\n                return urlDebug;\n            }\n        }\n        return url;\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 100;\n\nfunction fetchLocalCheck(url:string, options?:any):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, options)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string, options?:any):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url, options);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { TuidMain, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, proxyLinks, isFrom} = this.controller;\n        let newButton;\n        if (isFrom === false) newButton = <button className=\"btn btn-primary ml-3\" onClick={this.onNew}>新增</button>;\n        return () => <Page header={label}>\n            {proxyLinks === undefined ?\n            <>\n                <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\n                <div className='my-3'>\n                    {newButton}\n                    <button className=\"btn btn-primary ml-3\" onClick={this.onList}>列表</button>\n                </div>\n            </> :\n            <List className=\"my-2\"\n                header={<Muted>{label} 代理下列Tuid</Muted>}\n                items={proxyLinks}\n                item={{render: this.entityRender, onClick:this.entityClick}} />\n            }\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { TuidMain, Tuid } from '../../entities';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { nav, Page } from 'tonva-tools';\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../entities';\nimport { CTuid, TuidUI } from './cTuid';\nimport { SearchBox, List } from 'tonva-react-form';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.owner === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { TuidMain } from '../../entities';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import { PageItems } from 'tonva-tools';\nimport { Tuid } from \"../../entities\";\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\nimport { JSONContent, RowContent } from '../form/viewModel';\n\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidMainList extends VTuidMainListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isFrom === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n","import _ from 'lodash';\nimport { TypeVPage, PageItems } from 'tonva-tools';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from \"../uq/cUq\";\nimport { CLink } from \"../link\";\nimport { VTuidInfo } from \"./vTuidInfo\";\nimport { TuidPageItems } from \"./pageItems\";\nimport { VTuidMainList } from './vTuidList';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity.owner || this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport class CTuidMain extends CTuid<TuidMain> {\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n        let tuid = this.entity;\n        this.proxies = tuid.proxies;\n        if (this.proxies !== undefined) {\n            this.proxyLinks = [];\n            for (let i in this.proxies) {\n                let link = this.cUq.linkFromName('tuid', i);\n                this.proxyLinks.push(link);\n            }\n        }\n    }\n\n    async from():Promise<CTuidMain> {\n        let ret = await this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    async cUqFrom():Promise<CUq> {\n        return await this.entity.cUqFrom();\n    }\n    async cEditFrom(): Promise<CTuidEdit> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidEditFromName(this.entity.name);\n    }\n    async cInfoFrom(): Promise<CTuidInfo> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidInfoFromName(this.entity.name);\n    }\n    async cSelectFrom(): Promise<CTuidSelect> {\n        let cUq = await this.entity.cUqFrom();\n        return await cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    proxies: {[name:string]: TuidMain};\n    proxyLinks: CLink[];\n    isFrom: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': v = this.VTuidEdit; break;\n            case 'list': v = this.VTuidList; break;\n            case 'edit': await this.edit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        await this.openVPage(v, value);\n    }\n\n    protected async edit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        let v = this.VTuidEdit;\n        await this.openVPage(v, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidEdit extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.edit(id);\n    }\n}\n\nexport class CTuidList extends CTuidMain {\n    protected async internalStart(id:number):Promise<void> {\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<TuidDiv> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ' + this.entity.name);\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n}\n\nconst defaultImage = 'http://101.200.46.56/imgs/Bear-icon.png';\n\nexport function Image(props: ImageProps) {\n    let {className, style, src} = props;\n    if (!src) {\n        src = defaultImage;\n    }\n    else if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} style={style} />;\n}\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\nimport { uid } from 'tonva-react-form';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames'\nimport { ViewModel } from \"./viewModel\";\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed, action } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { ViewModel } from \"../viewModel\";\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || this.field !== undefined && this.field.null === false) {\n            this.rules.push(new RuleRequired);\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            mode === FormMode.edit && this.fieldUI.editable === false;\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum);\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (ret === NaN)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) == v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt);\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../entities';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\nimport { IObservableArray, observable } from 'mobx';\nimport _ from 'lodash';\nimport { List, FA, Muted } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields, Field } from '../../entities';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../../tools';\nimport { Field, Tuid } from '../../../entities';\nimport { VField, RedMark } from \"./vField\";\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput, FormMode } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: Tuid;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        let {_ownerField} = this.field;\n        if (_ownerField !== undefined) {\n            let {name, arr} = _ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || this.input.placeHolder}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let redDot;\n        let {required} = this.fieldUI;\n        if (required === true || this.field.null === false) {\n            redDot = <RedMark />;\n        }\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\nimport { Field, ArrFields } from \"../../entities\";\nimport { VForm, FormOptions } from \"./vForm\";\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\nimport { VSubmit } from \"./vSubmit\";\nimport { VField, buildVField, VComputeField } from \"./vField\";\nimport { VArr } from \"./vArr\";\nimport { VTuidField } from \"./vField/vTuidField\";\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name, fields} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField } from './vField';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n            vField = VIntField;\n            break;\n        case 'bigint':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { observer } from \"mobx-react\";\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../entities';\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from 'tonva-react-form';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields, id, order} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","export * from './vForm';\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from '../fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../ui/nav';\nimport { isDevelopment } from './host';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private isCenter: boolean;\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.isCenter = isCenter;\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\n        navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","export * from './CApp';\nexport * from './startApp';\nexport * from './uq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Rule} from '../rule';\n\nexport abstract class ControlBase {\n    protected formView: FormView;\n    constructor(formView:FormView) {\n        this.formView = formView;\n    }\n    render():JSX.Element {\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n        </div>;\n    }\n    protected abstract renderControl():JSX.Element;\n    @computed get hasError():boolean {return false;}\n    @computed get filled():boolean {return false;}\n    clear() {}\n    clearErrors() {}\n    readValues(values:any):any {}\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    isOk():boolean {this.validate(); return !this.hasError;}\n    protected validate() {}\n}\n\nexport abstract class Control extends ControlBase {\n    protected field: Field;\n    protected face: Face;\n    protected props: any;\n    protected rules: Rule[];\n\n    protected element: HTMLElement;\n    @observable protected isOK?: boolean;\n    @observable protected error: string;\n    @observable protected value: any;\n\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView);\n        this.field = field;\n        this.face = face;\n        this.init();\n        this.setProps();\n    }\n    protected ref(element: HTMLElement) {\n        this.element = element;\n    }\n    protected init() {\n        this.rules = [];\n        let r = this.field.rules;\n        if (r !== undefined) {\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\n            else this.rules.push(r as Rule);\n        }\n    };\n    protected setProps():any {\n        return this.props = {\n            ref: this.ref.bind(this),\n            name: this.field.name,\n        }\n    };\n    @computed get hasError():boolean {return this.error !== undefined;}\n    @computed get filled():boolean {\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\n        return ret;\n    }\n    clearValue() { this.value = undefined; }\n    clear() { this.clearErrors(); this.clearValue(); }\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\n    readValues(values:any):any {\n        values[this.field.name] = this.value;\n    }\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    protected getValueFromElement():any {return this.value;}\n    protected validate() {\n        try {\n            let v = this.getValueFromElement();\n            if (this.rules.length > 0) {\n                let isOk:boolean;\n                for (let rule of this.rules) {\n                    console.log('validate: %s', v);\n                    let err = rule(v);\n                    console.log('validate: %s err: %s', v, err);\n                    if (err === true) {\n                        this.error = undefined;\n                        isOk = true;\n                    }\n                    else if (err !== undefined) {\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \n                        //    this.field.name, JSON.stringify(v), rule, err);\n                        this.error = err;\n                        this.isOK = false;\n                        return;\n                    }\n                }\n                this.isOK = isOk;\n            }\n            this.value = v;\n        }\n        catch (e) {\n            this.error = e.message;\n        }\n    }\n    render():JSX.Element {\n        let n;\n        if (this.face !== undefined) {\n            let {notes} = this.face;\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\n        }\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n            {n}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {ControlBase} from './control';\n\nexport class ButtonsControl extends ControlBase {\n    constructor(props) {\n        super(props);\n        this.otherClick = this.otherClick.bind(this);\n    }\n    private otherClick() {\n        let onOther = this.formView.props.onOther;\n        if (onOther === undefined) return;\n        let values = this.formView.readValues();\n        onOther(values);\n    }\n    renderControl():JSX.Element {\n        console.log('buttons.renderControl');\n        let nothing = this.formView.nothing;\n        let hasError = this.formView.hasError;\n        let props = this.formView.props;\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\n        let {submitButton, otherButton, onOther} = props;\n        let btnOther;\n        if (otherButton !== undefined) {\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\n                {otherButton}\n            </button>\n        }\n        return <div className=\"d-flex justify-content-start\">\n            <button\n                className=\"btn btn-primary\"\n                type=\"submit\" \n                disabled={nothing || hasError}>\n                {submitButton || '提交'}\n            </button>\n            {btnOther}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, Placeholder} from '../face';\nimport {Control} from './control';\n\nconst TxtRequired = '必须填入要求内容';\n\nexport abstract class CharsControl extends Control {\n    protected init() {\n        super.init();\n        if (this.field.required === true) {\n            this.rules.push((v) => {\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\n                return true;\n            });\n        }\n    }\n\n    protected element: HTMLInputElement;\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onBlur: this.onBlur.bind(this),\n            onFocus: this.onFocus.bind(this),\n            onChange: this.onChange.bind(this),\n        });\n        let face = this.face as Placeholder;\n        if (face !== undefined) {\n            _.assign(this.props, {\n                placeholder: face.placeholder,\n            });\n        }\n        return this.props;\n    };\n    protected parseValue(value?:string):any {return value;}\n    private onBlur() {\n        //console.log('field %s onBlure', this.field.name);\n        this.validate();\n    }\n    private onChange() {\n        console.log('onChange');\n        this.validate();\n    }\n    private onFocus() {\n        this.clearErrors();\n        //this.error = undefined;\n        //this.formView.clearErrors();\n    }\n    protected className() {\n        return classNames({\n            \"form-control\": true,\n            \"has-success\": this.isOK === true,\n            \"is-invalid\": this.error !== undefined,\n            \"is-valid\": this.error === undefined && this.isOK === true,\n        });\n    }\n    protected renderInput():JSX.Element {\n        return <input className={this.className()} {...this.props} />;\n    }\n    protected ref(element: HTMLInputElement) {\n        super.ref(element);\n        if (element) {\n            element.value = this.value === undefined? '':this.value;\n        }\n    }\n    protected renderError():JSX.Element {\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\n        if (this.error === undefined) return null;\n        return <div className=\"invalid-feedback\">{this.error}</div>\n    }\n    clearValue() { super.clearValue(); this.element.value = ''; }\n    setError(fieldName:string, error:string) {\n        if (this.field.name === fieldName) this.error = error;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) return;\n        //this.element.value = v;\n        this.value = v;\n    }\n    renderControl():JSX.Element {\n        return <React.Fragment>\n            {this.renderInput()}\n            {this.renderError()}\n        </React.Fragment>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\n\nexport class StringControl extends CharsControl {\n    protected field: StringField;\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'text',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        return value;\n    }\n}\n\nexport class PasswordControl extends StringControl {\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'password',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {IntField, DecField, NumberField} from '../field';\nimport {CharsControl} from './charsControl';\n\nconst ErrInvalidNumber = '无效的数字';\nconst ErrMin = '最小值为';\nconst ErrMax = '最大值为';\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport class NumberControl extends CharsControl {\n    protected field: IntField | DecField | NumberField;\n    protected value: number;\n    protected extraChars: number[];\n    \n    protected init() {\n        super.init();\n        this.extraChars = [];\n        let {min, max} = this.field;\n        if (min !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\n        }\n        else {\n            this.extraChars.push(KeyCode_Neg);\n        }\n\n        if (max !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        let n = Number.parseFloat(value);\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\n        return n;\n    }\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            type: 'number',\n            step: (this.field as DecField).step,\n            onKeyPress: this.onKeyPress.bind(this),\n        });\n    }\n\n    onKeyPress(event:KeyboardEvent) {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.element.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.element.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.element.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.element.value = v;\n    }\n}\n","import * as React from 'react';\nimport {Control, ControlBase} from './control';\nimport {FormView} from '../formView';\n\nexport class UnknownControl extends Control {\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n            don't know how to create control<br/>\n            field: {JSON.stringify(this.field)} must be object <br/>\n            face: {JSON.stringify(this.face)} must be object <br/>\n            </div>\n        </div>;\n    }\n}\n\nexport class EmptyControl extends ControlBase {\n    private element:JSX.Element;\n    constructor(formView:FormView, element:JSX.Element) {\n        super(formView);\n        this.element = element;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            {this.element}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, IdPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickIdControl extends Control {\n    protected face: IdPickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    onPicked = (value: any) => {\n        this.value = value.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private controlContent():string|JSX.Element {\n        let {itemFromId, fromPicked, initCaption} = this.face;\n        if (this.value === undefined) {\n            return initCaption || '请选择Id';\n        }\n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        if (itemFromId !== undefined) {\n            if (fromPicked !== undefined) {\n                let item = itemFromId(this.value);\n                if (item) {\n                    let ret = fromPicked(item);\n                    if (ret !== undefined) return ret.caption;\n                }\n            }\n        }\n        return String(this.value);\n    }\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\n                onClick={this.onClick}>\n                {this.controlContent()}\n            </div>;\n        }\n        return <div className=\"form-control-static \">\n            <input.component id={this.value} \n                ui={tuid}\n                //input={input}\n                //entitiesUI={this.formView.props.context} \n                //params={this.formView.readValues()}\n                //onPicked={this.onPicked}\n                />\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, TuidPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickTuidControl extends Control {\n    protected face: TuidPickFace;\n    // protected value: number;\n    @observable private caption: string|JSX.Element;\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.onIdChanged = this.onIdChanged.bind(this);\n        //this.onClick = this.onClick.bind(this);\n    }\n    /*\n    private async onClick() {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }*/\n    onIdChanged(id: any) {\n        this.value = id.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private buildContent():JSX.Element {\n        //let {tuid, input} = this.face;\n        return <this.face.input.component \n            {...this.face}\n            id={this.value}\n            //ui={this.face.ui}\n            //input={input}\n            //entitiesUI={this.formView.props.context} \n            onFormValues={()=>this.formView.readValues()}\n            onIdChanged={this.onIdChanged} />;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static \">\n            {this.buildContent()}\n        </div>;\n    }\n}\n/*\n<button className=\"form-control btn btn-outline-info\"\ntype=\"button\"\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\nonClick={this.onClick}>\n{this.buildContent()}\n</button>\n*/","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, PickFace} from '../face';\nimport {Control} from './control';\nimport { observer } from 'mobx-react';\n\nexport class PickControl extends Control {\n    protected face: PickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    /*\n    private controlContent():string|JSX.Element {\n        let {content: Content} = this.face;\n        if (this.value === undefined) {\n            return '请选择';\n        }\n        \n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        return <Content id={this.value} />;\n    }*/\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        return <this.view />;\n        /*\n        let {content:Content} = this.face;\n        //if (this.value === undefined) {\n            //return <div>no input on idpick</div>;\n        //}\n        //return <div className=\"form-control-static \">\n        //    <Content />\n        //</div>;\n        */\n    }\n\n    private view = observer(() => {\n        let content;\n        let {content: Content} = this.face;\n        if (this.value === undefined || this.value === null) {\n            content = '请选择';\n        }\n        /*\n        else if (this.caption !== undefined) {\n            content = this.caption;\n        }*/\n        else {\n            content = <Content id={this.value} />;\n        } \n        return <div\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\n            onClick={this.onClick}>\n            {content}\n        </div>\n    });\n}\n","export * from './control';\nexport * from './buttonsControl';\nexport * from './stringControl';\nexport * from './numberControl';\n\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Control, ControlBase} from './control';\nimport {ButtonsControl} from './buttonsControl';\nimport {CheckControl} from './checkControl';\nimport {RadioControl} from './radioControl';\nimport {TextAreaControl} from './textAreaControl';\nimport {SelectControl} from './selectControl';\nimport {UnknownControl, EmptyControl} from './unknownControl';\nimport {StringControl, PasswordControl} from './stringControl';\nimport {NumberControl} from './numberControl';\n\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\nimport { PickIdControl } from './pickIdControl';\nimport { PickTuidControl } from './pickTuidControl';\nimport { PickControl } from './pickControl';\n\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\n\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\n    let label = row.label;\n    if ((<GroupRow>row).group !== undefined)\n        return createGroupControl(form, label, row as GroupRow);\n    if ((<FieldRow>row).field !== undefined)\n        return createFieldControl(form, label, row as FieldRow);\n    return new EmptyControl(form, row.help);\n}\n\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\n    \"string\": StringControl,\n    \"password\": PasswordControl,\n    \"number\": NumberControl,\n    \"checkbox\": CheckControl,\n    \"radiobox\": RadioControl,\n    \"select\": SelectControl,\n    \"pick-id\": PickIdControl,\n    \"pick-tuid\": PickTuidControl,\n    \"textarea\": TextAreaControl,\n    \"pick\": PickControl,\n};\nconst defaultFaces:{[type:string]: Face} = {\n    \"string\": {type:'string'},\n    \"number\": {type:'number'},\n    \"int\": {type:'number'},\n    \"dec\": {type:'number'},\n    \"bool\": {type:'checkbox'},\n}\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\n    let {field, face} = fieldRow;\n    switch (typeof field) {\n        case 'string':\n            field = {\n                name: (field as any) as string,\n                type: 'string',\n            }\n            break;\n        case 'object':\n            break;\n        default:\n            return new UnknownControl(form, field, face);\n    }\n    let fieldType = field.type || 'string';\n    if (face === undefined) {\n        face = defaultFaces[fieldType];\n        if (face === undefined) return new UnknownControl(form, field, face);\n    }\n    else if (face.type === undefined) {\n        let f = defaultFaces[fieldType];\n        face.type = f===undefined? 'string' : f.type;\n    }\n    let control = controls[face.type || fieldType] || UnknownControl;\n    return new control(form, field, face);\n}\n\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\n    return new UnknownControl(form, groupRow as any, undefined);\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field, BoolField} from '../field';\nimport {Face, CheckBoxFace} from '../face';\nimport {Control} from './control';\n\nexport class CheckControl extends Control {    \n    protected element: HTMLInputElement;\n    protected field: BoolField;\n    protected face: CheckBoxFace;\n    private trueValue: any;\n    private falseValue: any;\n\n    protected init() {\n        super.init();\n        let {trueValue, falseValue} = this.field;\n        if (trueValue === undefined) this.trueValue = 1;\n        if (falseValue === undefined) this.falseValue = 0;\n    }\n\n    setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onChange: this.onChange.bind(this),\n        });\n    }\n\n    clearValue() {\n        this.element.checked = this.field.defaultValue === this.trueValue;\n        this.value = this.getValueFromElement();\n    }\n\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) {\n            v = this.field.defaultValue;\n        }\n        if (v !== undefined) {\n            //this.element.checked = v === this.trueValue;\n            //this.value = this.getValueFromElement();\n        }\n    }\n\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\n\n    private onChange() {\n        this.value = this.getValueFromElement();\n    }\n\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <label className=\"form-control\">\n                <label className=\"custom-control custom-checkbox mb-0\">\n                    <input type='checkbox'\n                        name={this.field.name}\n                        ref={this.props.ref}\n                        onChange={this.props.onChange}\n                        className=\"custom-control-input\" />\n                    <span className=\"custom-control-indicator\" />\n                    <span className=\"custom-control-description\">{this.face.label}</span>\n                </label>\n            </label>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, RadioFace} from '../face';\nimport {Control} from './control';\n\nexport class RadioControl extends Control {\n    protected face: RadioFace;\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <div className=\"form-control\">\n            {\n                this.face.list.map((item, index) => {\n                    let t, v;\n                    if (typeof item !== 'object') t = v = item;\n                    else {\n                        t = item.text;\n                        v = item.value;\n                    }\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\n                        <input type='radio'\n                            name={this.field.name} \n                            className=\"custom-control-input\" />\n                        <span className=\"custom-control-indicator\"></span>\n                        <span className=\"custom-control-description\">{t}</span>\n                    </label>;\n                })\n            }\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, SelectFace} from '../face';\nimport {Control} from './control';\n\nexport class SelectControl extends Control {\n    constructor (formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.ref = this.ref.bind(this);\n    }\n    protected face: SelectFace;\n    protected element: HTMLSelectElement;\n    protected getValueFromElement():any {\n        let {selectedIndex, selectedOptions} = this.element;\n        let v:any = selectedOptions[0].value;\n        switch (this.field.type) {\n            case 'number': v = Number(v); break;\n            case 'date': v = new Date(v); break;\n            case 'bool': \n                if (typeof v === 'string') {\n                    v = ((v as string).toLowerCase() === 'true');\n                }\n                break;\n        }\n        return v;\n    }\n    renderControl():JSX.Element {\n        let {list} = this.face;\n        let def = this.face.default;\n        let options: any[] = [];\n        if (def === undefined)\n            options.push(<option key={-1} value={undefined}>请选择</option>);\n        options.push(...list.map((item, index) => {\n            let t, v;\n            if (typeof item !== 'object') t = v = item;\n            else {\n                t = item.text;\n                v = item.value;\n            }\n            return <option key={index} value={v}>{t}</option>;\n        }));\n        return <div className=\"form-control-static\">\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\n                {options}\n            </select>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\nimport {TextAreaFace} from '../face';\n\nexport class TextAreaControl extends CharsControl {\n    protected field: StringField;\n    protected face: TextAreaFace;\n    private el: HTMLTextAreaElement;\n    protected setProps() {\n        let p = super.setProps();\n        let {maxLength} = this.field;\n        let {rows} = this.face;\n        _.assign(p, {\n            maxLength: maxLength,\n            rows: rows,\n        });\n        return p;\n    };\n    protected renderInput():JSX.Element {\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\n    }\n}\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\nimport { TuidMain, Tuid } from './tuid';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    protected entities: Entities;\n    protected schema: any;\n    private jName: string;\n    sys?: boolean;\n    readonly name: string;\n    readonly typeId: number;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        this.entities = entities;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    protected get tvApi() {return this.entities.uqApi;}\n    async getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = await this.entities.uqApi.schema(this.name);\n        this.setSchema(schema);\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        if (this.schema !== undefined) return;\n        this.schema = schema;\n        let {name, fields, arrs, returns} = schema;\n        if (name !== this.name) this.jName = name;\n        this.entities.buildFieldTuid(this.fields = fields);\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\n        //this.newMain = this.buildCreater(fields);\n        //this.newArr = this.buildArrCreater(arrs);\n        //this.newRet = this.buildArrCreater(returns);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromField(field:Field):Tuid {\n        let {_tuid, tuid} = field;\n        if (tuid === undefined) return;\n        if (_tuid !== undefined) return _tuid;\n        return field._tuid = this.entities.getTuid(tuid, undefined);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.entities;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid, undefined);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    protected buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields; \n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name} = field;\n            let d = params[name];\n            let val:any;\n            switch (typeof d) {\n                default: val = d; break;\n                case 'object':\n                    let tuid = field._tuid;\n                    if (tuid === undefined) val = d.id;\n                    else val = tuid.getIdFromObj(d);\n                    break;\n            }\n            result[name] = val;\n        }\n    }\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n    \n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (typeof d) {\n            default: return d;\n            case 'object':\n                let tuid = field._tuid;\n                if (tuid === undefined) return d.id;\n                return tuid.getIdFromObj(d);\n            case 'string':\n                let len = d.length;\n                let r = '', p = 0;\n                for (let i=0;i<len;i++) {\n                    let c = d.charCodeAt(i);\n                    switch(c) {\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                    }\n                }\n                return r + d.substring(p);\n            case 'undefined': return '';\n        }\n    }\n    \n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n    \n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n    \n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n    \n    unpackReturns(data:string):any {\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n    \n    private unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[f.name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[f.name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) break;\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[f.name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[f.name] = null;\n                }\n                ++p;\n                ++i;\n                break;\n            }\n        }\n        return p;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'date':\n            case 'time':\n                let date = new Date(Number(v));\n                return date;\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'dec': return Number(v);\n            case 'bigint':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                _tuid.useId(id, true);\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport _ from 'lodash';\nimport { Entity } from './entity';\nimport { Entities, Field, ArrFields } from './entities';\nimport { isNumber } from 'util';\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\n\nexport class BoxId {\n    id: number;\n    obj?: any;\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\n    _$com?: any;\n    _$tuid?: Tuid;\n    getObj: ()=>any;\n}\n\nconst maxCacheSize = 1000;\nexport abstract class Tuid extends Entity {\n    private BoxId: ()=>void;\n    get typeName(): string { return 'tuid';}\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private waitingIds: number[] = [];          // 等待loading的\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n    idName: string;\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\n    unique: string[];\n    schemaFrom: {owner:string; uq:string};\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        super(entities, name, typeId);\n        this.buildIdBoxer();\n    }\n\n    abstract get Main();\n\n    private buildIdBoxer() {\n        this.BoxId = function():void {};\n        let prototype = this.BoxId.prototype;\n        Object.defineProperty(prototype, '_$tuid', {\n            value: this,\n            writable: false,\n            enumerable: false,\n        })\n        Object.defineProperty(prototype, 'obj', {\n            enumerable: false,\n            get: function() {\n                if (this.id === undefined || this.id<=0) return undefined;\n                return this._$tuid.valueFromId(this.id);\n            }\n        })\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\n            let t:Tuid = this._$tuid;\n            return t.valueFromFieldName(fieldName, this.obj);\n        }\n        prototype.getObj = function():any {\n            if (this._$tuid !== undefined) {\n                return this._$tuid.getCacheValue(this.id);\n            }\n        }\n        prototype.toJSON = function() {return this.id}\n    }\n    boxId(id:number):BoxId {\n        this.useId(id);\n        let ret:BoxId = new this.BoxId();\n        ret.id = id;\n        return ret;\n    }\n    getTuidContent() {\n        return this.entities.cUq.getTuidContent(this);\n    }\n    getIdFromObj(item:any):number {\n        return item[this.idName];\n    }\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id, unique} = schema;\n        this.idName = id;\n        this.unique = unique;\n        this.schemaFrom = this.schema.from;\n    }\n\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        let tId = typeof id;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getCacheValue(_id);\n    }\n    getCacheValue(id:number) {\n        let v = this.cache.get(id);\n        if (this.owner !== undefined && typeof v === 'object') {\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\n        }\n        return v;\n    }\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\n        if (obj === undefined) return;\n        let f = this.fields.find(v => v.name === fieldName);\n        if (f === undefined) return;\n        let v = obj[fieldName];\n        let {_tuid} = f;\n        if (_tuid === undefined) return v;\n        return _tuid.valueFromId(v);\n    }\n    resetCache(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.useId(id);\n    }\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;\n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.entities.cacheTuids(defer===true?70:20);\n        //let idVal = this.createID(id);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n    async proxied(name:string, id:number):Promise<any> {\n        let proxyTuid = this.entities.getTuid(name, undefined);\n        proxyTuid.useId(id);\n        let proxied = await this.tvApi.proxied(this.name, name, id);\n        this.cacheValue(proxied);\n        return proxied;\n    }\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        //let cacheVal = this.createID(id, val);\n        this.cache.set(id, val);\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\n        /*\n        let {tuids, fields} = this.schema;\n        if (tuids !== undefined && fields !== undefined) {\n            for (let f of fields) {\n                let {name, tuid} = f;\n                if (tuid === undefined) continue;\n                let t = this.entities.tuid(tuid);\n                if (t === undefined) continue;\n                t.useId(val[name]);\n            }\n        }*/\n        return true;\n    }\n    protected afterCacheId(tuidValue:any) {\n        for (let f of this.fields) {\n            let {_tuid} = f;\n            if (_tuid === undefined) continue;\n            _tuid.useId(tuidValue[f.name]);\n        }\n    }\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let name:string, arr:string;\n        if (this.owner === undefined) {\n            name = this.name;\n        }\n        else {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        let api = await this.getApiFrom();\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n            this.afterCacheId(tuidValue);\n        }\n        await this.cacheDivIds();\n    }\n    protected async cacheDivIds():Promise<void> {\n    }\n    async load(id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = await this.getApiFrom();\n        let values = await api.tuidGet(this.name, id);\n        if (values === undefined) return;\n        values._$tuid = this;\n        this.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n    protected getDiv(divName:string):TuidDiv {return;}\n    private cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.getDiv(name);\n                for (let row of arrValues) {\n                    row._$tuid = tuidDiv;\n                    row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n    private cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n    async save(id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        let ret = await this.tvApi.tuidSave(this.name, params);\n        let {id:retId, inId} = ret;\n        if (retId === undefined) {\n            params.id = id;\n            this.cacheValue(params);\n        }\n        else if (retId > 0) {\n            params.id = retId;\n            this.cacheValue(params);\n        }\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let {fields} = this.schema;\n        let name:string, arr:string;\n        if (this.owner !== undefined) {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        else {\n            name = this.name;\n            arr = undefined;\n        }\n        let api = await this.getApiFrom();\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = await this.getApiFrom();\n        return await api.tuidArrGet(this.name, arr, owner, id);\n    }\n    /*\n    async loadArrAll(owner:number):Promise<any[]> {\n        return this.all = await this.tvApi.tuidGetAll(this.name);\n    }*/\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\n    }\n    \n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\n    //private async ids(idArr:number[]) {\n    //    return await this.tvApi.tuidIds(this.name, idArr);\n    //}\n    async showInfo(id:number) {\n        await this.entities.cUq.showTuid(this, id);\n    }\n}\n\nexport class TuidMain extends Tuid {\n    get Main() {return this}\n    get uqApi() {return this.entities.uqApi};\n\n    divs: {[name:string]: TuidDiv};\n    proxies: {[name:string]: TuidMain};\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\n                tuidDiv.owner = this;\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n            }\n        }\n    }\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\n    /* 努力回避async里面的super调用，edge不兼容\n    async cacheIds():Promise<void> {\n        await super.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n    */\n    protected async cacheDivIds():Promise<void> {\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n\n    async cUqFrom(): Promise<CUq> {\n        if (this.schemaFrom === undefined) return this.entities.cUq;\n        let {owner, uq: uq} = this.schemaFrom;\n        let cUq = await this.entities.cUq\n        let cApp = cUq.cApp;\n        if (cApp === undefined) return cUq;\n        let cUqFrm = await cApp.getImportUq(owner, uq);\n        if (cUqFrm === undefined) {\n            console.error(`${owner}/${uq} 不存在`);\n            debugger;\n            return cUq;\n        }\n        let retErrors = await cUqFrm.loadSchema();\n        if (retErrors !== undefined) {\n            console.error('cUq.loadSchema: ' + retErrors);\n            debugger;\n            return cUq;\n        }\n        return cUqFrm;\n    }\n\n    async getApiFrom() {\n        let from = await this.from();\n        if (from !== undefined) {\n            return from.entities.uqApi;\n        }\n        return this.entities.uqApi;\n    }\n\n    async from(): Promise<TuidMain> {\n        let cUq = await this.cUqFrom();\n        return cUq.tuid(this.name);\n    }\n\n    async cFrom(): Promise<CTuidMain> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidMainFromName(this.name);\n    }\n\n    async cEditFrom(): Promise<CTuidEdit> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidEditFromName(this.name);\n    }\n\n    async cInfoFrom(): Promise<CTuidInfo> {\n        let cUq = await this.cUqFrom();\n        return cUq.cTuidInfoFromName(this.name);\n    }\n\n    async cSelectFrom(): Promise<CTuidSelect> {\n        let cUq = await this.cUqFrom();\n        if (cUq === undefined) return;\n        return cUq.cTuidSelectFromName(this.name);\n    }\n\n    protected afterCacheId(tuidValue:any) {\n        super.afterCacheId(tuidValue);\n        if (this.proxies === undefined) return;\n        let {type, $proxy} = tuidValue;\n        let pTuid = this.proxies[type];\n        pTuid.useId($proxy);\n    }\n}\n\nexport class TuidDiv extends Tuid {\n    get Main() {return this.owner}\n\n    async getApiFrom() {\n        return await this.owner.getApiFrom();\n    }\n}\n","import {Entity} from './entity';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        await this.loadSchema();\n        let text = this.pack(data);\n        return await this.tvApi.action(this.name, {data:text});\n    }\n}\n\n","import {observable, IObservableArray} from 'mobx';\nimport {Entity} from './entity';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        await this.loadSchema();\n        let {appId} = this.entities;\n        let text = this.pack(data);\n\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\n        return ret;\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        await this.loadSchema();\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n    }\n    private async unpack(data:any):Promise<any> {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.getSheet(this.name, id);\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return await this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchive(this.name, id)\n        return await this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        await this.loadSchema();\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {observable, IObservableArray} from 'mobx';\nimport {Field, ArrFields} from './entities';\nimport {Entity} from './entity';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        this.returns = returns;\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw 'call resetPage(size:number, params:any) first';\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n    async query(params:any):Promise<any> {\n        await this.loadSchema();\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\nimport { Field } from './entities';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.entities.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let schema = actions[i];\n            let {name} = schema;\n            let action = this.entities.newAction(name, undefined);\n            action.setSchema(schema);\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let schema = queries[i];\n            let {name} = schema;\n            let query = this.entities.newQuery(name, undefined);\n            query.setSchema(schema);\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n    }\n\n    async del(param:any) {\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n    }\n\n    async all() {\n        await this.loadSchema();\n        return await this.queries.all.query({});\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n    }\n\n    async query(param:any) {\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import {TuidMain, Tuid} from './tuid';\nimport {Action} from './action';\nimport {Sheet, SheetState, SheetAction} from './sheet';\nimport {Query} from './query';\nimport {Book} from './book';\nimport {History} from './history';\nimport { UqApi } from 'tonva-tools';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { CUq } from '../controllers';\n\nexport type FieldType = 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text' \n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text': \n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    url?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _ownerField: Field;\n    _tuid: Tuid;\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\n\nexport class Entities {\n    private tuids: {[name:string]: TuidMain} = {};\n    private actions: {[name:string]: Action} = {};\n    private sheets: {[name:string]: Sheet} = {};\n    private queries: {[name:string]: Query} = {};\n    private books: {[name:string]: Book} = {};\n    private maps: {[name:string]: Map} = {};\n    private histories: {[name:string]: History} = {};\n    private pendings: {[name:string]: Pending} = {};\n    private cacheTimer: any;\n    cUq: CUq;\n    uqApi: UqApi;\n    appId: number;\n    uqId: number;\n\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\n        this.cUq = cUq;\n        this.uqApi = uqApi;\n        this.appId = appId;\n    }\n\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: TuidMain[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    async loadAccess() {\n        let accesses = await this.uqApi.loadAccess();\n        if (accesses === undefined) return;\n        this.buildEntities(accesses);\n    }\n\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n\n    private buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        let {access, tuids} = entities;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\n        let tuid = this.tuids[name];\n        if (tuid === undefined) return;\n        if (div === undefined) return tuid;\n        return tuid.divs[div];\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.cacheIds();\n        }\n    }\n\n    private buildTuids(tuids:any) {\n        let proxyColl = {} as any;\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name, typeId, proxies} = schema;\n            let tuid = this.newTuid(i, typeId);\n            tuid.sys = true;\n            //tuid.setSchema(schema);\n            if (proxies !== undefined) proxyColl[i] = proxies;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name} = schema;\n            let tuid = this.getTuid(i);\n            //tuid.sys = true;\n            tuid.setSchema(schema);\n        }\n        for (let i in proxyColl) {\n            let proxies:string[] = proxyColl[i];\n            let tuid = this.tuids[i];\n            tuid.proxies = {};\n            for (let p of proxies) {\n                tuid.proxies[p] = this.tuids[p];\n            }\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n        /*\n        for (let tuid of this.tuidArr) {\n            tuid.setProxies(this);\n        }*/\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    newTuid(name:string, id:number):TuidMain {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            case 'uq': this.uqId = id; break;\n            case 'tuid': \n                let tuid = this.newTuid(name, id);\n                tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n        /*\n        let states = sheet.states;\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    /*\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }*/\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid, arr, url} = f;\n            if (tuid === undefined) continue;\n            f._tuid = this.getTuid(tuid, arr, url);\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    throw `owner field ${owner} is undefined`;\n                }\n            }\n            f._ownerField = ownerField;\n            let {arr, url} = f;\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n}\n","export * from './entities';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\n","import * as React from 'react';\nimport { CApp, AppUI } from './controllers';\nexport * from './entities';\nexport * from './controllers';\nexport * from './centerApi';\nexport * from './tools';\n\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n\n// const appName = 'JKDev/jkOrder';\nexport async function startApp(appName:string, ui: AppUI) {\n    convertUIKeyToLowercase(ui);\n    let cApp = new (ui && ui.CApp || CApp)(appName, ui || {uqs:{}} );\n    await cApp.start();\n}\n","import * as React from 'react';\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\n\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\n\nexport abstract class RowContainer {\n    protected form:FormView;\n    protected row: FormRow;\n    protected control: ControlBase;\n    constructor(form:FormView, row: FormRow) {\n        this.form = form;\n        this.row = row;\n        if ((row as JSX.Element).type === undefined) {\n            let cc:CreateControl = (row as LabelFormRow).createControl;\n            if (cc === undefined) cc = form.createControl;\n            if (cc === undefined) cc = createControl;\n            this.control = cc(form, row);\n        }\n    }\n    abstract render(key:string):JSX.Element;\n    \n    isOk():boolean {\n        if (this.control === undefined) return true;\n        return this.control.isOk();\n    }\n\n    contains(fieldName:string):boolean {\n        let field = (this.row as FieldRow).field;\n        if (field !== undefined) return fieldName === field.name;\n        let group = (this.row as GroupRow).group;\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\n        return false;\n    }\n    get hasError():boolean {return this.control.hasError;}\n    get filled():boolean {return this.control.filled;}\n    clear() {\n        if (this.control !== undefined) this.control.clear();\n    }\n    clearErrors() {\n        if (this.control !== undefined) this.control.clearErrors();\n    }\n    readValues(values:any):any {\n        if (this.control !== undefined) this.control.readValues(values);\n    }\n    setError(fieldName:string, error:string) {\n        if (this.control !== undefined) this.control.setError(fieldName, error);\n    }\n    setInitValues(values:any) {\n        if (this.control !== undefined) this.control.setInitValues(values);\n    }\n}\n\nclass ElementRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\n    }\n    get hasError():boolean {return false;}\n    get filled():boolean {return false;}\n}\n\nclass BootStrapRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className='form-group row'>\n            <label className='col-sm-2 col-form-label'>\n                {(this.row as LabelFormRow).label}\n            </label>\n            {this.control.render()}\n        </div>;\n\n        //has-success is-valid\n    }\n}\n\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new BootStrapRowContainer(form, row);\n}\n\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new ElementRowContainer(form, row);\n}\n","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {nav, mobileHeaderStyle} from './nav';\nimport { Page } from './page';\n\nexport interface TitleBarProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>void);\n}\nexport interface TitleBarState {\n    hasBack: boolean;\n}\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n    private navChangeHandler: ()=>void;\n    constructor(props) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n    private logout() {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            logout(); \n        }\n        nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || self != top;\n        let {right, center, logout} = this.props;\n        let back, pop, debugLogout;\n        if (logout !== undefined && self === top) {\n            if (typeof logout === 'boolean' && logout === true\n                || typeof logout === 'function')\n            {\n                let name : string = nav.user && (nav.user.nick || nav.user.name);\n                debugLogout = <div className=\"d-flex align-items-center\">\n                    <small className=\"text-light\">{name}</small>\n                    <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\n                        role=\"button\"\n                        onClick={this.logoutClick}>\n                        <i className=\"fa fa-sign-out\" />\n                    </a>\n                </div>;\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (self != top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView;\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\n        return (\n        <header style={mobileHeaderStyle}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>\n        );\n    }\n}\n","import React from 'react';\nimport { jsonStringify } from '../../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { List, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { TuidMain, Query, Entity } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {name, list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { Query } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from \"react\";\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Query } from \"../../entities\";\nimport { VQueryMain } from \"./vQueryMain\";\nimport { VQuerySelect } from \"./vQuerySelect\";\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n\n/*\nexport function Loading() {\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\n        加载中...\n    </div>\n    </div>\n}\n*/\n\n\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    //url: string;\n    className?: string;\n    multiple?: boolean;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Page, loadAppUqs, nav, meInFrame, Controller, TypeVPage, VPage, resLang} from 'tonva-tools';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { CUq, EntityType, UqUI } from './uq';\nimport { centerApi } from '../centerApi';\n\nexport interface AppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI};\n    res?: any;\n}\n\nexport class CApp extends Controller {\n    private appOwner:string;\n    private appName:string;\n    private isProduction:boolean;\n    private cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    id: number;\n    appUnits:any[];\n\n    constructor(tonvaApp:string, ui?:AppUI) {\n        super(resLang(ui && ui.res));\n        let parts = tonvaApp.split('/');\n        if (parts.length !== 2) {\n            throw 'tonvaApp name must be / separated, owner/app';\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n        this.ui = ui || {uqs:{}};\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    readonly caption: string; // = 'View Model 版的 Uq App';\n    cUqCollection: {[uq:string]: CUq} = {};\n\n    async startDebug() {\n        let appName = this.appOwner + '/' + this.appName;\n        let cApp = new CApp(appName, {uqs:{}} );\n        let keepNavBackButton = true;\n        await cApp.start(keepNavBackButton);    \n    }\n\n    protected async loadUqs(): Promise<string[]> {\n        let retErrors:string[] = [];\n        let unit = meInFrame.unit;\n        let app = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = app;\n        this.id = id;\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        for (let appUq of uqs) {\n            let {id:uqId, uqOwner, uqName, url, urlDebug, ws, access, token} = appUq;\n            let uq = uqOwner + '/' + uqName;\n            let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n            let cUq = this.newCUq(uq, uqId, access, ui || {});\n            this.cUqCollection[uq] = cUq;\n            promises.push(cUq.loadSchema());\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    nav.start();\n                    return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n\n    async getImportUq(uqOwner:string, uqName:string):Promise<CUq> {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.newCUq(uq, uqId, undefined, ui || {});\n        let retError = await cUq.loadSchema();\n        if (retError !== undefined) {\n            console.error(retError);\n            debugger;\n            return;\n        }\n        return cUq;\n    }\n\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(apiName:string):CUq {\n        return this.cUqCollection[apiName];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        try {\n            let hash = document.location.hash;\n            if (hash.startsWith('#tvdebug')) {\n                this.isProduction = false;\n                //await this.showMainPage();\n                //return;\n            }\n            else {\n                this.isProduction = hash.startsWith('#tv');\n            }\n            let {unit} = meInFrame;\n            if (this.isProduction === false && (unit===undefined || unit<=0)) {\n                let app = await loadAppUqs(this.appOwner, this.appName);\n                let {id} = app;\n                this.id = id;\n                await this.loadAppUnits();\n                switch (this.appUnits.length) {\n                    case 0:\n                        // this.showUnsupport();\n                        // return false;\n                        meInFrame.unit = 0;\n                        break;\n                    case 1:\n                        unit = this.appUnits[0].id;\n                        if (unit === undefined || unit < 0) {\n                            this.showUnsupport();\n                            return false;\n                        }\n                        meInFrame.unit = unit;\n                        break;\n                    default: \n                        //nav.clear();\n                        nav.push(<this.selectUnitPage />)\n                        return false;\n                }\n            }\n\n            let retErrors = await this.loadUqs();\n            if (retErrors !== undefined) {\n                this.openPage(<Page header=\"ERROR\">\n                    <div className=\"m-3\">\n                        <div>Load Uqs 发生错误：</div>\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\n                    </div>\n                </Page>);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            nav.push(<Page header=\"App start error!\">\n                <pre>\n                    {typeof err === 'string'? err : err.message}\n                </pre>\n            </Page>);\n            return false;\n        }\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n    async load() {\n        await this.beforeStart();\n    }\n\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport() {\n        this.clearPrevPages();\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">\n                        <FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col\">\n                        用户不支持APP\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">用户: </div>\n                    <div className=\"col\">{`${nav.user && nav.user.name}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">App:</div>\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\n                </div>\n            </div>\n        </Page>)\n    }\n\n    private async showMainPage() {\n        // #tvRwPBwMef-23-sheet-api-108\n        let parts = document.location.hash.split('-');\n        if (parts.length > 2) {\n            let action = parts[2];\n            // sheet_debug 表示centerUrl是debug方式的\n            if (action === 'sheet' || action === 'sheet_debug') {\n                let uqId = Number(parts[3]);\n                let sheetTypeId = Number(parts[4]);\n                let sheetId = Number(parts[5]);\n                let cUq = this.getCUqFromId(uqId);\n                if (cUq === undefined) {\n                    alert('unknown uqId: ' + uqId);\n                    return;\n                }\n                this.clearPrevPages();\n                await cUq.navSheet(sheetTypeId, sheetId);\n                return;\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.id === uqId) return cUq;\n        }\n        return;\n    }\n\n    private async loadAppUnits() {\n        let ret = await centerApi.userAppUnits(this.id);\n        this.appUnits = ret;\n        if (ret.length === 1) {\n            meInFrame.unit = ret[0].id;\n        }\n    }\n\n    renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    onRowClick = async (item: any) => {\n        meInFrame.unit = item.id; // 25;\n        await this.start();\n    }\n\n    protected selectUnitPage = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nclass VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage() {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={()=>{meInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n","export * from './rule';\nexport * from './field';\nexport * from './face';\nexport * from './rowContainer';\nexport * from './formView';\nexport * from './TonvaForm';\nexport {ControlBase} from './control';\n","import * as React from 'react';\nimport {FormEvent} from 'react';\nimport {computed} from 'mobx';\nimport {uid} from '../uid';\nimport {Rule} from './rule';\nimport {Field} from './field';\nimport {Face} from './face';\nimport {CreateControl, ButtonsControl} from './control';\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\n\nexport interface FieldView {\n    field: Field;\n    face?: Face;\n}\n\nexport interface LabeledRow {\n    label?: string;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    help?: JSX.Element;\n}\n\nexport interface FieldRow extends LabeledRow, FieldView {\n}\n\nexport interface GroupRow extends LabeledRow {\n    group: FieldView[];\n}\n\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\nexport type FormRow = LabelFormRow|JSX.Element;\n\nexport interface SubmitResult {\n    success: boolean;\n    message?: string\n    result?: any;\n}\n\nexport interface FormProps {\n    formRows: FormRow[];\n    //context?: any;              // form context，比如，可以是EntitiesUI\n    rules?: Rule | Rule[];\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n    otherButton?: string|JSX.Element;\n    onOther?: (values:any) => void;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    readOnly?: boolean;\n}\n\nexport class FormView {\n    uid:string;\n    private rows: RowContainer[] = [];\n    private buttonsRow: RowContainer;\n    props: FormProps;\n    createControl?: CreateControl;\n    constructor(props:FormProps) {\n        this.uid = uid();\n        this.props = props;\n        this.buildRows(props);\n        this.createControl = props.createControl;\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    @computed get hasError():boolean {\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\n        console.log(ret);\n        return this.rows.some(row => row.hasError);\n    }\n    @computed get nothing():boolean {\n        let ret = this.rows.every(row => !row.filled);\n        return ret;\n    }\n\n    readValues():any {\n        let values = {} as any;\n        for (let row of this.rows) {\n            row.readValues(values);\n        }\n        return values;\n    }\n\n    clear() {\n        for (let row of this.rows) {\n            row.clear();\n        }\n    }\n\n    clearErrors() {\n        for (let row of this.rows) {\n            row.clearErrors();\n        }\n    }\n\n    setError(fieldName:string, error:string) {\n        for (let row of this.rows) {\n            row.setError(fieldName, error);\n        }\n    }\n\n    setInitValues(initValues:any) {\n        if (initValues === undefined) return;\n        for (let row of this.rows) {\n            row.setInitValues(initValues);\n        }\n    }\n\n    private buildRows(props:FormProps) {\n        let {formRows, createRow} = props;\n        if (formRows !== undefined) {\n            for (let row of formRows) {\n                this.rows.push(this.buildRow(row, createRow));\n            }\n            if (this.props.readOnly !== true) {\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\n            }\n        }\n        else {\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\n        }\n    }\n\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\n        let createRow:CreateRow;\n        let type = (formRow as JSX.Element).type;\n        if (type !== undefined) {\n            createRow = elementCreateRow;\n        }\n        else {\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\n            if (createRow === undefined) {\n                createRow = formRowCreator;\n                if (createRow === undefined) createRow = bootstrapCreateRow;\n            }\n        }\n        let row = createRow(this, formRow);\n        return row;\n    }\n\n    private createButtons(form:FormView, row: FormRow) {\n        return new ButtonsControl(form);\n    }\n\n    private isOk():boolean {\n        let isOk = true;\n        for (let row of this.rows) {\n            if (!row.isOk()) isOk = false;\n        }\n        return isOk;\n    }\n\n    render():JSX.Element {\n        return <form onSubmit={this.onSubmit}>\n            {this.rows.map((row,index) => row.render(this.uid + index))}\n            {this.buttons()}\n        </form>;\n    }\n\n    buttons():JSX.Element {\n        if (this.buttonsRow === undefined) return;\n        return this.buttonsRow.render(this.uid + this.rows.length);\n    }\n    \n    async onSubmit(event:FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (!this.isOk()) return;\n        let values = this.readValues();\n        await this.props.onSubmit(values);\n    }\n}\n","import React from 'react';\nimport { FA } from \"tonva-react-form\";\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n/*\nexport interface EntityRes {\n    caption: string;\n    icon: JSX.Element;\n}\n*/\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from \"tonva-tools\";\nimport { CUq } from \"./uq\";\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\n\n//\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable, reaction } from 'mobx';\n\nexport abstract class Widget {\n    protected name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable protected errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n        /*\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(evt.currentTarget.value);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n        */\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    renderContainer():JSX.Element {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            label = uiLabel || this.name;\n        }\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.render());\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown: (evt:React.KeyboardEvent<HTMLInputElement>)=>void;\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.removeErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleNum(res, min, max) :\n                new RuleInt(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || key>=48 && key<=57\n            || key>=96 && key<=105\n            || key===109 || key===189;\n    }\n    \n    protected onKeyDown = (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        let key = evt.keyCode;\n        event.returnValue = this.isValidKey(key);\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.removeErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        return this.context.inNode?\n            <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n            :\n            <div className={cn}>{input}</div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            this.context.checkRules()\n            if (this.context.hasError === true) {\n                return;\n            }\n        }\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, label:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            label = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = label; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    render() {\n        return <this.observerRender />\n    }\n\n    renderContainer():JSX.Element {\n        if (this.visible === false) return null;        \n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        return form.FieldContainer(null, this.render());\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.removeErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.removeErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {isRow, widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.renderContainer());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.renderContainer();\n        return widgetElement;\n    }\n}\n\n","import * as React from 'react';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        return <textarea ref={(input) => this.input=input} \n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow, inNode} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'form-radio-inline');\n        return <span className={cn}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n/*\n<div className=\"form-control d-flex border-0\"><input\nref={(input)=>this.input = input}\nclassName={classNames(this.className, 'align-self-center')}\ntype=\"checkbox\"\nstyle={{maxHeight:\"1.2em\"}}\ndefaultValue={this.defaultValue} \nonChange={this.onChange} />\n</div>\n*/","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","export { factory } from './factory';\nexport { Widget } from './widget';\nexport { TextWidget } from './textWidget';\nexport { TextAreaWidget } from './textareaWidget';\nexport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nexport { UpdownWidget } from './updownWidget';\nexport { NumberWidget } from './numberWidget';\nexport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nexport { CheckBoxWidget } from './checkBoxWidget';\nexport { Context, RowContext, FormContext, ContextContainer } from '../context';\nexport { SelectWidget } from './selectWidget';\nexport { RadioWidget } from './radioWidget';\nexport { RangeWidget } from './rangeWidget';\nexport { IdWidget } from './idWidget';\nexport { ButtonWidget } from './buttonWidget';\nexport { Unknown } from './unknown';\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page } from 'tonva-tools';\nimport { List, Muted, LMR } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, user, preState, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VForm, FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { nav, Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {id, no, discription, date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, nav } from 'tonva-tools';\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {id, no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {Page} from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nexport interface State {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + ':' + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import { Sheet } from \"../../entities\";\nimport { SheetUI, CSheet } from \"./cSheet\";\nimport { VEntity } from \"../CVEntity\";\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheet } from \"./vSheet\";\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import React from 'react';\nimport { nav, Page } from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from \"mobx\";\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\nimport { Sheet, StateCount } from \"../../entities\";\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\nimport { VSheetMain } from \"./vMain\";\nimport { VSheetNew } from \"./vNew\";\nimport { VSheetEdit } from \"./vEdit\";\nimport { VSheetAction } from \"./vSheetAction\";\nimport { VSheetSchema } from \"./vSchema\";\nimport { VArchives } from \"./vArchives\";\nimport { VSheetList } from \"./vList\";\nimport { VArchived } from \"./vArchived\";\nimport { VSheetSaved } from \"./vSaved\";\nimport { VSheetProcessing } from \"./vSheetProcessing\";\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to, push} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport { TuidMain, Book, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Book } from \"../../entities\";\nimport { VBookMain } from \"./vBookMain\";\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from \"react\";\nimport { View } from \"tonva-tools\";\nimport { List, Muted } from \"tonva-react-form\";\nimport { Entity } from \"../../entities\";\nimport { CLink } from \"../link\";\nimport { CUq } from \"./cUq\";\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { UqApi, Controller, UnitxApi, meInFrame, resLang, nav } from 'tonva-tools';\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../CApp';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        this.uq = uq;\n        this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        let token = undefined;\n        let uqOwner:string, uqName:string;\n        let p = uq.split('/');\n        switch (p.length) {\n            case 1:\n                uqOwner = '$$$';\n                uqName = p[0];\n                break;\n            case 2:\n                uqOwner = p[0];\n                uqName = p[1];\n                break;\n            default:\n                console.log('uq must be uqOwner/uqName format');\n                return;\n        }\n\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        let uqApi:UqApi;\n        if (uq === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            uqApi = new UnitxApi(meInFrame.unit);\n        }\n        else {\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.entities = new Entities(this, uqApi, appId);\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    uq: string;\n    id: number;\n    res: any;\n    entities:Entities;\n    error: string;\n    private schemaLoaded:boolean = false;\n\n    protected async loadEntites() {\n        await this.entities.loadAccess();\n    }\n\n    async loadSchema():Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.loadEntites();\n            if (this.id === undefined) this.id = this.entities.uqId;\n\n            for (let i in this.ui) {\n                let g = this.ui[i];\n                if (g === undefined) continue;\n                let {caption, collection} = g;\n                if (collection === undefined) continue;\n                for (let j in collection) {\n                    if (this.entities[i](j) === undefined) {\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\n                    }\n                }\n            }\n            this.schemaLoaded = true;\n            return;\n        }\n        catch(err) {\n            console.error(err);\n            return this.error = err;\n            //debugger;\n            //return err.message;\n        }\n    }\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.entities.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\n    action(entityName:string) {return this.entities.action(entityName);}\n    query(entityName:string) {return this.entities.query(entityName);}\n    book(entityName:string) {return this.entities.book(entityName);}\n    map(entityName:string) {return this.entities.map(entityName);}\n    history(entityName:string) {return this.entities.history(entityName);}\n    pending(entityName:string) {return this.entities.pending(entityName);}\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        let tuid = this.entities.tuid(entityName);\n        if (tuid === undefined) return;\n        let {divs} = tuid;\n        if (divs === undefined) return;\n        return divs[divName];\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.entities.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.entities.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.entities.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.entities.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.entities.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.entities.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.entities.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.entities.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.entities.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.entities.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.entities.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.entities.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.entities.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.entities.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.entities.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui, res;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            let tUI = this.ui[typeName];\n            if (tUI !== undefined) {\n                ui = tUI[name];\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:TuidMain):CTuidMain {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:TuidMain):CTuidList {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.entities.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {owner} = tuid;\n        if (owner === undefined) {\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n            return (ui && ui.content) || PureJSONContent;\n        }\n        else {\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\n        }\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { tv } from '../../tools';\nimport { Map } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\nimport { PureJSONContent } from '../form/viewModel';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add, remove;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content, border, valuesView;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = \"border-bottom\";\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)} \n                right={right}\n            >\n                <div className=\"py-1\">{tv(box, keyContent, this.x)}</div>\n                <div className=\"py-1 font-weight-bold\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from \"../CVEntity\";\nimport { MapUI, CMap } from \"./cMap\";\nimport { Map } from \"../../entities\";\nimport { Page } from \"tonva-tools\";\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\nimport { VMapMain } from \"./vMain\";\nimport { observable } from \"mobx\";\nimport { PureJSONContent } from '../form/viewModel';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuid = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children, box} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid, _ownerField} = keyField;\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\n        let callParam = param;\n        if (_ownerField !== undefined) {\n            callParam = param[_ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {name, type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main);\n        let label = cTuidMain.getLable(tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import * as React from 'react';\nimport { VPage, Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../entities';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Action } from \"../../entities\";\nimport { VActionMain } from \"./vActionMain\";\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","import * as React from 'react';\nimport { TuidMain, History, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { History } from \"../../entities\";\nimport { VHistoryMain } from \"./vHistoryMain\";\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","import * as React from 'react';\nimport { TuidMain, Pending, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Pending } from \"../../entities\";\nimport { VPendingMain } from \"./vPendingMain\";\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {User} from '../user';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { isDevelopment } from '../net';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\n        await (new vp(this)).open(param);\n    }\n\n    protected renderView(view: new (coordinator: Controller)=>View<Controller>, param?:any) {\n        return (new view(this)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any):Promise<void>;\n    async start(param?:any):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call(param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param);\n        });\n    }\n\n    async vCall(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Coordinator call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (coordinator: Controller)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (coordinator: Controller)=>VPage<Controller>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    constructor(coordinator: C) {\n        super(coordinator);\n    }\n\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (coordinator: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if (this.isFirst===true && len>this.firstSize ||\n            this.isFirst===false && len>this.pageSize)\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import {observable, computed} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport {FormView, FormProps} from './formView';\n\nexport function tonvaDebug() {\n    let a = 0;\n}\n\nexport interface TonvaFormProps extends FormProps {\n    className?: string;\n    initValues?: any;\n}\n\n@observer \nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\n    formView: FormView;\n    constructor(props:TonvaFormProps) {\n        super(props);\n        this.formView = new FormView(this.props);\n    }\n    componentWillMount() {\n        this.formView.setInitValues(this.props.initValues);\n    }\n    debug() {\n        let s = null;\n    }\n    render() {\n        let {className, children, initValues} = this.props;\n        return <div className={className}>\n            {\n                children === undefined? \n                    this.formView.render() : \n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\n            }\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Action {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: Action[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | string;\n}\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        let {date} = this.props;\n        if (!date) return null;\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\n        let now = new Date();\n        let tick = now.getTime() - d.getTime();\n        let nDate=now.getDate();\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\n        let hm = hour + ((minute<10?':0':':') + minute);\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\n        if (tick < 24*3600*1000) {\n            return _date!==nDate? \n                (tick < 0? '明天 ' : '昨天 ') + hm \n                : hm;\n        }\n        if (tick < 365*24*3600*1000) {\n            return month+'月'+_date+'日 ';\n        }\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\n    }\n}\n","import * as React from 'react';\nimport * as className from 'classnames';\nimport {observer} from 'mobx-react';\n\nexport interface MediaProps {\n    icon: string|JSX.Element;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nconst imgStyle = {\n    width: '4rem', \n    height: '4rem',\n};\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let img = icon;\n        if (typeof icon === 'string')\n            img = <img className=\"d-flex mr-3\" src={icon} alt=\"img\" style={imgStyle} />;\n        let cn = className(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            {img}\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport className from 'classnames';\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\n\nexport interface Step {\n    formRows: FormRow[];\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\n    ex?: any;                                   // 每一步额外的参数\n}\n\nexport interface MultiStepProps {\n    className?: string;\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    steps: {[name:string]: Step};\n    first: string;         // 第一步的名字\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n}\n\nexport interface StepView {\n    stepName: string;\n    step: Step;\n    props: FormProps;\n    //view: JSX.Element;\n}\nexport interface MultiStepState {\n    //num: number;\n    //step: Step;\n    //formView: FormView;\n    topView: StepView;\n    stepViews: StepView[];\n}\n\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\n    private values: any = {};\n    private stepViews: StepView[] = [];\n    private topView: StepView;\n    constructor(props) {\n        super(props);\n        this.state = {\n            topView: undefined,\n            stepViews: [],\n        }\n        this.onPrev = this.onPrev.bind(this);\n        this.onNext = this.onNext.bind(this);\n    }\n    \n    private setStep(stepName: string) {\n        let step = this.props.steps[stepName];\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\n        let otherButton, onOther;\n        if (this.stepViews.length > 0) {\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\n            onOther = this.onPrev;\n        }\n        let {header, footer} = this.props;\n        let btnContent = step.next === undefined?\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\n            {suffix: 'arrow-right', text: '下一步'}\n        let formProps = {\n            formRows: step.formRows,\n            submitButton: <ButtonConten {...btnContent} />,\n            onSubmit: this.onNext,\n            otherButton: otherButton,\n            onOther: onOther,\n        };\n        let num = this.stepViews.length + 1;\n        this.topView = {\n            stepName: stepName,\n            step: step,\n            props: formProps,\n        };\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    componentWillMount() {\n        this.setStep(this.props.first);\n    }\n    private onPrev(values:any) {\n        _.assign(this.values, values);\n        this.topView = this.stepViews.pop();\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    private onNext(values:any): Promise<SubmitResult|undefined> {\n        _.assign(this.values, values);\n        //let {num, step} = this.state;\n        let {next} = this.topView.step;\n        if (next === undefined) {\n            return this.props.onSubmit(this.values)\n        }\n        let nextStepName:string;\n        if (typeof next === 'string') {\n            nextStepName = next;\n        }\n        else {\n            nextStepName = next(this.values);\n        }\n        this.setStep(nextStepName);\n    }\n    render() {\n        let {className, header, footer} = this.props;\n        let {topView, stepViews} = this.state;\n        let {stepName, step} = topView;\n        let hidden = {visibility: 'hidden'};\n        let num = stepViews.length + 1;\n        return <div className={className}>\n            <div>\n                {header && header(step, num)}\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\n                {footer && footer(step, num)}\n            </div>\n        </div>;\n    }\n}\n\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\n    let {prefix, text, suffix} = props;\n    let pIcon, sIcon;\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\n}\n    \n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as classNames from 'classnames';\nimport '../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from 'tonva-tools';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return; }\n    updateProps(nextProps:any) {}\n    abstract render(item:any, index:number):JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport { uid } from '../uid';\n\nexport class Static extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, render} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, computed, IObservableArray} from 'mobx';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../uid';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    private _items: SelectableItem[];\n    private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private buildItems() {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            return this._items = undefined;\n        }\n        if (items === null) {\n            return this._items = null;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        this._selectedItems = selectedItems;\n        if (selectedItems === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:false, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        if (compare === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:selectedItems.find(si => si === v) !== undefined, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        return this._items = itemsArray.map(v => {\n            return {\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \n                item:v, \n                labelId:uid()\n            };\n        });\n    }\n    @computed get items() {\n        //if (this._items === undefined) \n        this.buildItems();\n        return this._items;\n    }\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render(item:SelectableItem, index:number):JSX.Element {\n        let {className, key, render, onSelect} = this.list.props.item;\n        let {labelId, selected} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(item.item, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from 'tonva-tools';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport \"../css/va-list.css\";\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string;\n    };\n    compare?:(item:any, selectItem)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    constructor(props:ListProps) {\n        super(props);\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        this.listBase.updateProps(nextProps);\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\n        if (before === undefined) before = 'before';\n        if (loading === undefined) loading = 'loading';\n        if (none === undefined) none = 'none';        \n        //this.listBase.selectedItems = selectedItems;\n        let {isPaged, items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n}\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.newValue)}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId:string;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;\n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    /*\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n    */\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        this.resId = await this.resUploader.upload();\n        this.isChanged = (this.resId != this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>上传图片：\n                    <ResUploader ref={v=>this.resUploader=v} />\n                    <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\n                </div>\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"mr-5\" style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-12c h-12c\" src={this.resId} />\n                    </div>\n                    <div className=\"ml-5\">\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\n    private defaultRowContainerClassName = \"px-3 py-2 cursor-pointer bg-white\";\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            if (i>0) elItems.push(this.sep);\n            elItems.push(this.renderRow(schema[i]));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\n        let {name, type} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string = (uiItem && uiItem.label) || name;\n        let value:any = this.props.data[name];\n        switch (type) {\n            default:\n                divValue = <b>{value}</b>;\n                break;\n            case 'image':\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                break;\n        }\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-2\">{label}</div>\n                <div className=\"col-sm-9 text-right\">{divValue}</div>\n                <div className=\"col-sm-1 text-right\"><i className=\"fa fa-chevron-right\" /></div>\n            </div>\n        </div>;\n    }\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick} = this.props;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue != value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    else {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n/*    \n    ArrContainer?: (label:any, content:JSX.Element) => JSX.Element;\n    RowContainer?: (content:JSX.Element) => JSX.Element;\n    RowSeperator?: JSX.Element;\n*/\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    private content: any;\n    private formData: any;\n    private disposer: IReactionDisposer;\n    @observable readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, formData, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, \n            res,\n            //ArrContainer, RowContainer, //ArrFieldContainer, \n            //RowSeperator,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n        //this.ArrContainer = ArrContainer || this.DefaultArrContainer;\n        //this.RowContainer = RowContainer || this.DefaultRowContainer;\n        //this.RowSeperator = RowSeperator || this.DefaultRowSeperator;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n        this.formData = formData;\n        this.disposer = autorun(this.calcSelectOrDelete);\n        this.data = {};\n        this.initData(formData);\n        let inNode:boolean = this.props.children !== undefined || this.uiSchema && this.uiSchema.Templet !== undefined;\n        //this.formContext = new FormContext(this, inNode);\n        let {children} = this.props;\n        //let content:JSX.Element; //, inNode:boolean;\n        //let formContext: FormContext;\n        if (children !== undefined) {\n            //inNode = true;\n            this.content = <>{children}</>;\n            this.formContext = new FormContext(this, true);\n        }\n        else {\n            let Templet: TempletType;\n            if (this.uiSchema !== undefined) {\n                Templet = this.uiSchema.Templet;\n            }\n            if (Templet !== undefined) {\n                // inNode = true;\n                this.content = typeof(Templet) === 'function'? Templet(this.data) : Templet;\n                this.formContext = new FormContext(this, true);\n            }\n            else {\n                // inNode = false;\n                this.formContext = new FormContext(this, false);\n                this.content = <>{this.schema.map((v, index) => {\n                    return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n                })}</>;\n            }\n        }\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type === 'arr') {\n            let arrItem:ArrSchema = itemSchema as ArrSchema;\n            let {arr:arrItems} = arrItem;\n            if (arrItems === undefined) return;\n            let arrDict = arrItem.itemSchemas = {};\n            for (let item of arrItems) {\n                arrDict[item.name] = item;\n            }\n            let val:any[] = formData[name];\n            if (val === undefined) val = [];\n            else if (Array.isArray(val) === false) val = [val];\n            let arr:any[] = [];\n            for (let row of val) {\n                let {$isSelected, $isDeleted} = row;\n                let r = {\n                    $source: row,\n                    $isSelected: $isSelected,\n                    $isDeleted: $isDeleted,\n                };\n                for (let item of arrItems) {\n                    this.initDataItem(item, r, row);\n                    /*\n                    let {name:nm} = item;\n                    let v = row[nm];\n                    if (v === undefined) v = null;\n                    r[nm] = v;\n                    */\n                }\n                arr.push(r);\n            }\n            data[name] = observable(arr);\n            return;\n        }\n        data[name] = formData[name];\n    }\n\n    private calcSelectOrDelete = () => {\n        if (this.formData === undefined) return;\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        //let arrVal = this.formData[name];\n        //if (arrVal === undefined) return;\n        let formArrVal = this.data[name];\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        this.disposer();\n    }\n\n    render() {\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(this.content)}\n        </ContextContainer.Provider>;\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)}>\n            {content}\n        </form>;\n    }\n    /*\n    protected DefaultArrFieldContainer = (itemName:string, content:JSX.Element, context:RowContext): JSX.Element => {\n        return this.InnerFieldContainer(itemName, content, context);\n    }*/\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        //return this.InnerFieldContainer(itemName, content, context);\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        //return <div className=\"row\">{content}</div>;\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class Field extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {Field} from './field';\nexport {Context, RowContext} from './context';\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as className from 'classnames';\nimport {ListView} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"col-sm-12\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className=\"col-sm-2 col-form-label\">\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop as any;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = label===undefined? 'col-sm-12':'col-sm-10';\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n}\n\nexport class PropContainer extends PropRow {\n    render(key:string): JSX.Element {\n        return <div className=\"bg-white\">\n            <label className=\"col-sm-2 col-form-label\">\n                AAABBBCCC\n            </label>\n            <div className=\"col-sm-10\">\n                <div className=\"form-control-plaintext\">\n                    dsfasfa sdf asdf a\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import {ListViewProps} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {PropRow, PropBorder, PropGap, PropContainer,\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: ()=>void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props:any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps:PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps:PropGridProps, props:Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap:boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\nimport {PropContainer, PropBorder, PropGap} from './row';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n/*\n    private propView: PropView;\n    constructor(props:PropGridProps) {\n        super(props);\n    }\n*/\n/*\n    componentWillMount() {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(this.props.values);\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(nextProps.values);\n        this.forceUpdate();\n    }\n*/\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {IObservableValue, IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport '../css/va-row.css';\n\nexport interface ListItem {\n    key?: string|number;\n    date?: Date;\n    icon?: string | JSX.Element;\n    main?: string;\n    vice?: string;\n    middle?: string | JSX.Element;\n    midSize?: number;\n    right?: string | JSX.Element;\n    onClick?: () => void;\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\n}\n\nexport interface ListRowProps extends ListItem {\n    //onClick: () => void;\n}\n\nexport interface ListRowState {\n    pressed: boolean;\n}\n\n@observer\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: false,\n        }\n    }\n    render() {\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\n        let header, isIcon:boolean, noteNum;\n        if (unread !== undefined) {\n            let uv:number;\n            if (typeof unread === 'number') uv = unread;\n            else uv = unread.get();\n                if (uv > 0)\n                noteNum = <b>{uv}</b>;\n            else if (uv < 0)\n                noteNum = <b className='dot' />;\n        }\n        switch (typeof icon) {\n            case 'object':\n                header = <header>{icon}{noteNum}</header>; \n                isIcon= false;\n                break;\n            case 'string': \n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\n                isIcon= true; \n                break;\n        }\n        let mid;\n        if (middle !== undefined) {\n            switch (typeof middle) {\n                case 'string':\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\n                    break;\n                default:\n                    mid = middle;\n                    break;\n            }\n        }\n        let footer;\n        if (right !== undefined) {\n            if (typeof right === 'string')\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\n            else\n                footer = <footer>{right}</footer>;\n        }\n        let viceSpan;\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\n        return (\n        <li className={cn} onClick={onClick}>\n            {header}\n            <div>\n                <div>{main}</div>\n                {viceSpan}\n            </div>\n            {mid}\n            {footer}\n        </li>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {ListItem, ListRow} from './listRow';\n\nexport interface ListViewProps {\n    className?: string;\n    items?: any[];\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\n    ex?: any;\n    header?: string|JSX.Element;\n    beforeLoad?: string|JSX.Element;\n    none?: string|JSX.Element;\n    footer?: string|JSX.Element;\n    itemClick?: (item:any)=>void;\n    converter?: (item:any)=>ListItem;\n}\n\n@observer\nexport class ListView extends React.Component<ListViewProps, null> {\n    render() {\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\n        let cn = classNames(className, 'va-list');\n        let content, elHeader;\n        if (items === undefined)\n            content = beforeLoad === null? null : <li className='empty'>\n                {beforeLoad || '...'}\n            </li>;\n        else if (items.length === 0) {\n            content = (\n            <li className='empty'>\n                {\n                    none || '[none]'\n                }\n            </li>);\n        }\n        else if (renderRow !== undefined) {\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\n        }\n        else {\n            content = items.map((item, index) => {\n                let onClick = item.onClick;\n                if (onClick === undefined && itemClick !== undefined) \n                    onClick = ()=>itemClick(item);\n                let listItem:ListItem;\n                if (converter !== undefined) {\n                    listItem = converter(item);\n                    if (listItem === undefined) return null;\n                }\n                else {\n                    listItem = {\n                        ...item\n                    }\n                }\n                if (listItem.key === undefined) listItem.key = listItem.main;\n                return <ListRow onClick={onClick} {...listItem} />;\n            });\n        }\n        if (header !== undefined) {\n            if (typeof header === 'string') {\n                elHeader = <div className='va-list-header'>{header}</div>;\n            }\n            else {\n                elHeader = header;\n            }\n        }\n\n        return (\n        <div className={cn}>\n            {elHeader}\n            <ul>\n                {content}\n            </ul>\n            {footer}\n        </div>\n        )\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n\n    private _content: JSX.Element;\n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[] = [];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        switch (size) {\n            default:\n            case 'md': this.size = '3.2rem'; break;\n            case 'sm': this.size = '4rem'; break;\n            case 'lg': this.size = '2.5rem'; break;\n        }\n        this.tabs.push(...tabs.map(v => {\n                let tab = new Tab();\n                tab.name = v.name;\n                tab.selected = false;\n                tab.caption = v.caption;\n                tab.contentBuilder = v.content;\n                tab.notify = v.notify;\n                return tab;\n            }\n        ));\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    private tabClick = (tab:Tab) => {\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        return <div className=\"tab\">\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\n                {this.tabs.map((v,index) => {\n                    let style:React.CSSProperties={\n                        display: v.selected===true? undefined : 'none'};\n                    return <div key={index} style={style}>{v.content}</div>;\n                })}\n            </div>\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\n                {this.tabs.map((v,index) => {\n                    let {selected, caption, notify} = v;\n                    let notifyCircle:any;\n                    if (notify !== undefined) {\n                        let num = notify.get();\n                        if (num !== undefined) {\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                        }\n                    }\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                        <div className=\"align-self-center\">\n                            {notifyCircle}\n                            {caption(selected)}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport {FetchError} from '../fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","import {User, Guest, Unit} from './user';\n\nexport interface ClearableData {\n    clear(): void;\n}\n\nexport class Data<T> implements ClearableData {\n    private name: string;\n    private value?: T;\n    constructor(name: string) {this.name = name; }\n    get(): T {\n        if (this.value !== undefined) return this.value;\n        let v = localStorage.getItem(this.name);\n        return this.value = v === null ? undefined : JSON.parse(v); \n    }\n    set(value: T) {\n        if (!value) { this.clear(); return; }\n        this.value = value;\n        localStorage.setItem(this.name, JSON.stringify(value));\n    }\n    clear() {\n        this.value = undefined;\n        localStorage.removeItem(this.name);\n    }\n}\n\nexport class LocalData {\n    user = new Data<User>('user');\n    guest = new Data<Guest>('guest');\n    unit = new Data<Unit>('unit');\n    homeTabCur = new Data<number>('homeTabCur');\n\n    logoutClear() {\n        [\n            this.user,\n            this.homeTabCur\n        ].map(d => d.clear());\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from 'tonva-tools';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva-tools';\nimport { CSCMApp } from 'CSCMApp';\nimport { observable } from 'mobx';\nimport { meTab } from '../me';\n\nexport const store = {\n    //homeCount: observable.box<number>(-1),\n    //cartCount: observable.box<number>(101),\n};\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CSCMApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { View, nav } from 'tonva-tools';\nimport { LMR, FA, SearchBox } from 'tonva-react-form';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CHome } from './CHome';\nimport { SearchBox } from 'tonva-react-form';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","import * as React from 'react';\nimport { VPage, Page, View } from 'tonva-tools';\nimport { observer } from 'mobx-react';\nimport { CHome } from './CHome';\nimport { observable } from 'mobx';\n\nconst LIGUOSHENG = 5;\n\ninterface CatItem {\n    title: string;\n    sub: string[];\n    img: string;\n}\n\ninterface Cat {\n    caption: string;\n    items?: CatItem[];\n}\n\nconst catItemStyle:React.CSSProperties = {\n    width:'12rem', \n    //height: '6rem', \n    overflow: 'hidden', \n};\nconst subStyle:React.CSSProperties = {\n    fontSize:'0.75rem',\n    overflow: 'hidden', \n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n};\nconst imgStyle:React.CSSProperties = {\n    //float:'left', clear:'both', \n    height:'1.5rem', width:'1.5rem', opacity:0.1, \n    marginRight: '0.5rem',\n};\n\nexport class VHome extends View<CHome> {\n\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private renderSection = (item: any, index: number) => {\n        return <section>\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\n            <p>{item.content}</p>\n        </section>\n    }\n\n    render(param: any): JSX.Element {\n        return <this.content />\n    }\n\n    private page = observer(() => {\n        let { openMetaView } = this.controller;\n        let viewMetaButton = <></>;\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n        }\n\n        return <Page header={false} footer={viewMetaButton}>\n            <this.content />\n        </Page>;\n    })\n\n    private content = observer(() => {\n        let siteHeader = this.controller.renderSiteHeader();\n        return <>\n            {siteHeader}\n            {this.controller.renderCategoryRootList()}\n        </>\n    });\n}","import * as React from 'react';\nimport { TuidMain } from 'tonva-react-uq';\nimport { VSiteHeader } from './VSiteHeader';\nimport { CSCMApp } from '../CSCMApp';\nimport { PageItems, Controller } from 'tonva-tools';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\n\nclass HomeSections extends PageItems<any> {\n\n    private sectionTuid: TuidMain;\n\n    constructor(sectionTuid: TuidMain) {\n        super();\n        this.firstSize = this.pageSize = 13;\n        this.sectionTuid = sectionTuid;\n    }\n\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n        if (pageStart === undefined) pageStart = 0;\n        let ret = await this.sectionTuid.search(\"\", pageStart, pageSize);\n        return ret;\n    }\n\n    protected setPageStart(item: any): any {\n        if (item === undefined) return 0;\n        return item.id;\n    }\n}\n\nexport class CHome extends Controller {\n\n    cApp: CSCMApp;\n    homeSections: HomeSections;\n    sectionTuid: TuidMain;\n\n    constructor(cApp: CSCMApp, res: any) {\n        super(res);\n\n        this.cApp = cApp;\n    }\n\n    async internalStart(param: any) {\n\n        let { cFunctionCategory } = this.cApp;\n        await cFunctionCategory.start();\n        this.openVPage(VHome);\n    }\n\n    renderSiteHeader = () => {\n        return this.renderView(VSiteHeader);\n    }\n\n    renderSearchHeader = (size?:string) => {\n        return this.renderView(VSearchHeader, size);\n    }\n\n    renderCategoryRootList = () => {\n        let { cFunctionCategory } = this.cApp;\n        return cFunctionCategory.renderRootList();\n    }\n\n    renderHome = () => {\n        return this.renderView(VHome);\n    }\n\n    openMetaView = () => {\n        this.cApp.startDebug();\n    }\n\n    tab = () => <this.renderHome />;\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { consts } from '../home/consts';\nimport { FA } from 'tonva-react-form';\n\nconst imgStyle: React.CSSProperties = {\n  height: '1.5rem', width: '1.5rem',\n  marginLeft: '0.1rem',\n  marginRight: '0.3rem'\n}\n\nexport const titleTitle: React.CSSProperties = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport const subStyle: React.CSSProperties = {\n  fontSize: '0.75rem',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport class VRootCategory extends View<CFunctionCategory> {\n  private categoryClick = async (categoryWapper: any, parent: any) => {\n    await this.controller.openMainPage(categoryWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children === undefined ? '' : children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let {name, children} = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"py-2 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }} >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-circle-right\" className=\"text-info\" />\n            &nbsp; {name}\n          </span>\n        </div>\n        {children === undefined ? '' : renderThirdCategory(children)}\n      </div>\n    </div>;\n  }\n\n  render(param: any): JSX.Element {\n    let { categories } = this.controller;\n    return <>{categories.map(v => this.renderRootCategory(v, undefined))}</>;\n  }\n}\n\nexport function renderThirdCategory(items: any) {\n  return <div className=\"py-1 px-1 text-muted small\" style={subStyle}>\n      {items.length === 0 ? <>&nbsp;</> : items.map(v => v.name).join(' / ')}\n  </div>\n}","import * as React from 'react';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { VPage, Page } from 'tonva-tools';\nimport { List, FA } from 'tonva-react-form';\nimport { tv } from 'tonva-react-uq';\nimport { titleTitle, subStyle } from './VRootCategory';\n\nexport class VCategory extends VPage<CFunctionCategory> {\n\n  async open(categoryWaper: any) {\n    this.openPage(this.page, categoryWaper);\n  }\n\n  private renderChild = (childWapper: any) => {\n    return <div className=\"py-2\"><FA name=\"hand-o-right mr-2\"></FA>{childWapper.name}</div>\n  }\n\n  private categoryClick = async (childWapper: any, parent: any) => {\n    await this.controller.openMainPage(childWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"pt-1 pb-1 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\n      >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-right\" className=\"text-info small\" />\n            &nbsp; {name}\n          </span>\n        </div>\n      </div>\n    </div>;\n    // <img src={consts.appIcon} alt=\"structure\" style={imgStyle} />\n  }\n\n  private page = (categoryWaper: any) => {\n\n    let { cHome } = this.controller.cApp;\n    let header = cHome.renderSearchHeader();\n\n    let { categoryWaper: item, parent } = categoryWaper;\n    return <Page header={header} >\n      {this.renderRootCategory(item, parent)}\n    </Page>\n  }\n}","import * as React from 'react';\nimport { Query } from 'tonva-react-uq';\nimport { observable } from 'mobx';\nimport { VRootCategory } from './VRootCategory';\nimport { VCategory } from './VCategory';\nimport { CSCMApp } from 'CSCMApp';\nimport { Controller } from 'tonva-tools';\n\nexport interface IFunctionList {\n  categoryName: string;\n  functionNames: string[];\n}\n\nlet funcCategories = [\n  {\n    name: \"基础信息\",\n    id: 1,\n    children: [\n      { name:\"商品信息\",\n        id: 101,\n        pid: 1 }, \n      { name: \"供应商信息\",\n        id: 102,\n        pid: 1 },\n      { name: \"客户信息\",\n        id: 103,\n        pid: 1 },\n      { name: \"部门信息\",\n        id: 104,\n        pid: 1 },\n      { name: \"职员信息\",\n        id: 105,\n        pid: 1 },\n      { name: \"物流中心（自建、委托）\",\n        id: 106,\n        pid: 1 },\n      { name: \"库区信息（自建）\",\n        id: 107,\n        pid: 1 },\n      { name: \"货位信息（自建）\",\n        id: 108,\n        pid: 1 }\n    ]\n  },\n  {\n    name: \"采购管理\",\n    id: 2,\n    children: [\n      { name:\"采购订单\",\n        id: 201,\n        pid: 2 }, \n      { name: \"采购收货（自建）\",\n        id: 202,\n        pid: 2 }, \n      { name: \"采购验收（自建）\",\n        id: 203,\n        pid: 2 }, \n      { name: \"采购入库（自建）\",\n        id: 204,\n        pid: 2 }, \n      { name: \"采购记账\",\n        id: 205,\n        pid: 2 }, \n      { name: \"采购退货\",\n        id: 206,\n        pid: 2 }, \n      { name: \"采退出库（自建）\",\n        id: 207,\n        pid: 2 }, \n      { name: \"采退复核（自建）\",\n        id: 208,\n        pid: 2 }, \n      { name: \"采退记账\",\n        id: 209,\n        pid: 2 }\n    ]\n  },\n  {\n    name: \"采购结算管理\",\n    id: 3,\n    children: [\n      { name: \"采购发票\",\n        id: 301,\n        pid: 3 }, \n      { name: \"采购组票\",\n        id: 302,\n        pid: 3 }, \n      { name: \"采购结算\",\n        id: 303,\n        pid: 3 }, \n      { name: \"采价调整\",\n        id: 304,\n        pid: 3 }, \n      { name: \"采购冲差\",\n        id: 305,\n        pid: 3 }\n    ]\n  },\n  {\n    name: \"销售管理\",\n    id: 4,\n    children: [\n      { name:\"销售订单\",\n        id: 401,\n        pid: 4 }, \n      { name: \"销售出库（自建）\",\n        id: 402,\n        pid: 4 }, \n      { name: \"出库复核（自建）\",\n        id: 403,\n        pid: 4 }, \n      { name: \"销售记账（自建、委托）\",\n        id: 404,\n        pid: 4 }, \n      { name: \"销售退货\",\n        id: 405,\n        pid: 4 }, \n      { name: \"销售退货验收（自建）\",\n        id: 406,\n        pid: 4 }, \n      { name: \"销售退货入库（自建）\",\n        id: 407,\n        pid: 4 }, \n      { name: \"销售退货记账（自建、委托）\",\n        id: 408,\n        pid: 4 }\n    ]\n  },\n  {\n    name: \"销售结算管理\",\n    id: 5,\n    children: [\n      { name:\"销售换票\",\n        id: 501,\n        pid: 5 }, \n      { name: \"销售结算\",\n        id: 502,\n        pid: 5 }, \n      { name: \"销价调整\",\n        id: 503,\n        pid: 5 }, \n      { name: \"销售冲差\",\n        id: 504,\n        pid: 5 }, \n    ]\n  },\n  {\n    name: \"期初管理\",\n    id: 6,\n    children: [\n      { name:\"商品库存期初\",\n        id: 601,\n        pid: 6 }, \n      { name: \"供应商期初\",\n        id: 602,\n        pid: 6 }, \n      { name: \"客商期初\",\n        id: 603,\n        pid: 6 }, \n    ]\n  },\n  {\n    name: \"价格管理\",\n    id: 7,\n    children: [\n      { name:\"商品定价\",\n        id: 701,\n        pid: 7 }, \n      { name: \"客商定价\",\n        id: 702,\n        pid: 7 }, \n    ]\n  },\n  {\n    name: \"查询报表\",\n    id: 8,\n    children: [\n      { name: \"库存相关\",\n        id: 801,\n        pid: 8, \n        children: [\n          { name: \"库存查询\",\n            id: 80101,\n            pid: 801 },\n          { name: \"进销存查询\",\n            id: 80102,\n            pid: 801 },\n        ]\n      }, \n      { name: \"销售相关\",\n        id: 802,\n        pid: 8, \n        children: [\n          { name: \"客商销售汇总查询\",\n            id: 80201,\n            pid: 802 },\n          { name: \"客商销售明细查询\",\n            id: 80202,\n            pid: 802 }\n        ]\n      }, \n      { name: \"采购相关\",\n        id: 803,\n        pid: 8,\n        children: []\n      }, \n      { name: \"应收应付相关\",\n        id: 804,\n        pid: 8,\n        children: [\n          { name: \"客商应收账款汇总查询\",\n            id: 80401,\n            pid: 804 },\n          { name: \"客商应收账款明细查询\",\n            id: 80402,\n            pid: 804 },\n          { name: \"供应商应付账款汇总查询\",\n            id: 80403,\n            pid: 804 },\n          { name: \"供应商应付账款明细查询\",\n            id: 80404,\n            pid: 804 }\n        ]\n      }, \n    ]\n  }\n]\n\nexport class CFunctionCategory extends Controller {\n\n  cApp: CSCMApp;\n  // categories: any[];\n  @observable categories: any[] = [];\n\n  constructor(cApp: CSCMApp, res: any) {\n    super(res);\n\n    this.cApp = cApp;\n  }\n\n  async internalStart(param: any) {\n    this.categories = funcCategories;\n  }\n\n  renderRootList = () => {\n    return this.renderView(VRootCategory);\n  };\n\n  async openMainPage(categoryWaper: any, parent: any) {\n    if (categoryWaper === undefined)\n      return;\n    let { children } = categoryWaper;\n    if (children === undefined || children.length == 0)\n      return;\n    this.openVPage(VCategory, { categoryWaper, parent });\n  }\n}","import * as React from 'react';\nimport { TuidUI, tv } from 'tonva-react-uq';\n\nexport const productUI: TuidUI = {\n    content: (values: any) => {\n        let product = values;\n        let { brand, description, CAS, purity, molecularFomula, molecularWeight, origin } = product;\n        return <div className=\"row d-flex\">\n            <div className=\"col-12\">\n                <div className=\"row py-2\">\n                    <div className=\"col-12\"><strong>{description}</strong></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <img src=\"favicon.ico\" alt=\"structure\" />\n                    </div>\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {item('CAS', CAS)}\n                            {item('纯度', purity)}\n                            {item('分子式', molecularFomula)}\n                            {item('分子量', molecularWeight)}\n                            {item('产品编号', origin)}\n                            {tv(brand, (values: any) => <>{item(\"品牌\", values.name)}</>)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    },\n    divs: {\n        packx: {\n            content: (values: any) => {\n                let { radiox, radioy, unit } = values;\n                if (radioy === 0) return <>{radiox} {unit}</>;\n                if (radiox !== 1) return <>{radiox} &#2df; {radiox}{unit}</>;\n                return <>{radioy}{unit}</>;\n            }\n        }\n    }\n}\n\nfunction item(caption: string, value: any) {\n    if (value === null || value === undefined) return null;\n    return <>\n        <div className=\"col-4 text-muted pr-0\">{caption}:</div>\n        <div className=\"col-8\">{value}</div>\n    </>;\n}\n","import { AppUI, CApp } from \"tonva-react-uq\";\nimport { VHome } from './main';\nimport { CSCMApp } from '../CSCMApp';\nimport orderUI from './order';\nimport productUI from './product';\nimport customerUI from './customer';\nimport warehouseUI from './warehouse';\n\nconst ui: AppUI = {\n    CApp: CSCMApp,\n    main: VHome,\n    uqs: {\n        'SCM/product': productUI\n    }\n}\n\nexport default ui;\n","import * as React from 'react';\n\nimport { CApp, CUq } from 'tonva-react-uq';\nimport { CHome } from './home/CHome';\nimport { CFunctionCategory } from 'functionCategory/CFunctionCategory';\nimport { consts } from './home/consts';\nimport { WebUser } from 'CurrentUser';\n\nexport class CSCMApp extends CApp {\n\n    currentUser: WebUser;\n\n    currentSalesRegion: any;\n    currentLanguage: any;\n\n    cHome: CHome;\n    cFunctionCategory: CFunctionCategory;\n\n    protected async internalStart() {\n\n        if (this.isLogined) {\n            //this.currentUser.user = this.user;\n        }\n\n        this.cFunctionCategory = new CFunctionCategory(this, undefined);\n        this.cHome = new CHome(this, undefined);\n\n        let promises: PromiseLike<void>[] = [];\n        promises.push(this.cFunctionCategory.start());\n        await Promise.all(promises);\n        this.showMain();\n    }\n\n    showMain(initTabName?: string){\n        this.openVPage(this.VAppMain, initTabName);\n    }\n\n    protected onDispose() {\n    }\n}\n","import { UqUI, Tuid } from \"tonva-react-uq\";\nimport tuid from './tuid';\n\nconst uqUI: UqUI = {\n    tuid: tuid,\n}\n\nexport default uqUI;\n","import { productUI } from 'ui/common';\nimport { productCategoryUI } from './productCategory';\n\nexport default {\n    product: productUI,\n    productx: productUI,\n    productCategory: productCategoryUI,\n}\n","import * as React from 'react';\n\nexport const productCategoryUI = {\n\n    content: (values: any) => {\n        let { children } = values;\n        return <>\n            aaa\n        </>\n    }\n}","import * as React from 'react';\nimport './App.css';\nimport { NavView, nav, Page, Tabs } from 'tonva-tools';\nimport { startApp } from 'tonva-react-uq';\nimport ui from './ui';\n//import { faceTabs } from 'facetabs';\n\nconst tonvaApp = \"bruce/SCMBase\";\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await startApp(tonvaApp, ui);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} notLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}