{"version":3,"sources":["tonva-tools/index.ts","tonva-react-form/index.ts","tonva-react-uq/index.ts","tonva-react-uq/controllers/CVEntity.tsx","tonva-react-uq/controllers/form/viewModel.tsx","tonva-tools/ui/nav.tsx","tonva-tools/ui/form/context.tsx","tonva-tools/net/guestApi.ts","tonva-tools/net/index.ts","tonva-react-uq/tools/jsonStringify.ts","tonva-react-uq/tools/tv.tsx","tonva-react-uq/tools/index.ts","tonva-tools/ui/index.ts","tonva-tools/net/appBridge.ts","tonva-tools/ui/form/rules/index.ts","tonva-tools/ui/form/widgets/widget.tsx","tonva-tools/ui/form/widgets/textWidget.tsx","tonva-tools/ui/form/widgets/numberWidget.tsx","tonva-tools/ui/form/widgets/updownWidget.tsx","tonva-tools/ui/form/widgets/dateWidget.tsx","tonva-tools/ui/form/widgets/checkBoxWidget.tsx","tonva-tools/ui/form/widgets/selectWidget.tsx","tonva-tools/ui/form/widgets/idWidget.tsx","tonva-tools/ui/form/widgets/unknown.tsx","tonva-tools/ui/form/widgets/buttonWidget.tsx","tonva-tools/ui/form/widgets/arrComponent.tsx","tonva-tools/ui/form/widgets/imageWidget.tsx","tonva-tools/ui/form/widgets/factory.tsx","tonva-tools/ui/form/widgets/textareaWidget.tsx","tonva-tools/ui/form/widgets/passwordWidget.tsx","tonva-tools/ui/form/widgets/radioWidget.tsx","tonva-tools/ui/form/widgets/rangeWidget.tsx","tonva-tools/ui/form/widgets/index.ts","tonva-tools/net/httpChannelUI.ts","tonva-tools/net/uqApi.ts","tonva-react-uq/controllers/link/cLink.tsx","tonva-react-uq/controllers/link/index.ts","tonva-tools/net/wsChannel.ts","tonva-tools/ui/page.tsx","tonva-react-form/uid.ts","tonva-tools/ui/image.tsx","tonva-tools/net/host.ts","tonva-tools/user.ts","tonva-tools/uid.ts","tonva-react-uq/controllers/tuid/vTuidMain.tsx","tonva-react-uq/controllers/tuid/vTuidEdit.tsx","tonva-react-uq/controllers/tuid/vTuidSelect.tsx","tonva-react-uq/controllers/tuid/vTuidView.tsx","tonva-react-uq/controllers/tuid/vTuidInfo.tsx","tonva-react-uq/controllers/tuid/pageItems.ts","tonva-react-uq/controllers/tuid/vTuidList.tsx","tonva-react-uq/controllers/tuid/cTuid.ts","tonva-react-uq/controllers/tuid/index.tsx","tonva-react-uq/controllers/form/vBand.tsx","tonva-react-uq/controllers/form/vSubmit.tsx","tonva-react-uq/controllers/form/rule.ts","tonva-react-uq/controllers/form/vField/vField.tsx","tonva-react-uq/controllers/form/vField/vComputeField.tsx","tonva-react-uq/controllers/form/vArr.tsx","tonva-react-uq/controllers/form/vField/vTuidField.tsx","tonva-react-uq/controllers/form/bandsBuilder.ts","tonva-react-uq/controllers/form/vField/buildVmField.ts","tonva-react-uq/controllers/form/vForm.tsx","tonva-react-uq/controllers/form/index.ts","tonva-tools/net/httpChannel.ts","tonva-tools/ui/res.ts","tonva-react-uq/controllers/index.ts","tonva-react-form/form/control/control.tsx","tonva-react-form/form/control/buttonsControl.tsx","tonva-react-form/form/control/charsControl.tsx","tonva-react-form/form/control/stringControl.tsx","tonva-react-form/form/control/numberControl.tsx","tonva-react-form/form/control/unknownControl.tsx","tonva-react-form/form/control/pickIdControl.tsx","tonva-react-form/form/control/pickTuidControl.tsx","tonva-react-form/form/control/pickControl.tsx","tonva-react-form/form/control/index.ts","tonva-react-form/form/control/checkControl.tsx","tonva-react-form/form/control/radioControl.tsx","tonva-react-form/form/control/selectControl.tsx","tonva-react-form/form/control/textAreaControl.tsx","tonva-react-uq/entities/entity.ts","tonva-react-uq/entities/tuid.ts","tonva-react-uq/entities/action.ts","tonva-react-uq/entities/sheet.ts","tonva-react-uq/entities/query.ts","tonva-react-uq/entities/book.ts","tonva-react-uq/entities/history.ts","tonva-react-uq/entities/map.ts","tonva-react-uq/entities/pending.ts","tonva-react-uq/entities/entities.ts","tonva-react-uq/entities/index.ts","tonva-react-form/form/rowContainer/index.tsx","tonva-tools/net/apiBase.ts","tonva-tools/ui/titleBar.tsx","tonva-react-uq/controllers/query/defaultRow.tsx","tonva-react-uq/controllers/query/vQueryMain.tsx","tonva-react-uq/controllers/query/vQuerySelect.tsx","tonva-react-uq/controllers/query/cQuery.ts","tonva-react-uq/controllers/query/index.ts","tonva-tools/ui/edit/imageItemEdit.tsx","tonva-tools/ui/loading.tsx","tonva-tools/ui/resUploader.tsx","tonva-react-uq/controllers/CApp.tsx","tonva-react-form/form/index.ts","tonva-react-form/form/formView.tsx","tonva-react-uq/controllers/icons.tsx","tonva-react-uq/controllers/ControllerUq.ts","tonva-react-uq/centerApi.ts","tonva-react-uq/controllers/sheet/vMain.tsx","tonva-react-uq/controllers/sheet/vNew.tsx","tonva-react-uq/controllers/sheet/vSheetView.tsx","tonva-react-uq/controllers/sheet/vEdit.tsx","tonva-react-uq/controllers/sheet/vSheetAction.tsx","tonva-react-uq/controllers/sheet/vSchema.tsx","tonva-react-uq/controllers/sheet/vArchives.tsx","tonva-react-uq/controllers/sheet/vList.tsx","tonva-react-uq/controllers/sheet/vArchived.tsx","tonva-react-uq/controllers/sheet/vSheet.tsx","tonva-react-uq/controllers/sheet/vSaved.tsx","tonva-react-uq/controllers/sheet/vSheetProcessing.tsx","tonva-react-uq/controllers/sheet/cSheet.ts","tonva-react-uq/controllers/sheet/index.ts","tonva-react-uq/controllers/book/vBookMain.tsx","tonva-react-uq/controllers/book/cBook.ts","tonva-react-uq/controllers/uq/vUq.tsx","tonva-react-uq/controllers/uq/cUq.tsx","tonva-react-uq/controllers/uq/index.ts","tonva-react-uq/controllers/map/vMain.tsx","tonva-react-uq/controllers/map/inputValues.tsx","tonva-react-uq/controllers/map/cMap.ts","tonva-react-uq/controllers/map/index.ts","tonva-react-uq/controllers/action/vActionMain.tsx","tonva-react-uq/controllers/action/cAction.ts","tonva-react-uq/controllers/action/index.ts","tonva-react-uq/controllers/pending/vPendingMain.tsx","tonva-react-uq/controllers/pending/cPending.ts","tonva-react-uq/controllers/pending/index.ts","tonva-react-uq/controllers/history/vHistoryMain.tsx","tonva-react-uq/controllers/history/cHistory.ts","tonva-react-uq/controllers/history/index.ts","tonva-tools/ui/edit/itemEdit.tsx","home/consts.ts","tonva-tools/net/netToken.ts","tonva-tools/entry/userApi.ts","tonva-tools/ui/VM.tsx","tonva-tools/ui/schema/index.ts","tonva-tools/pageItems.ts","tonva-tools/cacheIds.ts","tonva-react-form/form/TonvaForm.tsx","tonva-react-form/dropDownActions/index.tsx","tonva-react-form/easyDate/index.tsx","tonva-react-form/media.tsx","tonva-react-form/searchBox.tsx","tonva-react-form/multiStep/index.tsx","tonva-react-form/components/Badge.tsx","tonva-react-form/components/LMR.tsx","tonva-react-form/components/FA.tsx","tonva-react-form/components/IconText.tsx","tonva-react-form/components/Muted.tsx","tonva-react-form/components/index.ts","tonva-react-form/list/base.tsx","tonva-react-form/list/clickable.tsx","tonva-react-form/list/static.tsx","tonva-react-form/list/selectable.tsx","tonva-react-form/list/index.tsx","tonva-react-form/propGrid/row.tsx","tonva-react-form/propGrid/propView.tsx","tonva-react-form/propGrid/PropGrid.tsx","tonva-react-form/propGrid/index.tsx","tonva-tools/ui/form/formRes.ts","tonva-tools/ui/form/form.tsx","tonva-tools/ui/form/field.tsx","tonva-tools/ui/form/index.ts","tonva-tools/ui/edit/stringItemEdit.tsx","tonva-tools/ui/edit/edit.tsx","tonva-tools/ui/edit/index.tsx","tonva-react-form/listView/listRow.tsx","tonva-react-form/listView/listView.tsx","tonva-tools/ui/tabs/tabs.tsx","tonva-tools/ui/tabs/index.tsx","tonva-tools/entry/meInfo.tsx","tonva-tools/ui/fetchErrorView.tsx","tonva-tools/local.ts","images/logo.svg","tonva-tools/img/logo.svg","me/index.tsx","ui/main.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","functionCategory/VRootCategory.tsx","functionCategory/VCategory.tsx","functionCategory/funcCategories.tsx","pages/testpage2.tsx","pages/index.tsx","functionCategory/CFunctionCategory.tsx","ui/scmbase/tuid/productuid.tsx","ui/scmbase/tuid/packtype.tsx","ui/scmbase/tuid/customertuid.tsx","ui/scmbase/tuid/suppllier.tsx","ui/scmbase/tuid/manufactor.tsx","ui/scmbase/tuid/staff.tsx","ui/scmbase/tuid/department.tsx","ui/scmbase/tuid/goodslocation.tsx","ui/scmbase/tuid/warehouse.tsx","ui/scmbase/tuid/logisticscentre.tsx","ui/scmbase/tuid/index.tsx","ui/scmbase/res/index.ts","ui/scmbase/res/zh/CN.tsx","ui/scmbase/sheet/receive.tsx","ui/index.tsx","CSCMApp.tsx","ui/scmbase/index.tsx","ui/scmbase/sheet/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["__webpack_require__","_net__WEBPACK_IMPORTED_MODULE_2__","d","__webpack_exports__","_ui__WEBPACK_IMPORTED_MODULE_3__","o","_pageItems__WEBPACK_IMPORTED_MODULE_5__","_form__WEBPACK_IMPORTED_MODULE_0__","_list__WEBPACK_IMPORTED_MODULE_1__","_easyDate__WEBPACK_IMPORTED_MODULE_3__","_propGrid__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_5__","_media__WEBPACK_IMPORTED_MODULE_6__","_searchBox__WEBPACK_IMPORTED_MODULE_8__","startApp","ui","convertUIKeyToLowercase","obj","i","v","toLowerCase","react__WEBPACK_IMPORTED_MODULE_1__","Array","isArray","cApp","CApp","_controllers__WEBPACK_IMPORTED_MODULE_2__","start","CEntity","_ControllerUq__WEBPACK_IMPORTED_MODULE_4__","[object Object]","cUq","entity","res","super","Object","setPrototypeOf","this","x","name","typeName","label","icon","_icons__WEBPACK_IMPORTED_MODULE_3__","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","_form__WEBPACK_IMPORTED_MODULE_2__","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","tslib__WEBPACK_IMPORTED_MODULE_0__","_ownerField","cTuidSelect","cSelectFrom","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","VEntity","tonva_tools__WEBPACK_IMPORTED_MODULE_1__","controller","createForm","ViewModel","PureJSONContent","JSONContent","RowContent","react__WEBPACK_IMPORTED_MODULE_0__","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_tools__WEBPACK_IMPORTED_MODULE_2__","className","view","vm","mobileHeaderStyle","RegExp","test","navigator","userAgent","minHeight","logMark","logs","stackKey","NavView","props","waitCount","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","stack","state","wait","window","addEventListener","nav","set","level","length","waitTimeHandler","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","disposer","clear","push","history","pushState","key","ceased","refresh","item","pop","dispose","p","len","backLevel","popAndDispose","find","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","_loading__WEBPACK_IMPORTED_MODULE_11__","_fetchErrorView__WEBPACK_IMPORTED_MODULE_5__","assign","map","index","style","visibility","Nav","local","_local__WEBPACK_IMPORTED_MODULE_7__","user","lang","district","_res__WEBPACK_IMPORTED_MODULE_10__","language","culture","guest","g","get","handler","ws","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitRes","fetch","json","unit","unitName","_net__WEBPACK_IMPORTED_MODULE_8__","getPredefinedUnitName","unitId","unitFromName","settings","navSettings","hash","document","location","pos","_net_appBridge__WEBPACK_IMPORTED_MODULE_6__","hashParam","substring","startWait","url","resHost","centerHost","resUrl","wsHost","setGuest","exHash","appInFrame","parent","_net_wsChannel__WEBPACK_IMPORTED_MODULE_9__","predefinedUnit","loadPredefinedUnit","notLogined","logined","endWait","onLogined","_net_netToken__WEBPACK_IMPORTED_MODULE_4__","token","callback","connect","JSON","stringify","saveLocalUser","showAppView","defaultTop","loginTop","withBack","lv","e","then","loginView","default","_page__WEBPACK_IMPORTED_MODULE_3__","header","onClick","logout","logoutClear","cp","ChangePasswordPage","onError","show","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","src","open","date","Date","getTime","toTimeString","step","mobx__WEBPACK_IMPORTED_MODULE_2__","Context","uiSchema","data","inNode","isRow","widgets","errors","errorWidgets","renderErrors","mobx_react__WEBPACK_IMPORTED_MODULE_3__","initData","rules","arrName","subContexts","arrRowContexts","itemName","value","widget","setValue","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","checkRules","j","checkFieldRules","clearContextErrors","rule","setError","rowContext","removeErrors","checkContextRules","setContextError","addErrorWidget","clearContextError","findIndex","splice","hasError","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","rowKey","itemSchemas","parentData","FormContext","ContextContainer","guestApi","uqApi","wsChannel","apiBase","appBridge","host","replacer","substr","jsonStringify","Tv","index_module","tuidValue","nullUI","ttv","react","bi","_$tuid","_$com","t","controllers","com","getTuidContent","val","valueFromId","boxIdContent","tv","_nav__WEBPACK_IMPORTED_MODULE_0__","_page__WEBPACK_IMPORTED_MODULE_2__","_VM__WEBPACK_IMPORTED_MODULE_3__","_schema__WEBPACK_IMPORTED_MODULE_4__","_form__WEBPACK_IMPORTED_MODULE_5__","_edit__WEBPACK_IMPORTED_MODULE_6__","_res__WEBPACK_IMPORTED_MODULE_7__","_tabs__WEBPACK_IMPORTED_MODULE_8__","_loading__WEBPACK_IMPORTED_MODULE_9__","_image__WEBPACK_IMPORTED_MODULE_10__","uqTokens","logoutUqTokens","appsInFrame","_unit","isBridged","setAppInFrame","appHash","parts","split","Number","page","slice","getExHashPos","lastIndexOf","getExHash","appUrl","u","_uid__WEBPACK_IMPORTED_MODULE_3__","appUq","uq","uqOwner","uqName","uqToken","_uqApi__WEBPACK_IMPORTED_MODULE_4__","urlDebug","realUrl","_host__WEBPACK_IMPORTED_MODULE_6__","getUrlOrDebug","at","a","opener","apiName","evt","subWin","source","_wsChannel__WEBPACK_IMPORTED_MODULE_5__","el","getElementById","hidden","hideFrameBack","lodash__WEBPACK_IMPORTED_MODULE_1___default","clone","_ui__WEBPACK_IMPORTED_MODULE_2__","subFrameStarted","onReceive","initSubWin","from","callId","method","body","result","directCall","callCenterApiFromMessage","bca","brideCenterApis","bridgeCenterApiReturn","onReceiveAppApiMessage","action","onAppApiReturn","bridgeCenterApi","Rule","RuleCustom","func","defy","RulePredefined","RuleRequired","trim","NaN","required","rules_RuleNum","min","max","minMsg","lodash_default","template","maxMsg","n","number","checkMore","RuleInt","isInteger","integer","widget_Widget","context","itemSchema","fieldProps","children","contextErrors","onInputChange","changeValue","target","container","visible","render","requiredFlag","FieldContainer","getUiItem","readOnly","disabled","defaultValue","init","buildRules","r","check","removeErrorWidget","isOk","isChanging","parse","newValue","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","fieldClass","classnames_default","FieldClass","uiLabel","Templet","errorList","tag","tslib_es6","mobx_module","textWidget_TextWidget","inputType","onKeyDown","internalOnKeyDown","keyCode","onEnter","currentTarget","input","placeholder","renderTemplet","cn","ref","onChange","onFocus","onBlur","maxLength","numberWidget_NumberWidget","updownWidget_UpdownWidget","event","returnValue","isValidKey","dateWidget_DateWidget","checkBoxWidget_CheckBoxWidget","checked","trueValue","falseValue","defaultChecked","selectWidget_SelectWidget","option","list","title","idWidget_IdWidget","pickId","alert","form-control","required-item","cursor-pointer","is-invalid","Unknown","dataType","uiType","dataTypes","join","buttonWidget_ButtonWidget","onButtonClick","observerRender","caption","widgetType","button","ButtonClass","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","first","row","rowContent","sep","form_context","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","onDelClick","indexOf","editContainer","deleted","row-selected","Provider","imageWidget_ImageWidget","edit","imageItemEdit","imageSrc","end","ui_image","widgetsFactory","text","textarea","rows","password","datetime","time","month","email","updown","color","checkbox","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","httpChannelUI_HttpChannelNavUI","channelUIs","channelNoUIs","logoutApis","uqApi_channels","uqLocalEntities","localUqs","ls","localStorage","getItem","uqs","loginedUserId","isNet","un","__loadAccess","saveLocal","cloneDeep","removeItem","accessValue","str","setItem","isMatch","uqApi_UqApi","basePath","access","showWaiting","channels","channelUI","channel","httpChannel","acc","loadAccess","checkAccess","names","post","params","owner","pageStart","pageSize","order","$order","ids","proxy","put","uqApi_UnitxApi","buildChannel","centerAppApi","uqApi_CenterAppApi","unitxUq","setCenterUrl","centerToken","centerChannel","centerChannelUI","setCenterToken","userId","uqApi_CenterApi","path","uqTokenApi","unitParam","nowTick","tick","callCenterapi","appUqs","appOwner","appName","rLs","rAppOwner","rAppName","uqsPure","cachedUqs","cachedId","retId","retUqs","loadAppUqs","checkUqs","Link","cLink_CLink","subAppWindow","setSubAppWindow","win","postWsToTop","WsBase","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","wsBridge","wsBaseId","WSChannel","that","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","postWsToSubApp","netThis","send","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","onScrollTop","onScrollBottom","scrollTop","offsetHeight","scrollHeight","c","direct","forEach","child","_$scroll","toString","eachChild","Page","cur","tabs","tabStates","tab","lodash__WEBPACK_IMPORTED_MODULE_4___default","isSelected","isMounted","t0","onTabClick","load","footer","right","keepHeader","titleBar","redDot","img","redDotView","classnames__WEBPACK_IMPORTED_MODULE_3___default","_titleBar__WEBPACK_IMPORTED_MODULE_5__","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","mobx_react__WEBPACK_IMPORTED_MODULE_2__","uid","ALPHABET","ID_LENGTH","rtn","charAt","Math","floor","random","Image","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_nav__WEBPACK_IMPORTED_MODULE_2__","startsWith","isDevelopment","NODE_ENV","PUBLIC_URL","REACT_APP_CENTER_HOST","hosts","centerhost","reshost","uqhost","unitxhost","uq-build","fetchOptions","headers","Content-Type","tryLocal","getCenterHost","centerUrlFromHost","centerWsFromHost","getResHost","promises","hostArr","hostValue","fetchUrl","debugHostUrl","localCheck","results","all","hostString","timeout","catch","Error","fetchLocalCheck","decodeUserToken","decodeGuestToken","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","vTuidMain_VTuidMain","CVEntity","onNew","onList","onSearch","openPage","link","newButton","proxyLinks","isFrom","tonva_react_form","size","entityRender","entityClick","tonva_tools","vTuidEdit_VTuidEdit","next","vForm","reset","closePage","finish","getValues","save","unique","isCalling","returnCall","openPageElement","editView","vTuidSelect_VTuidSelect","mainView","react_default","createElement","initKey","onSearchMain","PageItems","renderMainRow","clickMainRow","before","searchMain","mainRowContent","ceasePage","showDiv","getIdFromObj","divView","renderDivRow","clickDivRow","divRowContent","showMain","viewModel","ownerValue","divs","divItems","getDivItems","vTuidView_VTuidView","tools","buildForm","vTuidInfo_VTuidInfo","pageItems_TuidPageItems","tuid","search","vTuidList_VTuidMainListBase","renderRow","clickRow","callOnSelected","ownerTop","ownerObj","ownerId","onSelected","vTuidList_VTuidMainList","cTuid_CTuid","buildPageItems","searchArr","cTuid_CTuidBase","proxies","linkFromName","cFrom","cUqFrom","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","VTuidMain","VTuidEdit","VTuidList","schemaFrom","openVPage","onEdit","itemChanged","cTuidInfo","cTuid_CTuidInfo","cTuidEdit","CTuidEdit","cTuidList","CTuidList","merge","cTuid_CTuidMain","cTuid_CTuidEdit","cTuid_CTuidList","cTuid_CTuidSelect","VTuidSelect","VTuidInfo","vBand_VBand","renderContent","addRow","VFieldBand","vField","vBand_VArrBand","vArr","setAddRow","vBand_VSubmitBand","vSubmit","vSubmit_VSubmit","onClickSubmit","submit","RuleNum","isNaN","RuleMin","RuleMax","vField_VField","fieldRes","null","readonly","FormMode","editable","vField_VInputControl","renderError","setInputValue","computeFields","inputGroup","suffix","ctrlCN","onKeyPress","RedMark","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","vField_VNumberControl","ch","charCode","extraChars","onKeyDot","onKeyNeg","preventDefault","_a","vField_VIntField","VDecField","VTextField","VDateTimeField","VDateField","vComputeField_VComputeField","vArr_VArr","ownerForm","onEditRow","rowPage","valueBoxs","onRowChanged","rowValues","$owner","renderItem","showRow","editRow","editSubmitCaption","internalAddRow","newSubmitCaption","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","vForm_VForm","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","vTuidField_VTuidField","showInfo","boxId","idBox","bandsBuilder_BandsBuilder","layout","formItems","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandColl","bandsBuilder","build","band","getVFields","f","getVArr","getVSubmit","fn","initValues","arrList","ctrl","fieldName","valueFromFieldName","propName","buildFieldValues","array","deep","buildObservableValues","HttpChannel","isCenter","hostUrl","apiToken","showError","_host__WEBPACK_IMPORTED_MODULE_3__","keys","k","buildOptions","innerFetch","buildError","timeOutHandler","encodeURI","ok","statusText","ct","retJson","_ui_nav__WEBPACK_IMPORTED_MODULE_2__","_appBridge__WEBPACK_IMPORTED_MODULE_1__","Headers","append","resOptions","resLang","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","_","l","languages","setResOptions","_CApp__WEBPACK_IMPORTED_MODULE_0__","_tuid__WEBPACK_IMPORTED_MODULE_4__","_sheet__WEBPACK_IMPORTED_MODULE_5__","_form_viewModel__WEBPACK_IMPORTED_MODULE_10__","_formUI__WEBPACK_IMPORTED_MODULE_12__","_CVEntity__WEBPACK_IMPORTED_MODULE_14__","control_ControlBase","formView","renderControl","filled","validate","control_Control","face","setProps","element","clearErrors","clearValue","isOK","getValueFromElement","notes","buttonsControl_ButtonsControl","otherClick","onOther","readValues","nothing","btnOther","submitButton","otherButton","TxtRequired","charsControl_CharsControl","parseValue","lodash","classnames","has-success","is-valid","renderInput","stringControl_StringControl","ErrInvalidNumber","ErrMin","ErrMax","unknownControl_UnknownControl","role","unknownControl_EmptyControl","pickIdControl_PickIdControl","pick","fromPicked","onPicked","itemFromId","initCaption","String","controlContent","component","pickTuidControl_PickTuidControl","onIdChanged","onFormValues","pickControl_PickControl","Content","createControl","group","groupRow","createGroupControl","fieldRow","fieldType","defaultFaces","controls","createFieldControl","help","string","parseFloat","radiobox","selectedIndex","selectedOptions","pick-id","pick-tuid","int","dec","bool","ln","entity_Entity","entities","typeId","fieldMaps","sys","sName","jName","tvApi","returns","schema","setSchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","getTuid","fieldArr","an","buildFieldsParams","arrResult","pa","rowResult","packRow","packArr","charCodeAt","escape","unpackRow","unpackArr","ch0","fLen","to","vals","maxCacheSize","tuid_Tuid","queue","waitingIds","cache","buildIdBoxer","BoxId","prototype","defineProperty","writable","enumerable","getObj","getCacheValue","toJSON","idName","mainFields","mf","_id","delete","defer","util","has","cacheTuids","moveToHead","shift","proxied","cacheValue","unpackTuidIds","api","getApiFrom","tuids","tuidIds","cacheTuidFieldValues","afterCacheId","cacheDivIds","tuidGet","divName","cacheFieldsInValue","arrValues","tuidDiv","getDiv","tuidSave","tuidSearch","tuidArrGet","tuidArrSave","tuidArrPos","showTuid","tuid_TuidMain","Main","TuidDiv","cacheIds","cUqFrm","getImportUq","cTuidMainFromName","action_Action","pack","sheet_Sheet","states","op","ops","actions","discription","appId","sheetSave","app","flow","sheetAction","brief","unpackSheet","flows","getSheet","getArchive","unpack","sheetArchive","sheetArchives","stateSheets","sheet_PageStateItems","stateSheetCount","s","count","getStateSheets","query_Query","isPaged","more","hasMore","startField","buildParams","unpackReturns","$page","query","table","book_Book","queryApiName","history_History","map_Map","queries","newAction","newQuery","add","del","pending_Pending","fieldDefaultValue","entities_Entities","sheets","books","maps","histories","pendings","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","loadIds","clearCacheTimer","accesses","buildEntities","loadEntities","buildTuids","buildAccess","div","tuidUrl","cacheTimer","newTuid","fromType","fromObj","book","pending","uqId","newBook","newMap","newHistory","newSheet","newPending","buildSheet","ownerField","af","bootstrapCreateRow","elementCreateRow","_control__WEBPACK_IMPORTED_MODULE_1__","cc","control","setInitValues","ElementRowContainer","BootStrapRowContainer","refetchApi","ApiBase","getHttpChannel","callFetch","TitleBar","logoutClick","showLogout","navChange","hasBack","href","debugLogout","rightView","b","nick","openWindow","DefaultRow","vQueryMain_VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","vQuerySelect_VQuerySelect","selectRow","vQuerySelect_QueryPageItems","cQuery_CQueryBase","cQuery_CQuery","VQueryMain","main","cQuery_CQuerySelect","VQuerySelect","ImageItemEdit","_itemEdit__WEBPACK_IMPORTED_MODULE_8__","overSize","upload","resUploader","resId","isChanged","_page__WEBPACK_IMPORTED_MODULE_7__","_resUploader__WEBPACK_IMPORTED_MODULE_4__","multiple","maxSize","border","padding","_image__WEBPACK_IMPORTED_MODULE_5__","_nav__WEBPACK_IMPORTED_MODULE_6__","mobx__WEBPACK_IMPORTED_MODULE_3__","Loading","ResUploader","files","fileInput","FormData","file","abortController","AbortController","signal","onFilesChange","tonva_tools__WEBPACK_IMPORTED_MODULE_3__","cImportUqs","cUqCollection","tonva_react_form__WEBPACK_IMPORTED_MODULE_4__","onRowClick","selectUnitPage","appUnits","setSettings","tonvaApp","retErrors","promiseChecks","roleAppUI","buildRoleAppUI","uqUI","newCUq","checks","retError","roles","lodash__WEBPACK_IMPORTED_MODULE_2___default","getCUq","CUq","_uq__WEBPACK_IMPORTED_MODULE_5__","cUqArr","VAppMain","_centerApi__WEBPACK_IMPORTED_MODULE_6__","userAppUnits","showUnsupport","appUnit","loadUqs","clearPrevPages","showMainPage","renderView","userName","sheetTypeId","getCUqFromId","navSheet","appContent","appPage","_rule__WEBPACK_IMPORTED_MODULE_0__","_field__WEBPACK_IMPORTED_MODULE_1__","_face__WEBPACK_IMPORTED_MODULE_2__","_TonvaForm__WEBPACK_IMPORTED_MODULE_5__","FormView","buildRows","some","every","formRows","createRow","buildRow","buttonsRow","createButtons","_rowContainer__WEBPACK_IMPORTED_MODULE_5__","formRow","formRowCreator","_control__WEBPACK_IMPORTED_MODULE_4__","buttons","entityIcons","react__WEBPACK_IMPORTED_MODULE_0___default","tonva_react_form__WEBPACK_IMPORTED_MODULE_1__","fixWidth","ControllerUq","tonva_tools__WEBPACK_IMPORTED_MODULE_0__","centerApi","vMain_VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","filter","isDev","vNew_VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","vSheetView_VSheetView","flowRow","preState","sheetView","removed","sheetData","vEdit_VSheetEdit","saveSheet","controllers_form","vSheetAction_VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","vSchema_VSheetSchema","schemaStringify","vArchives_VArchives","archiveClick","processing","archiveRow","getArchives","vList_VSheetList","rowClick","pageStateItems","listRow","stateName","vArchived_VArchived","vSheet_VSheet","vSaved_VSheetSaved","restart","vSheetProcessing_VSheetProcessing","cSheet_CSheet","showSaved","loadStateSheetCount","createPageStateItems","VSheetMain","onSheet","me","$","sheetActPreState","sheetActState","changeStateCount","curState","delta","stateCount","VSheetNew","sheetNew","VSheetSaved","sheetSaved","VSheetEdit","sheetEdit","VSheetSchema","VArchives","VArchived","VSheetList","VSheetAction","VSheetProcessing","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","sheetTitle","disc","vBookMain_VBookMain","cBook_CBook","VBookMain","vUq_VUq","isSysVisible","linkItem","cLink","lists","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","Fragment","isVisible","controllers_link","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","lowerPropertyName","cUq_CUq","schemaLoaded","CTuidMain","controllers_tuid","CTuidSelect","CTuidInfo","CQuery","CQuerySelect","CMap","CAction","CSheet","CBook","CHistory","controllers_history","CPending","baseUrl","loadEntites","collection","warn","tuidPlaceHolder","en","sheetFromTypeId","startSheet","entityName","entityType","cFromName","tUI","cEntity","getUI","VUq","vMain_VMapMain","itemRender","ItemRow","remove","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","inputValues_VInputValues","onValuesSubmit","cMap_MapItem","cMap_CMap","keysLen","keyFields","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","nullable","rowIndex","createItem","getLable","confirmDelete","v0","q","retFields","newItem","addItem","VMapMain","callParam","vActionMain_VActionMain","resultPage","mainPage","cAction_CAction","VActionMain","vPendingMain_VPendingMain","cPending_CPending","VPendingMain","vHistoryMain_VHistoryMain","cHistory_CHistory","VHistoryMain","ItemEdit","uiItem","internalStart","internalEnd","_nav__WEBPACK_IMPORTED_MODULE_1__","consts","uqBasedata","appIcon","netToken","_uqApi__WEBPACK_IMPORTED_MODULE_0__","_wsChannel__WEBPACK_IMPORTED_MODULE_1__","userApi","_net__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","account","verify","prop","Controller","_net__WEBPACK_IMPORTED_MODULE_4__","onMessageReceive","onMessage","isLogined","unregisterReceiveHandler","receiveHandlerId","onDispose","vp","registerReceiveHandler","_resolve_$","View","VPage","_schema__WEBPACK_IMPORTED_MODULE_0__","_uiSchema__WEBPACK_IMPORTED_MODULE_1__","itemObservable","isFirst","loading","beforeLoad","loaded","allLoaded","firstSize","appendPosition","_items","mobx__WEBPACK_IMPORTED_MODULE_1__","topDiv","_uid__WEBPACK_IMPORTED_MODULE_2__","bottomDiv","setPageStart","unshift","reverse","maxCount","dict","Map","loadId","_loadIds","_loadId","TonvaForm","_formView__WEBPACK_IMPORTED_MODULE_3__","EasyDate","now","nDate","getDate","_date","hour","getHours","minute","getMinutes","getMonth","hm","getFullYear","Media","tonva_tools__WEBPACK_IMPORTED_MODULE_2__","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","classnames__WEBPACK_IMPORTED_MODULE_2___default","Badge_Badge","badgeAlign","badgeVertical","LMR_LMR","cursor","FA_FA","spin","pull","pulse","rotate","flip","inverse","IconText_IconText","iconClass","textClass","Muted","base_ListBase","pageItems","selectedItems","nextProps","clickable_Clickable","static_Static","selectable_Selectable","itemsArray","compare","_selectedItems","selected","labelId","si","buildItems","anySelected","onSelect","flex","marginBottom","htmlFor","list_List","listBase","nextState","nextContext","updateProps","isLoading","staticRow","PropRow","row_PropBorder","borderTop","row_PropGap","w","backgroundColor","valueAlignStart","valueAlignCenter","valueAlignEnd","row_LabeledPropRow","gridProps","bk","bg-white","renderLabel","renderProp","align","vAlign","col","full","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","row_ListPropRow","borderBottom","ComponentPropRow","propView_PropView","isGap","PropGrid_PropGrid","propView","formRes","zh","form_Form","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","ui_res","py-3","Container","formContext","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","buttonName","field_Field","contextType","stringItemEdit_StringItemEdit","edit_itemEdit","preValue","edit_Edit","defaultSepClassName","defaultRowContainerClassName","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","rowContainerClassName","topBorder","bottomBorder","elItems","divValue","listRow_ListRow","pressed","isIcon","noteNum","mid","viceSpan","vice","middle","midSize","unread","uv","va-action","listView_ListView","elHeader","itemClick","converter","ex","listItem","Tab","_content","contentBuilder","TabCaptionComponent","tabs_Tabs","tabClick","selectedTab","tabBack","contentBack","notify","tabName","height","display","notifyCircle","num","userSetProp","FetchErrorView","reApi","errContent","LocalData","Data","homeTabCur","module","exports","meTab","LoadableComponent","lib_default","loader","VSiteHeader_VSiteHeader","logo_default","alt","renderSearchHeader","VSearchHeader_VSearchHeader","LIGUOSHENG","VHome_VHome","renderSection","subtitle","openMetaView","viewMetaButton","siteHeader","renderSiteHeader","renderCategoryRootList","CHome_CHome","cFunctionCategory","renderRootList","renderHome","startDebug","titleTitle","textOverflow","whiteSpace","VRootCategory_subStyle","fontSize","VRootCategory_VRootCategory","categoryClick","categoryWapper","openMainPage","renderRootCategory","renderSubCategory","marginRight","renderThirdCategory","categories","VCategory_VCategory","renderChild","childWapper","categoryWaper","cHome","funcs","pid","testpage2_TestPage2","cUsqArr","baseInfoNames","sheetNames","pages_NavTuidMainPage","cuq","pages_NavTuidEditPage","pages_NavSheetPage","showOneVPage","navToPage","navToEditPage","CFunctionCategory_CFunctionCategory","productuid_VTuidMainProduct","tonva_react_uq","onPackType","Button","schemaProduct","schemaProduct2","schemaProduct3","productuid_VTuidEditProduct","名称","编码","查询码","通用名称","生产厂商","pickManufactor","商品分类","生产日期","有效期","uiSchema2","product","商品条形码","规格型号","单位","计量单位类型","中包装","默认包装","件长","件宽","件高","堆码层数极限","小包装长","小包装宽","小包装高","上架拆中包装","单位体积","uiSchema3","零售价","批发价","税率","销项税率","折扣分类","折扣率","formData2","formData3","onFormButtonNextClick","view2","form2","onFormButtonNextClick2","view3","form3","onFormButtonNextClick3","cid","mapc2","mapc3","inId","qm2","qr2","fd","qm3","qr3","客户","dataF","loadMap2","loadMap3","productuid_VTuidSelectProduct","rbutton","showM","productuid_VTuidMainListProduct","packtype_VTuidMainPackType","packtype_VTuidSelectPackType","customertuid_VTuidMainCustomer","schemaCustomer","schemaCustomer2","schemaCustomer3","customertuid_VTuidEditCustomer","法人代表","收货地址","调拨类型","运输方式","联系人","图片","企业类型","许可证号","发证日期","有效期至","经营范围","范围显示","营业执照","营业执照发证日期","营业执照有效期至","营业执照年检证明","组织机构代码证号","代码证发证日期","代码证有效期至","代码证年检证明","GMP","GMP发证日期","税号","开户行","账号","记账方式","换票方式","换票类型","customertuid_VTuidSelectCustomer","customertuid_VTuidMainListCustomer","suppllier_VTuidMainSupplier","schemaSupplier","schemaSupplier2","schemaSupplier3","suppllier_VTuidEditSupplier","注册地址","退货地址","企业性质","供应商","许可证发证日期","许可证有效期至","营业执照号","组织代码发证日期","组织代码有效期至","组织代码年检证明","税务登记证号","税务登记证发证日期","认证","证书号","证书有效期启","证书有效期至","认证范围","suppllier_VTuidSelectSupplier","suppllier_VTuidMainListSupplier","manufactor_VTuidSelectManufactor","staff_VTuidSelectStaff","department_VTuidSelectDepartment","goodslocation_VTuidSelectGoodslocation","warehouse_VTuidSelectWarehouse","logisticscentre_VTuidSelectLogisticscentre","productPackRowContent","ratio","rText","packType","packName","VTuidEditC","packtype","客户信息","供应商信息","职员信息","部门信息","物流中心","货位信息","库区信息","scmbase_res","CN","team","staff","noStaff","noPost","usq","arrNew","arrEdit","price","fromUser","fromUnit","subject","getMessage","newMessage","editSumbit","teamPerson","receive_schemaPurchase","src_ui","initTabName","faceTabs","bruce/scmbasedata","采购收货","单号","供货者","公司机构","合同单号","日期","送货人","是否空入","随货同行单号","承运方式","委托运输单号","发运地点","运输单位","运输工具","运输状态","运输车牌号","温控方式","温控状态","启运温度","到货温度","启运时间","到货时间","products","价格","数量","金额","rowPurchaseClick","controllerPurchase","合同号","v1","onScrollBottomSelectPurchase","rowContentSelectPurchase","renderRowSelectPurchase","viewSelectPurchase","cSheetFromName","viewGetSheetNo","src_App_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","react_dom","URL","origin","response","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.63cbab18.chunk.js","sourcesContent":["export {left0} from './left0';\nexport * from './user';\nexport * from './net';\nexport * from './ui';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\nexport * from './entry';\n\n","export * from './form';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './components';\nexport * from './media';\nexport * from './listView';\nexport * from './searchBox';\nexport * from './multiStep';\nexport * from './uid';\n","import * as React from 'react';\nimport { CApp, AppUI } from './controllers';\nexport * from './entities';\nexport * from './controllers';\nexport * from './centerApi';\nexport * from './tools';\n\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n\nexport async function startApp(ui: AppUI) {\n    convertUIKeyToLowercase(ui);\n    let cApp = new (ui && ui.CApp || CApp)(ui);\n    await cApp.start();\n}\n","import * as React from 'react';\nimport { Controller, VPage, View } from 'tonva-tools';\nimport { Entity, Field, TuidMain } from '../entities';\nimport { CUq } from './uq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(_tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid, _ownerField} = field;\n            let cTuidSelect = await (_tuid as TuidMain).cSelectFrom();\n            let param:any = undefined;\n            if (_ownerField !== undefined) param = form.getValue(_ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify } from '../../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\nexport const PureJSONContent = (values, x?:any) => <>content: {jsonStringify(values)}</>;\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","import * as React from 'react';\nimport {observable, has} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../fetchError';\nimport {appUrl, setAppInFrame, logoutUqTokens, getExHash, getExHashPos} from '../net/appBridge';\nimport {LocalData} from '../local';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, isDevelopment, host} from '../net';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\n\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n\nconst logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface State {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, State> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        if (key === undefined) return;\n        if (this.stack.find(v => v.key === key) === undefined) return;\n        while (this.stack.length >0) {\n            let len = this.stack.length;\n            let top = this.stack[len-1];\n            if (top.key === key) break;\n            this.pop();\n        }\n    }\n\n    topKey():number {\n        let len = this.stack.length;\n        if (len === 0) return undefined;\n        return this.stack[len-1].key;\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        //this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (self != window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <Loading />\n                </li>;\n                break;\n                //<i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n                //<span className=\"sr-only\">Loading...</span>\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />\n        return (\n        <ul className='va'>\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport interface NavSettings {\n    loginTop?: JSX.Element;\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    private navSettings: NavSettings;\n    @observable user: User/*InNav*/ = undefined;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getPredefinedUnitName() {\n        try {\n            let unitRes = await fetch('unit.json', {});\n            //if (unitRes)\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.clear();\n            return;\n        }\n    }\n\n    private async loadPredefinedUnit() {\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (isDevelopment !== true) return unit.id;\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    setSettings(settings?: NavSettings) {\n        this.navSettings = settings;\n    }\n\n    hashParam: string;\n    private centerHost: string;\n    async start() {\n        try {\n            let hash = document.location.hash;\n            if (hash !== undefined && hash.length > 0) {\n                let pos = getExHashPos();\n                if (pos < 0) pos = undefined;\n                this.hashParam = hash.substring(1, pos);\n            }\n            nav.clear();\n            this.startWait();\n            await host.start();\n            let {url, ws, resHost} = host;\n            this.centerHost = url;\n            this.resUrl = 'http://' + resHost + '/res/';\n            this.wsHost = ws;\n            setCenterUrl(url);\n            \n            let guest:Guest = this.local.guest.get();\n            if (guest === undefined) {\n                guest = await guestApi.guest();\n            }\n            nav.setGuest(guest);\n\n            let exHash = getExHash();\n            let appInFrame = setAppInFrame(exHash);\n            if (exHash !== undefined && window !== window.parent) {\n                // is in frame\n                if (appInFrame !== undefined) {\n                    this.ws = wsBridge;\n                    console.log('this.ws = wsBridge in sub frame');\n                    //nav.user = {id:0} as User;\n                    if (self !== window.parent) {\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\n                    }\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                    //await this.showAppView();\n                    return;\n                }\n            }\n\n            let predefinedUnit = await this.loadPredefinedUnit();\n            appInFrame.predefinedUnit = predefinedUnit;\n\n            let user: User = this.local.user.get();\n            if (user === undefined) {\n                let {notLogined} = this.nav.props;\n                if (notLogined !== undefined) {\n                    await notLogined();\n                }\n                else {\n                    await nav.showLogin(undefined);\n                }\n                return;\n            }\n\n            await nav.logined(user);\n        }\n        catch (err) {\n        }\n        finally {\n            this.endWait();\n        }\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        logoutApis();\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, user.token);\n        ws.connect();\n\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    loginTop(defaultTop:JSX.Element) {\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\n        let lv = await import('../entry/login');\n        let loginView = <lv.default \n            withBack={withBack} \n            callback={callback} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        appInFrame.unit = undefined;\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    async changePassword() {\n        let cp = await import('../entry/changePassword');\n        nav.push(<cp.ChangePasswordPage />);\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    topKey():number {\n        return this.nav.topKey();\n    }\n    popTo(key:number) {\n        this.nav.popTo(key);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} style={mobileHeaderStyle}>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget as Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[name];\n        if (arrRowContexts === undefined) this.subContexts[name] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        if (this.rules === undefined) return;\n        this.clearContextErrors();\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.removeErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) this.widgets[i].clearContextError();\n    }\n\n    checkRules() {\n        this.checkFieldRules();\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    removeErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    //get data() {return this.row.data;}\n    removeErrors() {\n        super.removeErrors();\n        this.parentContext.removeErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import { decodeGuestToken } from '../user';\nimport { CenterApi } from './uqApi';\n\nexport class GuestApi extends CenterApi {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './uqApi';\nexport {appInFrame, isBridged, getExHash} from './appBridge';\nexport * from './host';\nexport {httpGet} from './httpChannel';\n","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { BoxId, Tuid } from \"../entities\";\nimport { PureJSONContent } from '../controllers';\n\ntype TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    if (typeof bi === 'number') return <>{bi}</>;\n    let {id, _$tuid, _$com} = bi as BoxId;\n    let t:Tuid = _$tuid;\n    if (t === undefined) {\n        if (ui !== undefined) return ui(bi, x);\n        return PureJSONContent(bi, x);\n    }\n    let com = ui || _$com;\n    if (com === undefined) {\n        com = bi._$com = t.getTuidContent();\n    }\n    let val = t.valueFromId(id);\n    if (typeof val === 'number') val = {id: val};\n    if (ui !== undefined) {\n        let ret = ui(val, x);\n        if (ret !== undefined) return ret;\n        return <>{id}</>;\n    }\n    return React.createElement(com, val);\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'undefined':\n            break;\n        case 'object':\n            if (tuidValue !== null) return boxIdContent(tuidValue, ui, x);\n            break;\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }       \n    if (nullUI === undefined) return <>.</>;\n    return nullUI();\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","export * from './jsonStringify';\nexport * from './tv';\n","export * from './nav';\nexport * from './titleBar';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';","import _ from 'lodash';\nimport {nav} from '../ui';\nimport {uid} from '../uid';\nimport {uqTokenApi as uqTokenApi, callCenterapi, CenterAppApi, AppUq, centerToken, App, setCenterToken} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\ninterface UqTokenAction extends UqToken {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokens:{[uqName:string]: UqTokenAction}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) uqTokens[i] = undefined;\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let appInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            console.log(\"receive PostMessage: %s\", JSON.stringify(message));\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            console.log(\"onReceiveAppApiMessage: %s\", JSON.stringify(ret));\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                url: ret.url,\n                urlDebug: ret.urlDebug,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    let user = nav.user = message; // message.user;\n    setCenterToken(user.id, user.token);\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, url:undefined, urlDebug:undefined, token:undefined};\n    let {unit, predefinedUnit} = appInFrame;\n    let parts = apiName.split('/');\n    let ret = await uqTokenApi.uq({unit: unit||predefinedUnit, uqOwner: parts[0], uqName: parts[1]});\n    if (ret === undefined) {\n        console.log('apiTokenApi.api return undefined. api=%s, unit=%s', apiName, unit);\n        throw 'api not found';\n    }\n    return {name: apiName, url: ret.url, urlDebug:ret.urlDebug, token: ret.token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, url, urlDebug, token} = message;\n    let action = uqTokens[apiName];\n    if (action === undefined) {\n        throw 'error app api return';\n        //return;\n    }\n    let realUrl = host.getUrlOrDebug(url, urlDebug);\n    console.log('onAppApiReturn(message:any): url=' + url + ', debug=' + urlDebug + ', real=' + realUrl);\n    action.url = realUrl;\n    action.token = token;\n    action.resolve(action);\n}\n\nexport function setAppInFrame(appHash: string):AppInFrame {\n    if (appHash) {\n        let parts = appHash.split('-');\n        let len = parts.length;\n        if (len > 0) {\n            let p = 1;\n            appInFrame.hash = parts[p++];\n            if (len>0) appInFrame.unit = Number(parts[p++]);\n            if (len>1) appInFrame.page = parts[p++];\n            if (len>2) appInFrame.param = parts.slice(p++);\n        }\n    }\n    return appInFrame;\n}\n\nexport function getExHashPos():number {\n    let hash = document.location.hash;\n    if (hash !== undefined && hash.length > 0) {\n        let pos = hash.lastIndexOf('#tv-');\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\n        return pos;\n    }\n    return -1;\n}\n\nexport function getExHash():string {\n    let pos = getExHashPos();\n    if (pos < 0) return undefined;\n    return document.location.hash.substring(pos);\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv-' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        let {unit, predefinedUnit} = appInFrame;\n        uqToken = await uqTokenApi.uq({unit: unit || predefinedUnit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken === undefined) {\n            let err = 'unauthorized call: uqTokenApi center return undefined!';\n            throw err;\n        }\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: appInFrame.hash,\n        }, \"*\");\n    });\n}\n\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable, reaction } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport abstract class Widget {\n    protected name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable protected errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    container = observer(():JSX.Element => {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any = this.label;\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.render());\n    })\n\n    protected get label():string {\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            else label = uiLabel || this.name;\n        }\n        return label;\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem, StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        this.internalOnKeyDown(evt);\n        if (evt.keyCode !== 13) return;\n        let {onEnter} = this.context.form.props;\n        if (onEnter === undefined) return;\n\n        this.changeValue(evt.currentTarget.value, true);\n        this.checkRules();\n        this.context.checkContextRules();\n\n        let ret = await onEnter(this.name, this.context);\n        if (ret !== undefined) {\n            this.context.setError(this.name, ret);\n        }\n    }\n\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n    }\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.removeErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleInt(res, min, max) :\n                new RuleNum(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || key>=48 && key<=57\n            || key>=96 && key<=105\n            || key===109 || key===189;\n    }\n    \n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n        let key = evt.keyCode;\n        event.returnValue = this.isValidKey(key);\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.removeErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline p-0');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        if (this.context.inNode === true) {\n            return <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n        }\n        else {\n            return <div className={cn}>\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\n            </div>;\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            this.context.checkRules()\n            if (this.context.hasError === true) {\n                return;\n            }\n        }\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, caption:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            caption = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = caption; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    protected get label():string {return null}\n\n    render() {\n        return <this.observerRender />\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.removeErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.removeErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}<div className=\"flex-grow-1\">{content}</div>{deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiImageItem } from '../../schema';\nimport { Image } from '../../image';\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class ImageWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiImageItem;\n    @observable private imageSrc: string;\n\n    protected init() {\n        super.init();\n        this.imageSrc = this.value;\n    }\n\n    protected onClick = async () => {\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\n        let ret = await edit.start();\n        if (ret !== null) {\n            this.setValue(ret);\n            this.imageSrc = ret;\n        }\n        await edit.end();\n    }\n\n    render() {\n        return <this.observerRender />;\n    }\n\n    private observerRender = observer(() => {\n        let cn = [\n            'bg-white p-1 d-flex justify-content-center',\n        ];\n        let onClick: any;\n        if (!this.readOnly && !this.disabled) {\n            cn.push('cursor-pointer');\n            onClick = this.onClick;\n        }\n        return <div className={classNames(cn)} onClick={onClick}>\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\n        </div>;\n    });\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport { Schema, ArrSchema, DataType, ButtonSchema, ItemSchema } from '../../schema';\nimport { UiItem, UiArr, UiType, UiButton, TempletType, TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context, RowContext, FormContext, ContextContainer } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\nimport { ImageWidget } from './imageWidget';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    image: {\n        dataTypes: ['string'],\n        widget: ImageWidget,\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {isRow, widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    return <widget.container />;\n    /*\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.container());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.container();\n        return widgetElement;\n    }\n    */\n}\n\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {};\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <textarea ref={(input) => this.input=input} \n            className={classNames(this.className, cn)}\n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\n//const radioStyle:React.CSSProperties = {width:'2em', height:'1.2em'};\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow, inNode} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'form-radio-inline');\n        return <span className={cn}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n/*\n<div className=\"form-control d-flex border-0\"><input\nref={(input)=>this.input = input}\nclassName={classNames(this.className, 'align-self-center')}\ntype=\"checkbox\"\nstyle={{maxHeight:\"1.2em\"}}\ndefaultValue={this.defaultValue} \nonChange={this.onChange} />\n</div>\n*/","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","export { factory } from './factory';\nexport { Widget } from './widget';\nexport { TextWidget } from './textWidget';\nexport { TextAreaWidget } from './textareaWidget';\nexport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nexport { UpdownWidget } from './updownWidget';\nexport { NumberWidget } from './numberWidget';\nexport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nexport { CheckBoxWidget } from './checkBoxWidget';\nexport { ImageWidget } from './imageWidget';\nexport { Context, RowContext, FormContext, ContextContainer } from '../context';\nexport { SelectWidget } from './selectWidget';\nexport { RadioWidget } from './radioWidget';\nexport { RangeWidget } from './rangeWidget';\nexport { IdWidget } from './idWidget';\nexport { ButtonWidget } from './buttonWidget';\nexport { Unknown } from './unknown';\n","import {nav} from '../ui/nav';\nimport {FetchError} from '../fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel} from './httpChannel';\nimport {HttpChannelUI, HttpChannelNavUI} from './httpChannelUI';\nimport {appUq, appInFrame, logoutUqTokens} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\nimport { nav } from '../ui';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n    logoutUqTokens();\n}\n\ninterface UqLocal {\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n            return false;\n        }\n        uq.isNet = true;\n        return true;\n    }\n}\n\nconst localUqs = new CacheUqLocals;\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = await appUq(this.uq, this.uqOwner, this.uqName);\n        this.token = uqToken.token;\n        channel = new HttpChannel(false, uqToken.url, uqToken.token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n\n    async update():Promise<string> {\n        return await this.get('update');\n    }\n\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    async loadAccess():Promise<any> {\n        return await localUqs.loadAccess(this);\n    }\n\n    async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }\n\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }\n\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async proxied(name:string, proxy:string, id:number):Promise<any> {\n        try {\n            let url = 'tuid-proxy/' + name + '/' + proxy + '/' + id;\n            let ret = await this.get(url);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n\n    async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }\n\n    async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }\n\n    async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }\n\n    async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }\n\n    async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }\n\n    async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }\n\n    async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    async user():Promise<any> {\n        return await this.get('user');\n    }\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, url, urlDebug} = ret;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        this.token = token;\n        return new HttpChannel(false, realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    loginedUserId = userId;\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new HttpChannel(true, centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new HttpChannel(true, centerHost, centerToken);\n}\n\nexport abstract class CenterApi extends ApiBase {\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokens = 'uqTokens';\nexport class UqTokenApi extends CenterApi {\n    private local: UqLocals;\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        try {\n            let {unit:unitParam, uqOwner, uqName} = params;\n            if (this.local === undefined) {\n                let ls = localStorage.getItem(uqTokens);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {unit, user} = this.local;\n                if (unit !== unitParam || user !== loginedUserId) this.local = undefined;\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: params.unit,\n                    uqs: {}\n                };\n            }\n\n            let un = uqOwner+'/'+uqName;\n            let nowTick = new Date().getTime();\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {tick, value} = uq;\n                if ((nowTick - tick) < 24*3600*1000) {\n                    return _.clone(value);\n                }\n            }\n            let ret = await this.get('app-uq', params);\n            this.local.uqs[un] = {\n                tick: nowTick,\n                value: ret,\n            }\n            localStorage.setItem(uqTokens, JSON.stringify(this.local));\n            return _.clone(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqTokens);\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApi {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface App {\n    id: number;\n    uqs: AppUq[];\n}\n\nexport interface AppUq {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    access: string;\n}\n\nexport interface UqService {\n    id: number;\n    url: string;\n    urlDebug: string;\n    token: string;\n}\n\nconst appUqs = 'appUqs';\n\nexport class CenterAppApi extends CenterApi {\n    private cachedUqs: App;\n    async uqs(appOwner:string, appName:string):Promise<App> {\n        let ret:any;\n        let ls = localStorage.getItem(appUqs);\n        if (ls !== null) {\n            let rLs = JSON.parse(ls);\n            let {appOwner:rAppOwner, appName:rAppName, value} = rLs;\n            if (appOwner === rAppOwner && appName === rAppName) ret = value;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(appOwner, appName);\n            let obj = {\n                appOwner:appOwner, \n                appName:appName, \n                value: ret,\n            }\n            localStorage.setItem(appUqs, JSON.stringify(obj));\n        }\n        return this.cachedUqs = _.cloneDeep(ret);\n    }\n    private async uqsPure(appOwner:string, appName:string):Promise<App> {\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\n    }\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(appOwner, appName);\n        let {id:cachedId, uqs:cachedUqs} = this.cachedUqs;\n        let {id:retId, uqs:retUqs} = ret;\n        if (cachedId !== retId) return false;\n        if (cachedUqs.length !== retUqs.length) return false;\n        let len = cachedUqs.length;\n        for (let i=0; i<len; i++) {\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\n        }\n        return true;\n    }\n    async unitxUq(unit:number):Promise<UqService> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\n        return await this.post('tie/reset-password', param);\n    }\n}\n\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<App> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    //let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(appOwner, appName);\n    centerAppApi.checkUqs(appOwner, appName).then(v => {\n        if (v === false) {\n            localStorage.removeItem(appUqs);\n            nav.start();\n        }\n    });\n    return ret;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from 'tonva-tools';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {TitleBar} from './titleBar';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string;\n    icon?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    logout?: boolean | (()=>Promise<void>);\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs[0];\n        if (t0 === undefined) return;\n        await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot');\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num');\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let titleBar;\n        if (header !== false) {\n            titleBar = <TitleBar \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right} \n            />;\n        }\n\n        return <article className='page-container'>\n            {titleBar}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                })\n            }\n            </section>\n            {tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children} = this.props;\n        let titleBar;\n        if (header !== false)\n            titleBar = <TitleBar \n                back={back} \n                center={header as any}\n                right={right}\n                logout={this.props.logout}\n            />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {titleBar}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter;\n        if (footer !== undefined) elFooter = <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n}\n\nexport function Image(props: ImageProps) {\n    let {className, style, src} = props;\n    if (!src) {\n        return <div className={classNames(className, 'image-none')} style={style}>\n            <i className=\"fa fa-file-o\" />\n        </div>;\n    }\n    if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} style={style} />;\n}\n","export const isDevelopment = process.env.NODE_ENV === 'development';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction centerUrlFromHost(host:string) {return `http://${host}/`}\nfunction centerWsFromHost(host:string) {return `ws://${host}/tv/`}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start() {\n        if (isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, urlDebug:string):string {\n        if (isDevelopment !== true) return url;\n        if (!urlDebug) return url;\n        for (let i in hosts) {\n            let host = hosts[i];\n            let {value, local} = host;\n            let hostString = `://${i}/`;\n            let pos = urlDebug.indexOf(hostString);\n            if (pos > 0) {\n                if (local === false) return url;\n                urlDebug = urlDebug.replace(hostString, `://${value}/`);\n                return urlDebug;\n            }\n        }\n        return url;\n    }\n\n    async localCheck(urlDebug: string):Promise<boolean> {\n        return await localCheck(urlDebug);\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 200;\n\nfunction fetchLocalCheck(url:string):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, fetchOptions as any)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","import * as React from 'react';\nimport { SearchBox, List, Muted, LMR } from 'tonva-react-form';\nimport { TuidMain, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, proxyLinks, isFrom} = this.controller;\n        let newButton:any;\n        if (isFrom === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\n        let content:any;\n        if (proxyLinks === undefined) {\n            let right = <>\n                {newButton}\n                <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\n            </>;\n            content = <LMR className='m-3' right={right}>\n                <SearchBox className=\"w-100\" size=\"md\"\n                    onSearch={this.onSearch} \n                    placeholder={'搜索'+label} />\n            </LMR>;\n        }\n        else {\n            content = <List className=\"my-2\"\n                header={<Muted>{label} 代理下列Tuid</Muted>}\n                items={proxyLinks}\n                item={{render: this.entityRender, onClick:this.entityClick}} />\n        }\n        return () => <Page header={label}>\n            {content}\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { TuidMain, Tuid } from '../../entities';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { nav, Page } from 'tonva-tools';\nimport { VTuidMainListBase, VTuidDivListBase } from './vTuidList';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../entities';\nimport { CTuid, TuidUI } from './cTuid';\nimport { SearchBox, List } from 'tonva-react-form';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.owner === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { TuidMain } from '../../entities';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import { PageItems } from 'tonva-tools';\nimport { Tuid } from \"../../entities\";\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { TuidMain, Entity, Tuid, TuidDiv } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain, CTuidDiv } from './cTuid';\nimport { JSONContent, RowContent } from '../form/viewModel';\n\nexport abstract class VTuidMainListBase  extends VEntity<TuidMain, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidMainList extends VTuidMainListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isFrom === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n\nexport abstract class VTuidDivListBase  extends VEntity<TuidDiv, TuidUI, CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n","import _ from 'lodash';\nimport { TypeVPage, PageItems } from 'tonva-tools';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { TuidMain, Tuid, TuidDiv } from \"../../entities\";\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from \"../uq/cUq\";\nimport { CLink } from \"../link\";\nimport { VTuidInfo } from \"./vTuidInfo\";\nimport { TuidPageItems } from \"./pageItems\";\nimport { VTuidMainList } from './vTuidList';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity.owner || this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport abstract class CTuidBase extends CTuid<TuidMain> {\n    constructor(cUq: CUq, entity: TuidMain, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n        //let tuid = this.entity;\n        //this.proxies = tuid.proxies;\n        if (this.proxies !== undefined) {\n            this.proxyLinks = [];\n            for (let i in this.proxies) {\n                let link = this.cUq.linkFromName('tuid', i);\n                this.proxyLinks.push(link);\n            }\n        }\n    }\n\n    from():CTuidBase {\n        let ret = this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    cUqFrom():CUq {\n        return this.entity.cUqFrom();\n    }\n    cEditFrom(): CTuidEdit {\n        let cUq = this.entity.cUqFrom();\n        return cUq.cTuidEditFromName(this.entity.name);\n    }\n    cInfoFrom(): CTuidInfo {\n        let cUq = this.entity.cUqFrom();\n        return cUq.cTuidInfoFromName(this.entity.name);\n    }\n    cSelectFrom(): CTuidSelect {\n        let cUq = this.entity.cUqFrom();\n        return cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    proxies: {[name:string]: TuidMain};\n    proxyLinks: CLink[];\n    isFrom: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidMainList {return VTuidMainList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        //let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': await this.onNew(); break;\n            case 'list': await this.onList(); break;\n            case 'edit': await this.onEdit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        //await this.openVPage(v, value);\n    }\n\n    protected async edit(values:any) {\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\n        if (cTuidEdit === undefined) {\n            await this.openVPage(this.VTuidEdit, values);\n        }\n        else {\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\n        }\n    }\n\n    private async onNew() {\n        await this.edit(undefined);\n    }\n\n    private async onList() {\n        let cTuidList = this.ui && this.ui.CTuidList;\n        if (cTuidList === undefined) {\n            await this.openVPage(this.VTuidList, undefined);\n        }\n        else {\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\n        }\n    }\n\n    protected async onEdit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        this.edit(values);\n        //await this.openVPage(this.VTuidEdit, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidMain extends CTuidBase {\n    protected async internalStart(param?:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidMain);\n    }\n\n}\n\nexport class CTuidEdit extends CTuidBase {\n    protected async internalStart(id:any):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        if (typeof(id) === 'number') {\n            await this.onEdit(id);\n        }\n        else {\n            await this.edit(id);\n        }\n    }\n\n    protected async edit(values:any) {\n        await this.openVPage(this.VTuidEdit, values);\n    }\n}\n\nexport class CTuidList extends CTuidBase {\n    protected async internalStart(id:number):Promise<void> {\n        this.isFrom = this.entity.schemaFrom !== undefined;\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<TuidDiv> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ' + this.entity.name);\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\nexport * from './vTuidSelect';\nexport * from './vTuidList';\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\nimport { uid } from 'tonva-react-form';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames'\nimport { ViewModel } from \"./viewModel\";\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if ((value as number) !== NaN) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (n === NaN) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed, action } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { ViewModel } from \"../viewModel\";\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || this.field !== undefined && this.field.null === false) {\n            this.rules.push(new RuleRequired);\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            mode === FormMode.edit && this.fieldUI.editable === false;\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum);\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (ret === NaN)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) == v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt);\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n\nexport class VDateField extends VStringField {\n    \n}","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../entities';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\nimport { IObservableArray, observable } from 'mobx';\nimport _ from 'lodash';\nimport { List, FA, Muted } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { ViewModel, RowContent, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields, Field } from '../../entities';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../../tools';\nimport { Field, Tuid } from '../../../entities';\nimport { VField, RedMark } from \"./vField\";\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput, FormMode } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: Tuid;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        let {_ownerField} = this.field;\n        if (_ownerField !== undefined) {\n            let {name, arr} = _ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || (this.input && this.input.placeHolder)}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let redDot;\n        let {required} = this.fieldUI;\n        if (required === true || this.field.null === false) {\n            redDot = <RedMark />;\n        }\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VFieldsBand, VSubmitBand, FieldRes } from \"./vBand\";\nimport { Field, ArrFields } from \"../../entities\";\nimport { VForm, FormOptions } from \"./vForm\";\nimport { FormItems, FieldUI, FormItem } from \"../formUI\";\nimport { VSubmit } from \"./vSubmit\";\nimport { VField, buildVField, VComputeField } from \"./vField\";\nimport { VArr } from \"./vArr\";\nimport { VTuidField } from \"./vField/vTuidField\";\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name, fields} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\nimport { Field } from '../../../entities';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n            vField = VIntField;\n            break;\n        case 'bigint':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n        case 'date':\n            vField = VDateField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { observer } from \"mobx-react\";\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../entities';\nimport { computed, observable, IObservableObject, IObservableValue } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from 'tonva-react-form';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(this, values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields, id, order} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","export * from './vForm';\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from '../fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../ui/nav';\nimport { isDevelopment } from './host';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private isCenter: boolean;\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(isCenter: boolean, hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.isCenter = isCenter;\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.isCenter === true && this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = navigator.languages && navigator.languages[0] || // Chrome / Firefox\n        navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","export * from './CApp';\nexport * from './startApp';\nexport * from './uq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Rule} from '../rule';\n\nexport abstract class ControlBase {\n    protected formView: FormView;\n    constructor(formView:FormView) {\n        this.formView = formView;\n    }\n    render():JSX.Element {\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n        </div>;\n    }\n    protected abstract renderControl():JSX.Element;\n    @computed get hasError():boolean {return false;}\n    @computed get filled():boolean {return false;}\n    clear() {}\n    clearErrors() {}\n    readValues(values:any):any {}\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    isOk():boolean {this.validate(); return !this.hasError;}\n    protected validate() {}\n}\n\nexport abstract class Control extends ControlBase {\n    protected field: Field;\n    protected face: Face;\n    protected props: any;\n    protected rules: Rule[];\n\n    protected element: HTMLElement;\n    @observable protected isOK?: boolean;\n    @observable protected error: string;\n    @observable protected value: any;\n\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView);\n        this.field = field;\n        this.face = face;\n        this.init();\n        this.setProps();\n    }\n    protected ref(element: HTMLElement) {\n        this.element = element;\n    }\n    protected init() {\n        this.rules = [];\n        let r = this.field.rules;\n        if (r !== undefined) {\n            if (Array.isArray(r) === true) this.rules.push(...(r as Rule[]));\n            else this.rules.push(r as Rule);\n        }\n    };\n    protected setProps():any {\n        return this.props = {\n            ref: this.ref.bind(this),\n            name: this.field.name,\n        }\n    };\n    @computed get hasError():boolean {return this.error !== undefined;}\n    @computed get filled():boolean {\n        let ret = this.value !== undefined && this.value !== this.field.defaultValue;\n        return ret;\n    }\n    clearValue() { this.value = undefined; }\n    clear() { this.clearErrors(); this.clearValue(); }\n    clearErrors() { this.isOK = undefined; this.error = undefined; }\n    readValues(values:any):any {\n        values[this.field.name] = this.value;\n    }\n    setError(fieldName:string, error:string) {}\n    setInitValues(values: any) {}\n    protected getValueFromElement():any {return this.value;}\n    protected validate() {\n        try {\n            let v = this.getValueFromElement();\n            if (this.rules.length > 0) {\n                let isOk:boolean;\n                for (let rule of this.rules) {\n                    console.log('validate: %s', v);\n                    let err = rule(v);\n                    console.log('validate: %s err: %s', v, err);\n                    if (err === true) {\n                        this.error = undefined;\n                        isOk = true;\n                    }\n                    else if (err !== undefined) {\n                        //console.log('field %s onBlur v=%s rule=%s err=%s', \n                        //    this.field.name, JSON.stringify(v), rule, err);\n                        this.error = err;\n                        this.isOK = false;\n                        return;\n                    }\n                }\n                this.isOK = isOk;\n            }\n            this.value = v;\n        }\n        catch (e) {\n            this.error = e.message;\n        }\n    }\n    render():JSX.Element {\n        let n;\n        if (this.face !== undefined) {\n            let {notes} = this.face;\n            if (notes !== undefined) n = <small className=\"text-muted\">{notes}</small>;\n        }\n        return <div className=\"col-sm-10\">\n            {this.renderControl()}\n            {n}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {ControlBase} from './control';\n\nexport class ButtonsControl extends ControlBase {\n    constructor(props) {\n        super(props);\n        this.otherClick = this.otherClick.bind(this);\n    }\n    private otherClick() {\n        let onOther = this.formView.props.onOther;\n        if (onOther === undefined) return;\n        let values = this.formView.readValues();\n        onOther(values);\n    }\n    renderControl():JSX.Element {\n        console.log('buttons.renderControl');\n        let nothing = this.formView.nothing;\n        let hasError = this.formView.hasError;\n        let props = this.formView.props;\n        console.log('buttons.renderControl nothing:%s hasError:%s', nothing, hasError);\n        let {submitButton, otherButton, onOther} = props;\n        let btnOther;\n        if (otherButton !== undefined) {\n            btnOther = <button className=\"btn btn-outline-info ml-auto\" onClick={this.otherClick}>\n                {otherButton}\n            </button>\n        }\n        return <div className=\"d-flex justify-content-start\">\n            <button\n                className=\"btn btn-primary\"\n                type=\"submit\" \n                disabled={nothing || hasError}>\n                {submitButton || '提交'}\n            </button>\n            {btnOther}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable, computed} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, Placeholder} from '../face';\nimport {Control} from './control';\n\nconst TxtRequired = '必须填入要求内容';\n\nexport abstract class CharsControl extends Control {\n    protected init() {\n        super.init();\n        if (this.field.required === true) {\n            this.rules.push((v) => {\n                if (v===null || v===undefined || (v as string).trim().length === 0) return TxtRequired;\n                return true;\n            });\n        }\n    }\n\n    protected element: HTMLInputElement;\n    protected getValueFromElement():any {return this.parseValue(this.element.value)}\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onBlur: this.onBlur.bind(this),\n            onFocus: this.onFocus.bind(this),\n            onChange: this.onChange.bind(this),\n        });\n        let face = this.face as Placeholder;\n        if (face !== undefined) {\n            _.assign(this.props, {\n                placeholder: face.placeholder,\n            });\n        }\n        return this.props;\n    };\n    protected parseValue(value?:string):any {return value;}\n    private onBlur() {\n        //console.log('field %s onBlure', this.field.name);\n        this.validate();\n    }\n    private onChange() {\n        console.log('onChange');\n        this.validate();\n    }\n    private onFocus() {\n        this.clearErrors();\n        //this.error = undefined;\n        //this.formView.clearErrors();\n    }\n    protected className() {\n        return classNames({\n            \"form-control\": true,\n            \"has-success\": this.isOK === true,\n            \"is-invalid\": this.error !== undefined,\n            \"is-valid\": this.error === undefined && this.isOK === true,\n        });\n    }\n    protected renderInput():JSX.Element {\n        return <input className={this.className()} {...this.props} />;\n    }\n    protected ref(element: HTMLInputElement) {\n        super.ref(element);\n        if (element) {\n            element.value = this.value === undefined? '':this.value;\n        }\n    }\n    protected renderError():JSX.Element {\n        //if (this.field.name === 'name') console.log('charsControl renderControl');\n        if (this.error === undefined) return null;\n        return <div className=\"invalid-feedback\">{this.error}</div>\n    }\n    clearValue() { super.clearValue(); this.element.value = ''; }\n    setError(fieldName:string, error:string) {\n        if (this.field.name === fieldName) this.error = error;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) return;\n        //this.element.value = v;\n        this.value = v;\n    }\n    renderControl():JSX.Element {\n        return <React.Fragment>\n            {this.renderInput()}\n            {this.renderError()}\n        </React.Fragment>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\n\nexport class StringControl extends CharsControl {\n    protected field: StringField;\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'text',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        return value;\n    }\n}\n\nexport class PasswordControl extends StringControl {\n    protected setProps() {\n        let p = super.setProps();\n        _.assign(p, {\n            type: 'password',\n            maxLength: this.field.maxLength,\n        });\n        return p;\n    };\n}","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {IntField, DecField, NumberField} from '../field';\nimport {CharsControl} from './charsControl';\n\nconst ErrInvalidNumber = '无效的数字';\nconst ErrMin = '最小值为';\nconst ErrMax = '最大值为';\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport class NumberControl extends CharsControl {\n    protected field: IntField | DecField | NumberField;\n    protected value: number;\n    protected extraChars: number[];\n    \n    protected init() {\n        super.init();\n        this.extraChars = [];\n        let {min, max} = this.field;\n        if (min !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n            if (min < 0) this.extraChars.push(KeyCode_Neg);\n        }\n        else {\n            this.extraChars.push(KeyCode_Neg);\n        }\n\n        if (max !== undefined) {\n            this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'number': this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected parseValue(value?:string):any {\n        if (value === undefined) return undefined;\n        if (value.trim().length === 0) return undefined;\n        let n = Number.parseFloat(value);\n        if (isNaN(n)) throw new Error(ErrInvalidNumber);\n        return n;\n    }\n\n    protected setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            type: 'number',\n            step: (this.field as DecField).step,\n            onKeyPress: this.onKeyPress.bind(this),\n        });\n    }\n\n    onKeyPress(event:KeyboardEvent) {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || ch >= 48 && ch <= 57) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.element.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.element.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.element.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.element.value = v;\n    }\n}\n","import * as React from 'react';\nimport {Control, ControlBase} from './control';\nimport {FormView} from '../formView';\n\nexport class UnknownControl extends Control {\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n            don't know how to create control<br/>\n            field: {JSON.stringify(this.field)} must be object <br/>\n            face: {JSON.stringify(this.face)} must be object <br/>\n            </div>\n        </div>;\n    }\n}\n\nexport class EmptyControl extends ControlBase {\n    private element:JSX.Element;\n    constructor(formView:FormView, element:JSX.Element) {\n        super(formView);\n        this.element = element;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-plaintext\">\n            {this.element}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, IdPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickIdControl extends Control {\n    protected face: IdPickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    onPicked = (value: any) => {\n        this.value = value.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private controlContent():string|JSX.Element {\n        let {itemFromId, fromPicked, initCaption} = this.face;\n        if (this.value === undefined) {\n            return initCaption || '请选择Id';\n        }\n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        if (itemFromId !== undefined) {\n            if (fromPicked !== undefined) {\n                let item = itemFromId(this.value);\n                if (item) {\n                    let ret = fromPicked(item);\n                    if (ret !== undefined) return ret.caption;\n                }\n            }\n        }\n        return String(this.value);\n    }\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer\"\n                onClick={this.onClick}>\n                {this.controlContent()}\n            </div>;\n        }\n        return <div className=\"form-control-static \">\n            <input.component id={this.value} \n                ui={tuid}\n                //input={input}\n                //entitiesUI={this.formView.props.context} \n                //params={this.formView.readValues()}\n                //onPicked={this.onPicked}\n                />\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, TuidPickFace} from '../face';\nimport {Control} from './control';\n\nexport class PickTuidControl extends Control {\n    protected face: TuidPickFace;\n    // protected value: number;\n    @observable private caption: string|JSX.Element;\n    constructor(formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.onIdChanged = this.onIdChanged.bind(this);\n        //this.onClick = this.onClick.bind(this);\n    }\n    /*\n    private async onClick() {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        if (fromPicked === undefined) {\n            this.value = item.id;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }*/\n    onIdChanged(id: any) {\n        this.value = id.id;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    private buildContent():JSX.Element {\n        //let {tuid, input} = this.face;\n        return <this.face.input.component \n            {...this.face}\n            id={this.value}\n            //ui={this.face.ui}\n            //input={input}\n            //entitiesUI={this.formView.props.context} \n            onFormValues={()=>this.formView.readValues()}\n            onIdChanged={this.onIdChanged} />;\n    }\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static \">\n            {this.buildContent()}\n        </div>;\n    }\n}\n/*\n<button className=\"form-control btn btn-outline-info\"\ntype=\"button\"\nstyle={{textAlign:'left', paddingLeft:'0.75rem'}}\nonClick={this.onClick}>\n{this.buildContent()}\n</button>\n*/","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, PickFace} from '../face';\nimport {Control} from './control';\nimport { observer } from 'mobx-react';\n\nexport class PickControl extends Control {\n    protected face: PickFace;\n    @observable private caption: string|JSX.Element;\n\n    private onClick = async () => {\n        let {pick, fromPicked} = this.face;\n        let item = await pick(this.face, this.formView.props, this.formView.readValues());\n        if (item === undefined) {\n            this.value = undefined;\n            return;\n        }\n        let {id, caption} = fromPicked(item);\n        this.value = id;\n        this.caption = caption;\n    }\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        this.value = v;\n    }\n    /*\n    private controlContent():string|JSX.Element {\n        let {content: Content} = this.face;\n        if (this.value === undefined) {\n            return '请选择';\n        }\n        \n        if (this.caption !== undefined) {\n            return this.caption;\n        }\n        return <Content id={this.value} />;\n    }*/\n    /*\n    private buildContent():string|JSX.Element {\n        let {tuid, input} = this.face;\n        if (input === undefined) {\n            //return <div>no input on idpick</div>;\n            return <div onClick={this.onClick}>{this.controlContent()}</div>;\n        }\n        return <input.component id={this.value} \n            tuid={tuid}\n            input={input}\n            entitiesUI={this.formView.props.context} \n            params={this.formView.readValues()}\n            onPicked={this.onPicked} />;\n    }*/\n    renderControl():JSX.Element {\n        return <this.view />;\n        /*\n        let {content:Content} = this.face;\n        //if (this.value === undefined) {\n            //return <div>no input on idpick</div>;\n        //}\n        //return <div className=\"form-control-static \">\n        //    <Content />\n        //</div>;\n        */\n    }\n\n    private view = observer(() => {\n        let content;\n        let {content: Content} = this.face;\n        if (this.value === undefined || this.value === null) {\n            content = '请选择';\n        }\n        /*\n        else if (this.caption !== undefined) {\n            content = this.caption;\n        }*/\n        else {\n            content = <Content id={this.value} />;\n        } \n        return <div\n            className=\"form-control-plaintext px-2 border text-primary rounded cursor-pointer bg-light\"\n            onClick={this.onClick}>\n            {content}\n        </div>\n    });\n}\n","export * from './control';\nexport * from './buttonsControl';\nexport * from './stringControl';\nexport * from './numberControl';\n\nimport {Field} from '../field';\nimport {Face} from '../face';\nimport {Control, ControlBase} from './control';\nimport {ButtonsControl} from './buttonsControl';\nimport {CheckControl} from './checkControl';\nimport {RadioControl} from './radioControl';\nimport {TextAreaControl} from './textAreaControl';\nimport {SelectControl} from './selectControl';\nimport {UnknownControl, EmptyControl} from './unknownControl';\nimport {StringControl, PasswordControl} from './stringControl';\nimport {NumberControl} from './numberControl';\n\nimport {FormView, FormRow, GroupRow, FieldRow, LabelFormRow} from '../formView';\nimport { PickIdControl } from './pickIdControl';\nimport { PickTuidControl } from './pickTuidControl';\nimport { PickControl } from './pickControl';\n\nexport type CreateControl = (form:FormView, row: FormRow) => ControlBase\n\nexport const createControl:CreateControl = (form:FormView, row: LabelFormRow):ControlBase => {\n    let label = row.label;\n    if ((<GroupRow>row).group !== undefined)\n        return createGroupControl(form, label, row as GroupRow);\n    if ((<FieldRow>row).field !== undefined)\n        return createFieldControl(form, label, row as FieldRow);\n    return new EmptyControl(form, row.help);\n}\n\nconst controls:{[type:string]: new (formView:FormView, field:Field, face:Face) => Control} = {\n    \"string\": StringControl,\n    \"password\": PasswordControl,\n    \"number\": NumberControl,\n    \"checkbox\": CheckControl,\n    \"radiobox\": RadioControl,\n    \"select\": SelectControl,\n    \"pick-id\": PickIdControl,\n    \"pick-tuid\": PickTuidControl,\n    \"textarea\": TextAreaControl,\n    \"pick\": PickControl,\n};\nconst defaultFaces:{[type:string]: Face} = {\n    \"string\": {type:'string'},\n    \"number\": {type:'number'},\n    \"int\": {type:'number'},\n    \"dec\": {type:'number'},\n    \"bool\": {type:'checkbox'},\n}\nfunction createFieldControl(form:FormView, label:string, fieldRow: FieldRow):Control {\n    let {field, face} = fieldRow;\n    switch (typeof field) {\n        case 'string':\n            field = {\n                name: (field as any) as string,\n                type: 'string',\n            }\n            break;\n        case 'object':\n            break;\n        default:\n            return new UnknownControl(form, field, face);\n    }\n    let fieldType = field.type || 'string';\n    if (face === undefined) {\n        face = defaultFaces[fieldType];\n        if (face === undefined) return new UnknownControl(form, field, face);\n    }\n    else if (face.type === undefined) {\n        let f = defaultFaces[fieldType];\n        face.type = f===undefined? 'string' : f.type;\n    }\n    let control = controls[face.type || fieldType] || UnknownControl;\n    return new control(form, field, face);\n}\n\nfunction createGroupControl(form:FormView, label:string, groupRow: GroupRow):Control {\n    return new UnknownControl(form, groupRow as any, undefined);\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field, BoolField} from '../field';\nimport {Face, CheckBoxFace} from '../face';\nimport {Control} from './control';\n\nexport class CheckControl extends Control {    \n    protected element: HTMLInputElement;\n    protected field: BoolField;\n    protected face: CheckBoxFace;\n    private trueValue: any;\n    private falseValue: any;\n\n    protected init() {\n        super.init();\n        let {trueValue, falseValue} = this.field;\n        if (trueValue === undefined) this.trueValue = 1;\n        if (falseValue === undefined) this.falseValue = 0;\n    }\n\n    setProps() {\n        super.setProps();\n        _.assign(this.props, {\n            onChange: this.onChange.bind(this),\n        });\n    }\n\n    clearValue() {\n        this.element.checked = this.field.defaultValue === this.trueValue;\n        this.value = this.getValueFromElement();\n    }\n\n    setInitValues(values: any) {\n        let v = values[this.field.name];\n        if (v === undefined) {\n            v = this.field.defaultValue;\n        }\n        if (v !== undefined) {\n            //this.element.checked = v === this.trueValue;\n            //this.value = this.getValueFromElement();\n        }\n    }\n\n    protected getValueFromElement():any { return this.element.checked? this.trueValue:this.falseValue; }\n\n    private onChange() {\n        this.value = this.getValueFromElement();\n    }\n\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <label className=\"form-control\">\n                <label className=\"custom-control custom-checkbox mb-0\">\n                    <input type='checkbox'\n                        name={this.field.name}\n                        ref={this.props.ref}\n                        onChange={this.props.onChange}\n                        className=\"custom-control-input\" />\n                    <span className=\"custom-control-indicator\" />\n                    <span className=\"custom-control-description\">{this.face.label}</span>\n                </label>\n            </label>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, RadioFace} from '../face';\nimport {Control} from './control';\n\nexport class RadioControl extends Control {\n    protected face: RadioFace;\n    renderControl():JSX.Element {\n        return <div className=\"form-control-static\">\n            <div className=\"form-control\">\n            {\n                this.face.list.map((item, index) => {\n                    let t, v;\n                    if (typeof item !== 'object') t = v = item;\n                    else {\n                        t = item.text;\n                        v = item.value;\n                    }\n                    return <label key={index} className=\"custom-control custom-radio w-25\">\n                        <input type='radio'\n                            name={this.field.name} \n                            className=\"custom-control-input\" />\n                        <span className=\"custom-control-indicator\"></span>\n                        <span className=\"custom-control-description\">{t}</span>\n                    </label>;\n                })\n            }\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport {FormView} from '../formView';\nimport {Field} from '../field';\nimport {Face, SelectFace} from '../face';\nimport {Control} from './control';\n\nexport class SelectControl extends Control {\n    constructor (formView:FormView, field:Field, face:Face) {\n        super(formView, field, face);\n        this.ref = this.ref.bind(this);\n    }\n    protected face: SelectFace;\n    protected element: HTMLSelectElement;\n    protected getValueFromElement():any {\n        let {selectedIndex, selectedOptions} = this.element;\n        let v:any = selectedOptions[0].value;\n        switch (this.field.type) {\n            case 'number': v = Number(v); break;\n            case 'date': v = new Date(v); break;\n            case 'bool': \n                if (typeof v === 'string') {\n                    v = ((v as string).toLowerCase() === 'true');\n                }\n                break;\n        }\n        return v;\n    }\n    renderControl():JSX.Element {\n        let {list} = this.face;\n        let def = this.face.default;\n        let options: any[] = [];\n        if (def === undefined)\n            options.push(<option key={-1} value={undefined}>请选择</option>);\n        options.push(...list.map((item, index) => {\n            let t, v;\n            if (typeof item !== 'object') t = v = item;\n            else {\n                t = item.text;\n                v = item.value;\n            }\n            return <option key={index} value={v}>{t}</option>;\n        }));\n        return <div className=\"form-control-static\">\n            <select name={this.field.name} className=\"form-control\" ref={this.ref}>\n                {options}\n            </select>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {CharsControl} from './charsControl';\nimport {StringField} from '../field';\nimport {TextAreaFace} from '../face';\n\nexport class TextAreaControl extends CharsControl {\n    protected field: StringField;\n    protected face: TextAreaFace;\n    private el: HTMLTextAreaElement;\n    protected setProps() {\n        let p = super.setProps();\n        let {maxLength} = this.field;\n        let {rows} = this.face;\n        _.assign(p, {\n            maxLength: maxLength,\n            rows: rows,\n        });\n        return p;\n    };\n    protected renderInput():JSX.Element {\n        return <textarea ref={t=>{this.el = t;if (t!==undefined) t.value=''}} className={this.className()} {...this.props} />;\n    }\n}\n","import { Entities, Field, ArrFields, FieldMap } from './entities';\nimport { TuidMain, Tuid } from './tuid';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    protected entities: Entities;\n    protected schema: any;\n    private jName: string;\n    sys?: boolean;\n    readonly name: string;\n    readonly typeId: number;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        this.entities = entities;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    protected get tvApi() {return this.entities.uqApi;}\n    getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = await this.entities.uqApi.schema(this.name);\n        this.setSchema(schema);\n        this.buildFieldsTuid();\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        if (this.schema !== undefined) return;\n        this.schema = schema;\n        let {name} = schema;\n        if (name !== this.name) this.jName = name;\n        this.buildFieldsTuid();\n    }\n\n    public buildFieldsTuid() {\n        let {fields, arrs, returns} = this.schema;\n        this.entities.buildFieldTuid(this.fields = fields);\n        this.entities.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.entities.buildArrFieldsTuid(this.returns = returns, fields);\n        //this.newMain = this.buildCreater(fields);\n        //this.newArr = this.buildArrCreater(arrs);\n        //this.newRet = this.buildArrCreater(returns);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromField(field:Field):Tuid {\n        let {_tuid, tuid} = field;\n        if (tuid === undefined) return;\n        if (_tuid !== undefined) return _tuid;\n        return field._tuid = this.entities.getTuid(tuid, undefined);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.entities;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid, undefined);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    protected buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields;\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name} = field;\n            let d = params[name];\n            let val:any;\n            switch (typeof d) {\n                default: val = d; break;\n                case 'object':\n                    let tuid = field._tuid;\n                    if (tuid === undefined) val = d.id;\n                    else val = tuid.getIdFromObj(d);\n                    break;\n            }\n            result[name] = val;\n        }\n    }\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n\n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (typeof d) {\n            default: return d;\n            case 'object':\n                let tuid = field._tuid;\n                if (tuid === undefined) return d && d.id;\n                return tuid.getIdFromObj(d);\n            case 'string':\n                let len = d.length;\n                let r = '', p = 0;\n                for (let i=0;i<len;i++) {\n                    let c = d.charCodeAt(i);\n                    switch(c) {\n                        case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                        case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                    }\n                }\n                return r + d.substring(p);\n            case 'undefined': return '';\n        }\n    }\n\n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n\n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n\n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    unpackReturns(data:string):any {\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) {\n                    p = data.indexOf('\\n', c);\n                    if (p >= 0) ++p;\n                    else p = len;\n                    break;\n                }\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                ++p;\n                ++i;\n                break;\n            }\n        }\n        return p;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'date':\n            case 'time':\n                let date = new Date(Number(v));\n                return date;\n            case 'id':\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'dec': return Number(v);\n            case 'bigint':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                _tuid.useId(id, true);\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport _ from 'lodash';\nimport { Entity } from './entity';\nimport { Entities, Field, ArrFields } from './entities';\nimport { isNumber } from 'util';\nimport { CUq, CTuidMain, CTuidEdit, CTuidInfo, CTuidSelect } from '../controllers';\n\nexport class BoxId {\n    id: number;\n    obj?: any;\n    content: (templet?:(values?:any, x?:any)=>JSX.Element, x?:any)=>JSX.Element;\n    valueFromFieldName: (fieldName:string)=>BoxId|any;\n    _$com?: any;\n    _$tuid?: Tuid;\n    getObj: ()=>any;\n}\n\nconst maxCacheSize = 1000;\nexport abstract class Tuid extends Entity {\n    private BoxId: ()=>void;\n    get typeName(): string { return 'tuid';}\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private waitingIds: number[] = [];          // 等待loading的\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n    idName: string;\n    owner: TuidMain;                    // 用这个值来区分是不是TuidArr\n    unique: string[];\n    schemaFrom: {owner:string; uq:string};\n\n    constructor(entities:Entities, name:string, typeId:number) {\n        super(entities, name, typeId);\n        this.buildIdBoxer();\n    }\n\n    abstract get Main():Tuid;\n\n    private buildIdBoxer() {\n        this.BoxId = function():void {};\n        let prototype = this.BoxId.prototype;\n        Object.defineProperty(prototype, '_$tuid', {\n            value: this.from(),\n            writable: false,\n            enumerable: false,\n        });\n        Object.defineProperty(prototype, 'obj', {\n            enumerable: false,\n            get: function() {\n                if (this.id === undefined || this.id<=0) return undefined;\n                return this._$tuid.valueFromId(this.id);\n            }\n        });\n        prototype.valueFromFieldName = function(fieldName:string):BoxId|any {\n            let t:Tuid = this._$tuid;\n            return t.valueFromFieldName(fieldName, this.obj);\n        };\n        prototype.getObj = function():any {\n            if (this._$tuid !== undefined) {\n                return this._$tuid.getCacheValue(this.id);\n            }\n        };\n        prototype.toJSON = function() {return this.id};\n    }\n    boxId(id:number):BoxId {\n        if (typeof id === 'object') return id as any;\n        this.useId(id);\n        let ret:BoxId = new this.BoxId();\n        ret.id = id;\n        return ret;\n    }\n    getTuidContent() {\n        return this.entities.cUq.getTuidContent(this);\n    }\n    getIdFromObj(item:any):number {\n        return item[this.idName];\n    }\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id, unique} = schema;\n        this.idName = id;\n        this.unique = unique;\n        this.schemaFrom = this.schema.from;\n    }\n    public buildFieldsTuid() {\n        super.buildFieldsTuid();\n        let {mainFields} = this.schema;\n        if (mainFields !== undefined) {\n            for (let mf of mainFields) {\n                let f = this.fields.find(v => v.name === mf.name);\n                if (f === undefined) continue;\n                mf._tuid = f._tuid;\n            }\n        }\n    }\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        let tId = typeof id;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getCacheValue(_id);\n    }\n    getCacheValue(id:number) {\n        let v = this.cache.get(id);\n        if (this.owner !== undefined && typeof v === 'object') {\n            v.$owner = this.owner.boxId(v.owner); // this.owner.valueFromId(v.owner);\n        }\n        return v;\n    }\n    valueFromFieldName(fieldName:string, obj:any):BoxId|any {\n        if (obj === undefined) return;\n        if (this.fields === undefined) return;\n        let f = this.fields.find(v => v.name === fieldName);\n        if (f === undefined) return;\n        let v = obj[fieldName];\n        let {_tuid} = f;\n        if (_tuid === undefined) return v;\n        return _tuid.valueFromId(v);\n    }\n    resetCache(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.useId(id);\n    }\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;        \n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.entities.cacheTuids(defer===true?70:20);\n        //let idVal = this.createID(id);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n    async proxied(name:string, id:number):Promise<any> {\n        let proxyTuid = this.entities.getTuid(name, undefined);\n        proxyTuid.useId(id);\n        let proxied = await this.tvApi.proxied(this.name, name, id);\n        this.cacheValue(proxied);\n        return proxied;\n    }\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        //let cacheVal = this.createID(id, val);\n        this.cache.set(id, val);\n        // 下面的代码应该是cache proxy id, 需要的时候再写吧\n        /*\n        let {tuids, fields} = this.schema;\n        if (tuids !== undefined && fields !== undefined) {\n            for (let f of fields) {\n                let {name, tuid} = f;\n                if (tuid === undefined) continue;\n                let t = this.entities.tuid(tuid);\n                if (t === undefined) continue;\n                t.useId(val[name]);\n            }\n        }*/\n        return true;\n    }\n    protected afterCacheId(tuidValue:any) {\n        if (this.fields === undefined) return;\n        for (let f of this.fields) {\n            let {_tuid} = f;\n            if (_tuid === undefined) continue;\n            _tuid.useId(tuidValue[f.name]);\n        }\n    }\n    from(): TuidMain {return;}\n    private unpackTuidIds(values:any[]|string):any[] {\n        if (this.schemaFrom === undefined) {\n            let {mainFields} = this.schema;\n            if (mainFields === undefined) return values as any[];\n            let ret:any[] = []\n            let len = (values as string).length;\n            let p = 0;\n            while (p<len) {\n                let ch = (values as string).charCodeAt(p);\n                if (ch === 10) {\n                    ++p;\n                    break;\n                }\n                let row = {};\n                p = this.unpackRow(row, mainFields, values as string, p);\n                ret.push(row);\n            }\n            return ret;\n        }\n        else {\n            let tuidMain = this.from();\n            let ret = tuidMain.unpackTuidIds(values);\n            return ret;\n        }\n    }\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let name:string, arr:string;\n        if (this.owner === undefined) {\n            name = this.name;\n        }\n        else {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        let api = this.getApiFrom();\n        let tuids = await api.tuidIds(name, arr, this.waitingIds);\n        tuids = this.unpackTuidIds(tuids);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n            this.afterCacheId(tuidValue);\n        }\n        await this.cacheDivIds();\n    }\n    protected async cacheDivIds():Promise<void> {\n    }\n    async load(id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = this.getApiFrom();\n        let values = await api.tuidGet(this.name, id);\n        if (values === undefined) return;\n        values._$tuid = this;\n        this.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n    protected getDiv(divName:string):TuidDiv {return;}\n    private cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.getDiv(name);\n                for (let row of arrValues) {\n                    row._$tuid = tuidDiv;\n                    row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n    private cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n    async save(id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        let ret = await this.tvApi.tuidSave(this.name, params);\n        /*\n        let {id:retId, inId} = ret;\n        if (retId === undefined) {\n            params.id = id;\n            this.cacheValue(params);\n        }\n        else if (retId > 0) {\n            params.id = retId;\n            this.cacheValue(params);\n        }\n        */\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let {fields} = this.schema;\n        let name:string, arr:string;\n        if (this.owner !== undefined) {\n            name = this.owner.name;\n            arr = this.name;\n        }\n        else {\n            name = this.name;\n            arr = undefined;\n        }\n        let api = this.getApiFrom();\n        let ret = await api.tuidSearch(name, arr, owner, key, pageStart, pageSize);\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n            if (this.owner !== undefined) row.$owner = this.owner.boxId(row.owner);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        let api = this.getApiFrom();\n        return await api.tuidArrGet(this.name, arr, owner, id);\n    }\n    /*\n    async loadArrAll(owner:number):Promise<any[]> {\n        return this.all = await this.tvApi.tuidGetAll(this.name);\n    }*/\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        let params = _.clone(props);\n        params[\"$id\"] = id;\n        return await this.tvApi.tuidArrSave(this.name, arr, owner, params);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        return await this.tvApi.tuidArrPos(this.name, arr, owner, id, order);\n    }\n\n    // cache放到Tuid里面之后，这个函数不再需要公开调用了\n    //private async ids(idArr:number[]) {\n    //    return await this.tvApi.tuidIds(this.name, idArr);\n    //}\n    async showInfo(id:number) {\n        await this.entities.cUq.showTuid(this, id);\n    }\n}\n\nexport class TuidMain extends Tuid {\n    get Main() {return this}\n    get uqApi() {return this.entities.uqApi};\n\n    divs: {[name:string]: TuidDiv};\n    //proxies: {[name:string]: TuidMain};\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.entities, name, this.typeId);\n                tuidDiv.owner = this;\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n            }\n        }\n    }\n    protected getDiv(divName:string):TuidDiv {return this.divs[divName];}\n    /* 努力回避async里面的super调用，edge不兼容\n    async cacheIds():Promise<void> {\n        await super.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n    */\n    protected async cacheDivIds():Promise<void> {\n        if (this.divs === undefined) return;\n        for (let i in this.divs) {\n            await this.divs[i].cacheIds();\n        }\n    }\n\n    cUqFrom(): CUq {\n        if (this.schemaFrom === undefined) return this.entities.cUq;\n        let {owner, uq} = this.schemaFrom;\n        let cUq = this.entities.cUq;\n        let cApp = cUq.cApp;\n        if (cApp === undefined) return cUq;\n        let cUqFrm = cApp.getImportUq(owner, uq);\n        if (cUqFrm === undefined) {\n            console.error(`${owner}/${uq} 不存在`);\n            debugger;\n            return cUq;\n        }\n        /*\n        let retErrors = await cUqFrm.loadSchema();\n        if (retErrors !== undefined) {\n            console.error('cUq.loadSchema: ' + retErrors);\n            debugger;\n            return cUq;\n        }*/\n        return cUqFrm;\n    }\n\n    getApiFrom() {\n        let from = this.from();\n        if (from !== undefined) {\n            return from.entities.uqApi;\n        }\n        return this.entities.uqApi;\n    }\n\n    from(): TuidMain {\n        if (this.schemaFrom === undefined) return this;\n        let cUq = this.cUqFrom();\n        return cUq.tuid(this.name);\n    }\n\n    cFrom(): CTuidMain {\n        let cUq = this.cUqFrom();\n        return cUq.cTuidMainFromName(this.name);\n    }\n\n    cEditFrom(): CTuidEdit {\n        let cUq = this.cUqFrom();\n        return cUq.cTuidEditFromName(this.name);\n    }\n\n    cInfoFrom(): CTuidInfo {\n        let cUq = this.cUqFrom();\n        return cUq.cTuidInfoFromName(this.name);\n    }\n\n    cSelectFrom(): CTuidSelect {\n        let cUq = this.cUqFrom();\n        if (cUq === undefined) return;\n        return cUq.cTuidSelectFromName(this.name);\n    }\n    /*\n    protected afterCacheId(tuidValue:any) {\n        super.afterCacheId(tuidValue);\n        if (this.proxies === undefined) return;\n        let {type, $proxy} = tuidValue;\n        let pTuid = this.proxies[type];\n        pTuid.useId($proxy);\n    }*/\n}\n\nexport class TuidDiv extends Tuid {\n    get Main() {return this.owner}\n\n    getApiFrom() {\n        return this.owner.getApiFrom();\n    }\n}\n","import {Entity} from './entity';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        await this.loadSchema();\n        let text = this.pack(data);\n        return await this.tvApi.action(this.name, {data:text});\n    }\n}\n\n","import {observable, IObservableArray} from 'mobx';\nimport {Entity} from './entity';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        await this.loadSchema();\n        let {appId} = this.entities;\n        let text = this.pack(data);\n\n        let ret = await this.tvApi.sheetSave(this.name, {app: appId, discription: discription, data:text});\n        return ret;\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        await this.loadSchema();\n        return await this.tvApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n    }\n    private async unpack(data:any):Promise<any> {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.getSheet(this.name, id);\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return await this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchive(this.name, id)\n        return await this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        await this.loadSchema();\n        let ret = await this.tvApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let ret = await this.tvApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        await this.loadSchema();\n        let ret:StateCount[] = await this.tvApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {observable, IObservableArray} from 'mobx';\nimport {Field, ArrFields} from './entities';\nimport {Entity} from './entity';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        this.returns = returns;\n        this.isPaged = (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw 'call resetPage(size:number, params:any) first';\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n    async query(params:any):Promise<any> {\n        await this.loadSchema();\n        let res = await this.tvApi.query(this.name, this.buildParams(params));\n        let data = await this.unpackReturns(res);\n        return data;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\nimport { Field } from './entities';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.entities.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let schema = actions[i];\n            let {name} = schema;\n            let action = this.entities.newAction(name, undefined);\n            action.setSchema(schema);\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let schema = queries[i];\n            let {name} = schema;\n            let query = this.entities.newQuery(name, undefined);\n            query.setSchema(schema);\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n    }\n\n    async del(param:any) {\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n    }\n\n    async all() {\n        await this.loadSchema();\n        return await this.queries.all.query({});\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n    }\n\n    async query(param:any) {\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import {TuidMain, Tuid} from './tuid';\nimport {Action} from './action';\nimport {Sheet, SheetState, SheetAction} from './sheet';\nimport {Query} from './query';\nimport {Book} from './book';\nimport {History} from './history';\nimport { UqApi } from 'tonva-tools';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { CUq } from '../controllers';\n\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text':\n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    url?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _ownerField: Field;\n    _tuid: Tuid;\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\n\nexport class Entities {\n    private tuids: {[name:string]: TuidMain} = {};\n    private actions: {[name:string]: Action} = {};\n    private sheets: {[name:string]: Sheet} = {};\n    private queries: {[name:string]: Query} = {};\n    private books: {[name:string]: Book} = {};\n    private maps: {[name:string]: Map} = {};\n    private histories: {[name:string]: History} = {};\n    private pendings: {[name:string]: Pending} = {};\n    private cacheTimer: any;\n    cUq: CUq;\n    uqApi: UqApi;\n    appId: number;\n    uqId: number;\n\n    constructor(cUq: CUq, uqApi:UqApi, appId: number) {\n        this.cUq = cUq;\n        this.uqApi = uqApi;\n        this.appId = appId;\n    }\n\n    tuid(name:string):TuidMain {return this.tuids[name.toLowerCase()]}\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: TuidMain[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    async loadAccess() {\n        let accesses = await this.uqApi.loadAccess();\n        if (accesses === undefined) return;\n        this.buildEntities(accesses);\n    }\n\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n\n    private buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        let {access, tuids} = entities;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    getTuid(name:string, div?:string, tuidUrl?:string): Tuid {\n        let tuid = this.tuids[name];\n        if (tuid === undefined) return;\n        if (div === undefined) return tuid;\n        return tuid.divs[div];\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.cacheIds();\n        }\n    }\n\n    private buildTuids(tuids:any) {\n        //let proxyColl = {} as any;\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name, typeId/*, proxies*/} = schema;\n            let tuid = this.newTuid(i, typeId);\n            tuid.sys = true;\n            //tuid.setSchema(schema);\n            //if (proxies !== undefined) proxyColl[i] = proxies;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {name} = schema;\n            let tuid = this.getTuid(i);\n            //tuid.sys = true;\n            tuid.setSchema(schema);\n        }\n        /*\n        for (let i in proxyColl) {\n            let proxies:string[] = proxyColl[i];\n            let tuid = this.tuids[i];\n            tuid.proxies = {};\n            for (let p of proxies) {\n                tuid.proxies[p] = this.tuids[p];\n            }\n        }*/\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.buildFieldsTuid();\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n        /*\n        for (let tuid of this.tuidArr) {\n            tuid.setProxies(this);\n        }*/\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    newTuid(name:string, id:number):TuidMain {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        tuid = this.tuids[name] = new TuidMain(this, name, id);\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            case 'uq': this.uqId = id; break;\n            case 'tuid':\n                let tuid = this.newTuid(name, id);\n                tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n        /*\n        let states = sheet.states;\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    /*\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }*/\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid, arr, url} = f;\n            if (tuid === undefined) continue;\n            f._tuid = this.getTuid(tuid, arr, url);\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    throw `owner field ${owner} is undefined`;\n                }\n            }\n            f._ownerField = ownerField;\n            let {arr, url} = f;\n            f._tuid = this.getTuid(ownerField._tuid.name, arr, url);\n            if (f._tuid === undefined) throw 'owner field ${owner} is not tuid';\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n}\n","export * from './entities';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\n","import * as React from 'react';\nimport {FormView, FormRow, FieldRow, GroupRow, LabelFormRow} from '../formView';\nimport {Control, ControlBase, createControl, CreateControl} from '../control';\n\nexport type CreateRow = (form:FormView, row: FormRow)=>RowContainer;\n\nexport abstract class RowContainer {\n    protected form:FormView;\n    protected row: FormRow;\n    protected control: ControlBase;\n    constructor(form:FormView, row: FormRow) {\n        this.form = form;\n        this.row = row;\n        if ((row as JSX.Element).type === undefined) {\n            let cc:CreateControl = (row as LabelFormRow).createControl;\n            if (cc === undefined) cc = form.createControl;\n            if (cc === undefined) cc = createControl;\n            this.control = cc(form, row);\n        }\n    }\n    abstract render(key:string):JSX.Element;\n    \n    isOk():boolean {\n        if (this.control === undefined) return true;\n        return this.control.isOk();\n    }\n\n    contains(fieldName:string):boolean {\n        let field = (this.row as FieldRow).field;\n        if (field !== undefined) return fieldName === field.name;\n        let group = (this.row as GroupRow).group;\n        if (group !== undefined) return group.find(g => g.field.name === fieldName)!==undefined;\n        return false;\n    }\n    get hasError():boolean {return this.control.hasError;}\n    get filled():boolean {return this.control.filled;}\n    clear() {\n        if (this.control !== undefined) this.control.clear();\n    }\n    clearErrors() {\n        if (this.control !== undefined) this.control.clearErrors();\n    }\n    readValues(values:any):any {\n        if (this.control !== undefined) this.control.readValues(values);\n    }\n    setError(fieldName:string, error:string) {\n        if (this.control !== undefined) this.control.setError(fieldName, error);\n    }\n    setInitValues(values:any) {\n        if (this.control !== undefined) this.control.setInitValues(values);\n    }\n}\n\nclass ElementRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className=\"form-group\">{this.row as JSX.Element}</div>;\n    }\n    get hasError():boolean {return false;}\n    get filled():boolean {return false;}\n}\n\nclass BootStrapRowContainer extends RowContainer {\n    render(key:string):JSX.Element {\n        return <div key={key} className='form-group row'>\n            <label className='col-sm-2 col-form-label'>\n                {(this.row as LabelFormRow).label}\n            </label>\n            {this.control.render()}\n        </div>;\n\n        //has-success is-valid\n    }\n}\n\nexport function bootstrapCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new BootStrapRowContainer(form, row);\n}\n\nexport function elementCreateRow(form:FormView, row: FormRow):RowContainer {\n    return new ElementRowContainer(form, row);\n}\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {nav, mobileHeaderStyle} from './nav';\n\nexport interface TitleBarProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>Promise<void>);\n}\nexport interface TitleBarState {\n    hasBack: boolean;\n}\nexport class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n    constructor(props: TitleBarProps) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.showLogout(this.logout);\n        /*\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout()}>退出</button>\n                </div>\n            </div>\n        </Page>);\n        */\n    }\n    private logout = async () => {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            await logout(); \n        }\n        await nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || self != top;\n        let {right, center, logout} = this.props;\n        let back, pop, debugLogout;\n        if (logout !== undefined && self === top) {\n            if (typeof logout === 'boolean' && logout === true\n                || typeof logout === 'function')\n            {\n                let {user} = nav;\n                if (user !== undefined) {\n                    let {nick, name} = user;\n                    debugLogout = <div className=\"d-flex align-items-center\">\n                        <small className=\"text-light\">{nick || name}</small>\n                        <a className=\"dropdown-toggle btn btn-secondary btn-sm ml-2\"\n                            role=\"button\"\n                            onClick={this.logoutClick}>\n                            <i className=\"fa fa-sign-out\" />\n                        </a>\n                    </div>;\n                }\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-arrow-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (self != top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView;\n        if (right || debugLogout) rightView = <aside>{right} {debugLogout}</aside>;\n        return (\n        <header style={mobileHeaderStyle}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>\n        );\n    }\n}\n","import React from 'react';\nimport { jsonStringify } from '../../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { List, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { TuidMain, Query, Entity } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {name, list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { FA, SearchBox, List } from 'tonva-react-form';\nimport { Page, PageItems } from 'tonva-tools';\nimport { Query } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from \"react\";\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Query } from \"../../entities\";\nimport { VQueryMain } from \"./vQueryMain\";\nimport { VQuerySelect } from \"./vQuerySelect\";\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return this.ui && this.ui.main || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId: string;\n    @observable private overSize: boolean = false;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;        \n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        let ret = await this.resUploader.upload();\n        if (ret === null) {\n            this.overSize = true;\n            setTimeout(() => this.overSize = false, 3000);\n            return;\n        }\n        this.resId = ret;\n        this.isChanged = (this.resId != this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        let overSize:any;\n        if (this.overSize === true) {\n            overSize = <div className=\"text-danger\">\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\n            </div>;\n        }\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>\n                    <div>上传图片：</div>\n                    <div className=\"my-3\">\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\n                    </div>\n                    <div>\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\n                    </div>\n                </div>\n                {overSize}\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"w-12c h-12c mr-4\"\n                        style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-100 h-100\" src={this.resId} />\n                    </div>\n                    <div>\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n\n/*\nexport function Loading() {\n    return <div style={{height:'100%'}} className=\"d-flex flex-fill align-items-center justify-content-center\">\n    <div className=\"d-flex align-items-center justify-content-center slide text-info\" style={{width:'5em', height:'2em'}}>\n        加载中...\n    </div>\n    </div>\n}\n*/\n\n\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    className?: string;\n    multiple?: boolean;\n    maxSize?: number;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let {maxSize} = this.props;\n        if (maxSize === undefined || maxSize <= 0) \n            maxSize = 100000000000;\n        else\n            maxSize = maxSize * 1024;\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            if (file.size > maxSize) return null;\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { Page, loadAppUqs, nav, appInFrame, Controller, TypeVPage, VPage, resLang, getExHash, isDevelopment, NavSettings, App} from 'tonva-tools';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { CUq, UqUI } from './uq';\nimport { centerApi } from '../centerApi';\n\nexport interface RoleAppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\n    res?: any;\n}\n\nexport interface AppUI extends RoleAppUI, NavSettings {\n    appName: string; // 格式: owner/appName\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\n}\n\nexport class CApp extends Controller {\n    private appOwner:string;\n    private appName:string;\n    private cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    id: number;\n    appUnits:any[];\n\n    constructor(ui:AppUI) {\n        super(resLang(ui && ui.res));\n        nav.setSettings(ui);\n        let tonvaApp = ui.appName;\n        if (tonvaApp === undefined) {\n            throw 'appName like \"owner/app\" must be defined in UI';\n        }\n        let parts = tonvaApp.split('/');\n        if (parts.length !== 2) {\n            throw 'tonvaApp name must be / separated, owner/app';\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n        if (ui.uqs === undefined) ui.uqs = {};\n        this.ui = ui;\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    readonly caption: string; // = 'View Model 版的 Uq App';\n    cUqCollection: {[uq:string]: CUq} = {};\n\n    async startDebug() {\n        let appName = this.appOwner + '/' + this.appName;\n        let cApp = new CApp({appName: appName, uqs:{}} );\n        let keepNavBackButton = true;\n        await cApp.start(keepNavBackButton);    \n    }\n\n    protected async loadUqs(app:App): Promise<string[]> {\n        let retErrors:string[] = [];\n        let unit = appInFrame.unit;\n        //let app = await loadAppUqs(this.appOwner, this.appName);\n        let {id, uqs} = app;\n        this.id = id;\n\n        let promises: PromiseLike<string>[] = [];\n        let promiseChecks: PromiseLike<boolean>[] = [];\n        let roleAppUI = await this.buildRoleAppUI();\n        this.ui = roleAppUI;\n        for (let appUq of uqs) {\n            let {id:uqId, uqOwner, uqName, access} = appUq;\n            let uq = uqOwner + '/' + uqName;\n            let uqUI = roleAppUI && roleAppUI.uqs && roleAppUI.uqs[uq];\n            let cUq = this.newCUq(uq, uqId, access, uqUI || {});\n            this.cUqCollection[uq] = cUq;\n            promises.push(cUq.loadSchema());\n            promiseChecks.push(cUq.entities.uqApi.checkAccess());\n        }\n        let results = await Promise.all(promises);\n        Promise.all(promiseChecks).then((checks) => {\n            for (let c of checks) {\n                if (c === false) {\n                    //debugger;\n                    //nav.start();\n                    //return;\n                }\n            }\n        });\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) return;\n        return retErrors;\n    }\n\n    private async buildRoleAppUI():Promise<AppUI> {\n        if (!this.ui) return undefined;\n        let {hashParam} = nav;\n        if (!hashParam) return this.ui;\n        let {roles} = this.ui;\n        let roleAppUI = roles && roles[hashParam];\n        if (!roleAppUI) return this.ui;\n        let ret:AppUI = {} as any;\n        for (let i in this.ui) {\n            if (i === 'roles') continue;\n            ret[i] = this.ui[i];\n        }\n        if (typeof roleAppUI === 'function') roleAppUI = await roleAppUI();\n        _.merge(ret, roleAppUI);\n        return ret;\n    }\n\n    getImportUq(uqOwner:string, uqName:string):CUq {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\n        //this.newCUq(uq, uqId, undefined, ui || {});\n        /*\n        let retError = await cUq.loadSchema();\n        if (retError !== undefined) {\n            console.error(retError);\n            debugger;\n            return;\n        }\n        */\n        return cUq;\n    }\n\n    protected newCUq(uq:string, uqId:number, access:string, ui:any) {\n        let cUq = new (this.ui.CUq || CUq)(this, uq, this.id, uqId, access, ui);        \n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(uq:string):CUq {\n        return this.cUqCollection[uq];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        try {\n            let app = await loadAppUqs(this.appOwner, this.appName);\n            // if (isDevelopment === true) {\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\n                let {predefinedUnit} = appInFrame;\n                let {id} = app;\n                this.id = id;\n                let {user} = nav;\n                if (user !== undefined && user.id > 0) {\n                    this.appUnits = await centerApi.userAppUnits(this.id);\n                    switch (this.appUnits.length) {\n                        case 0:\n                            this.showUnsupport(predefinedUnit);\n                            return false;\n                        case 1:\n                            let appUnit = this.appUnits[0].id;\n                            if (appUnit === undefined || appUnit < 0 || \n                                predefinedUnit !== undefined && appUnit != predefinedUnit)\n                            {\n                                this.showUnsupport(predefinedUnit);\n                                return false;\n                            }\n                            appInFrame.unit = appUnit;\n                            break;\n                        default:\n                            if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\n                                appInFrame.unit = predefinedUnit;\n                                break;\n                            }\n                            nav.push(<this.selectUnitPage />)\n                            return false;\n                    }\n                }\n            //}\n\n            let retErrors = await this.loadUqs(app);\n            if (retErrors !== undefined) {\n                this.openPage(<Page header=\"ERROR\">\n                    <div className=\"m-3\">\n                        <div>Load Uqs 发生错误：</div>\n                        {retErrors.map((r, i) => <div key={i}>{r}</div>)}\n                    </div>\n                </Page>);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            nav.push(<Page header=\"App start error!\">\n                <pre>\n                    {typeof err === 'string'? err : err.message}\n                </pre>\n            </Page>);\n            return false;\n        }\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport(predefinedUnit: number) {\n        this.clearPrevPages();\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        this.openPage(<Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">登录用户: </div>\n                    <div className=\"col\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">App:</div>\n                    <div className=\"col\">{`${this.appOwner}/${this.appName}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">预设小号:</div>\n                    <div className=\"col\">{predefinedUnit || <small className=\"text-muted\">[无预设小号]</small>}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-2\">\n                        <FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"text-muted\">无法运行可能原因：</div>\n                        <ul className=\"p-0\">\n                            <li>没有小号运行 {this.ui.appName}</li>\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{this.ui.appName}的小号</li>\n                            {\n                                predefinedUnit && \n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {this.ui.appName}</li>\n                            }\n                        </ul>\n                    </div>\n                </div>\n                {\n                    predefinedUnit || \n                    <div className=\"form-group row\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        预设小号定义在 public/unit.json 文件中。\n                        定义了这个文件的程序，只能由url直接启动。\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\n                        如果要删去缓存的预定义Unit，logout然后再login。\n                    </div>\n                </div>\n                }\n            </div>\n        </Page>)\n    }\n\n    private async showMainPage() {\n        // #tv-RwPBwMef-23-sheet-api-108\n        let exHash = getExHash();\n        if (exHash !== undefined) {\n            let parts = exHash.split('-');\n            if (parts.length > 3) {\n                let action = parts[3];\n                // sheet_debug 表示centerUrl是debug方式的\n                if (action === 'sheet' || action === 'sheet_debug') {\n                    let uqId = Number(parts[4]);\n                    let sheetTypeId = Number(parts[5]);\n                    let sheetId = Number(parts[6]);\n                    let cUq = this.getCUqFromId(uqId);\n                    if (cUq === undefined) {\n                        alert('unknown uqId: ' + uqId);\n                        return;\n                    }\n                    this.clearPrevPages();\n                    await cUq.navSheet(sheetTypeId, sheetId);\n                    return;\n                }\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.id === uqId) return cUq;\n        }\n        return;\n    }\n\n    renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    onRowClick = async (item: any) => {\n        appInFrame.unit = item.id; // 25;\n        await this.start();\n    }\n\n    protected selectUnitPage = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nclass VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage() {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n","export * from './rule';\nexport * from './field';\nexport * from './face';\nexport * from './rowContainer';\nexport * from './formView';\nexport * from './TonvaForm';\nexport {ControlBase} from './control';\n","import * as React from 'react';\nimport {FormEvent} from 'react';\nimport {computed} from 'mobx';\nimport {uid} from '../uid';\nimport {Rule} from './rule';\nimport {Field} from './field';\nimport {Face} from './face';\nimport {CreateControl, ButtonsControl} from './control';\nimport {RowContainer, CreateRow, bootstrapCreateRow, elementCreateRow} from './rowContainer';\n\nexport interface FieldView {\n    field: Field;\n    face?: Face;\n}\n\nexport interface LabeledRow {\n    label?: string;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    help?: JSX.Element;\n}\n\nexport interface FieldRow extends LabeledRow, FieldView {\n}\n\nexport interface GroupRow extends LabeledRow {\n    group: FieldView[];\n}\n\nexport type LabelFormRow = FieldRow|GroupRow|LabeledRow;\nexport type FormRow = LabelFormRow|JSX.Element;\n\nexport interface SubmitResult {\n    success: boolean;\n    message?: string\n    result?: any;\n}\n\nexport interface FormProps {\n    formRows: FormRow[];\n    //context?: any;              // form context，比如，可以是EntitiesUI\n    rules?: Rule | Rule[];\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n    otherButton?: string|JSX.Element;\n    onOther?: (values:any) => void;\n    createRow?: CreateRow;\n    createControl?: CreateControl;\n    readOnly?: boolean;\n}\n\nexport class FormView {\n    uid:string;\n    private rows: RowContainer[] = [];\n    private buttonsRow: RowContainer;\n    props: FormProps;\n    createControl?: CreateControl;\n    constructor(props:FormProps) {\n        this.uid = uid();\n        this.props = props;\n        this.buildRows(props);\n        this.createControl = props.createControl;\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    @computed get hasError():boolean {\n        let ret = this.rows.map((v, index) => index + ': ' + v.hasError + '\\n');\n        console.log(ret);\n        return this.rows.some(row => row.hasError);\n    }\n    @computed get nothing():boolean {\n        let ret = this.rows.every(row => !row.filled);\n        return ret;\n    }\n\n    readValues():any {\n        let values = {} as any;\n        for (let row of this.rows) {\n            row.readValues(values);\n        }\n        return values;\n    }\n\n    clear() {\n        for (let row of this.rows) {\n            row.clear();\n        }\n    }\n\n    clearErrors() {\n        for (let row of this.rows) {\n            row.clearErrors();\n        }\n    }\n\n    setError(fieldName:string, error:string) {\n        for (let row of this.rows) {\n            row.setError(fieldName, error);\n        }\n    }\n\n    setInitValues(initValues:any) {\n        if (initValues === undefined) return;\n        for (let row of this.rows) {\n            row.setInitValues(initValues);\n        }\n    }\n\n    private buildRows(props:FormProps) {\n        let {formRows, createRow} = props;\n        if (formRows !== undefined) {\n            for (let row of formRows) {\n                this.rows.push(this.buildRow(row, createRow));\n            }\n            if (this.props.readOnly !== true) {\n                this.buttonsRow = this.buildRow({createControl:this.createButtons.bind(this)}, undefined);\n            }\n        }\n        else {\n            this.rows.push(elementCreateRow(this, <div className=\"text-warning\">TonvaForm need formRows defined</div>));\n        }\n    }\n\n    private buildRow(formRow: FormRow, formRowCreator: CreateRow):RowContainer {\n        let createRow:CreateRow;\n        let type = (formRow as JSX.Element).type;\n        if (type !== undefined) {\n            createRow = elementCreateRow;\n        }\n        else {\n            createRow = (formRow as (FieldRow | GroupRow | LabeledRow)).createRow;\n            if (createRow === undefined) {\n                createRow = formRowCreator;\n                if (createRow === undefined) createRow = bootstrapCreateRow;\n            }\n        }\n        let row = createRow(this, formRow);\n        return row;\n    }\n\n    private createButtons(form:FormView, row: FormRow) {\n        return new ButtonsControl(form);\n    }\n\n    private isOk():boolean {\n        let isOk = true;\n        for (let row of this.rows) {\n            if (!row.isOk()) isOk = false;\n        }\n        return isOk;\n    }\n\n    render():JSX.Element {\n        return <form onSubmit={this.onSubmit}>\n            {this.rows.map((row,index) => row.render(this.uid + index))}\n            {this.buttons()}\n        </form>;\n    }\n\n    buttons():JSX.Element {\n        if (this.buttonsRow === undefined) return;\n        return this.buttonsRow.render(this.uid + this.rows.length);\n    }\n    \n    async onSubmit(event:FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (!this.isOk()) return;\n        let values = this.readValues();\n        await this.props.onSubmit(values);\n    }\n}\n","import React from 'react';\nimport { FA } from \"tonva-react-form\";\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n/*\nexport interface EntityRes {\n    caption: string;\n    icon: JSX.Element;\n}\n*/\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from \"tonva-tools\";\nimport { CUq } from \"./uq\";\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","import {CenterApi as CenterApiBase} from 'tonva-tools';\n\n//\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page } from 'tonva-tools';\nimport { List, Muted, LMR } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from 'tonva-react-form';\nimport { Sheet } from '../../entities';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, user, preState, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VForm, FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { nav, Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport {List, LMR, FA, EasyDate, Muted} from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {id, no, discription, date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, nav } from 'tonva-tools';\nimport { List, Muted, FA, LMR, EasyDate } from 'tonva-react-form';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../entities';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {id, no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {Page} from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nexport interface State {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + ':' + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import { Sheet } from \"../../entities\";\nimport { SheetUI, CSheet } from \"./cSheet\";\nimport { VEntity } from \"../CVEntity\";\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import * as React from 'react';\nimport { Page } from 'tonva-tools';\nimport { FA } from 'tonva-react-form';\nimport { VSheet } from \"./vSheet\";\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        let res = await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import React from 'react';\nimport { nav, Page } from 'tonva-tools';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from \"mobx\";\nimport { TypeVPage, VPage, PageItems, postWsToTop } from 'tonva-tools';\nimport { Sheet, StateCount } from \"../../entities\";\nimport { CEntity, EntityUI, VEntity } from \"../CVEntity\";\nimport { VSheetMain } from \"./vMain\";\nimport { VSheetNew } from \"./vNew\";\nimport { VSheetEdit } from \"./vEdit\";\nimport { VSheetAction } from \"./vSheetAction\";\nimport { VSheetSchema } from \"./vSchema\";\nimport { VArchives } from \"./vArchives\";\nimport { VSheetList } from \"./vList\";\nimport { VArchived } from \"./vArchived\";\nimport { VSheetSaved } from \"./vSaved\";\nimport { VSheetProcessing } from \"./vSheetProcessing\";\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to, push} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport { TuidMain, Book, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Book } from \"../../entities\";\nimport { VBookMain } from \"./vBookMain\";\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from \"react\";\nimport { View } from \"tonva-tools\";\nimport { List, Muted } from \"tonva-react-form\";\nimport { Entity } from \"../../entities\";\nimport { CLink } from \"../link\";\nimport { CUq } from \"./cUq\";\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.entities;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport { UqApi, Controller, UnitxApi, appInFrame, resLang, nav } from 'tonva-tools';\nimport { Entities, TuidMain, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending } from '../../entities';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuid, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { PureJSONContent } from '../form/viewModel';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../CApp';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        this.uq = uq;\n        this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        let token = undefined;\n        let uqOwner:string, uqName:string;\n        let p = uq.split('/');\n        switch (p.length) {\n            case 1:\n                uqOwner = '$$$';\n                uqName = p[0];\n                break;\n            case 2:\n                uqOwner = p[0];\n                uqName = p[1];\n                break;\n            default:\n                console.log('uq must be uqOwner/uqName format');\n                return;\n        }\n\n        let hash = document.location.hash;\n        let baseUrl = hash===undefined || hash===''? \n            'debug/':'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        let uqApi:UqApi;\n        if (uq === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            uqApi = new UnitxApi(appInFrame.unit);\n        }\n        else {\n            uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.entities = new Entities(this, uqApi, appId);\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    uq: string;\n    id: number;\n    res: any;\n    entities:Entities;\n    error: string;\n    private schemaLoaded:boolean = false;\n\n    protected async loadEntites() {\n        await this.entities.loadAccess();\n    }\n\n    async loadSchema():Promise<string> {\n        try {\n            if (this.schemaLoaded === true) return;\n            await this.loadEntites();\n            if (this.id === undefined) this.id = this.entities.uqId;\n            for (let i in this.ui) {\n                let g = this.ui[i];\n                if (g === undefined) continue;\n                let {caption, collection} = g;\n                if (collection === undefined) continue;\n                for (let j in collection) {\n                    if (this.entities[i](j) === undefined) {\n                        console.warn(i + ':' + '\\'' + j + '\\' is not uq entity');\n                    }\n                }\n            }\n            this.schemaLoaded = true;\n            return;\n        }\n        catch(err) {\n            console.error(err);\n            return this.error = err;\n        }\n    }\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.entities.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.entities.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.entities.sheet(entityName);}\n    action(entityName:string) {return this.entities.action(entityName);}\n    query(entityName:string) {return this.entities.query(entityName);}\n    book(entityName:string) {return this.entities.book(entityName);}\n    map(entityName:string) {return this.entities.map(entityName);}\n    history(entityName:string) {return this.entities.history(entityName);}\n    pending(entityName:string) {return this.entities.pending(entityName);}\n    tuid(entityName:string) {return this.entities.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        let tuid = this.entities.tuid(entityName);\n        if (tuid === undefined) return;\n        let {divs} = tuid;\n        if (divs === undefined) return;\n        return divs[divName];\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.entities.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.entities.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.entities.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.entities.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.entities.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.entities.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.entities.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.entities.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.entities.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.entities.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.entities.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.entities.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.entities.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.entities.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.entities.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.entities.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui, res;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            let tUI = this.ui[typeName];\n            if (tUI !== undefined) {\n                ui = tUI[name];\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.entities.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:TuidMain):CTuidMain {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidMain || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:TuidMain):CTuidEdit {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidEdit || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:TuidMain):CTuidList {\n        let {ui, res} = this.getUI<TuidMain, TuidUI>(tuid);\n        return new (ui && ui.CTuidList || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid.owner || tuid);\n        return new (ui && ui.CTuidSelect || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:TuidMain):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new (ui && ui.CTuidInfo || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new (ui && ui.CSheet || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.entities.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new (ui && ui.CAction || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.entities.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuery || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.entities.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new (ui && ui.CQuerySelect || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.entities.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new (ui && ui.CBook || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.entities.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new (ui && ui.CHistory || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.entities.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new (ui && ui.CPending || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.entities.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new (ui && ui.CMap || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.entities.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {owner} = tuid;\n        if (owner === undefined) {\n            let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n            return (ui && ui.content) || PureJSONContent;\n        }\n        else {\n            let {ui} = this.getUI<Tuid, TuidUI>(owner);\n            return (ui && ui.divs && ui.divs[tuid.name].content) || PureJSONContent;\n        }\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner || (tuid as TuidMain));\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { List, LMR, FA } from 'tonva-react-form';\nimport { Page, nav } from 'tonva-tools';\nimport { tv } from '../../tools';\nimport { Map } from '../../entities';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapKey, MapUI } from './cMap';\nimport { PureJSONContent } from '../form/viewModel';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {tuid, box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add:any, remove:any;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right:any;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content:any, border:any, valuesView:any;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = \"border-bottom\";\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)}\n                left={left}\n                right={right}\n            >\n                <div className=\"py-1\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from \"../CVEntity\";\nimport { MapUI, CMap } from \"./cMap\";\nimport { Map } from \"../../entities\";\nimport { Page } from \"tonva-tools\";\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { CEntity, EntityUI } from \"../CVEntity\";\nimport { Map, Tuid, BoxId, Field, TuidMain, fieldDefaultValue } from \"../../entities\";\nimport { VMapMain } from \"./vMain\";\nimport { observable } from \"mobx\";\nimport { PureJSONContent } from '../form/viewModel';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuid = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children, box} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid, _ownerField} = keyField;\n        let cTuidSelect = this.cUq.cTuidSelect(_tuid);\n        let callParam = param;\n        if (_ownerField !== undefined) {\n            callParam = param[_ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {name, type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.Main as TuidMain);\n        let label = cTuidMain.getLable(tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import * as React from 'react';\nimport { VPage, Page } from 'tonva-tools';\nimport { jsonStringify } from '../../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../entities';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Action } from \"../../entities\";\nimport { VActionMain } from \"./vActionMain\";\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","import * as React from 'react';\nimport { TuidMain, Pending, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { Pending } from \"../../entities\";\nimport { VPendingMain } from \"./vPendingMain\";\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","import * as React from 'react';\nimport { TuidMain, History, Entity } from '../../entities';\nimport { Page } from 'tonva-tools';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from \"../CVEntity\";\nimport { History } from \"../../entities\";\nimport { VHistoryMain } from \"./vHistoryMain\";\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n}\n","export const consts = {\n    uqBasedata: \"bruce/scmbasedata\",\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\n}","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import {CenterApi} from '../net';\nimport {User, decodeUserToken} from '../user';\n//import { nav } from '../ui';\n\nexport class UserApi extends CenterApi {\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\n        //(params as any).device = nav.local.device.get();\n        let ret = await this.get('login', params);\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeUserToken(ret);\n            case 'object':\n                let token = ret.token;\n                let user = decodeUserToken(token);\n                let {nick, icon} = ret;\n                if (nick) user.nick = nick;\n                if (icon) user.icon = icon;\n                return user;\n        }\n        // !== undefined) return decodeToken(token);\n    }\n    async register(params: {\n        nick:string, \n        user:string, \n        pwd:string,\n        country:number, \n        mobile:number, \n        email:string,\n        verify:string,\n    }): Promise<any>\n    {\n        return await this.post('register', params);\n    }\n\n    async setVerify(account:string, type:'mobile'|'email') {\n        return await this.post('set-verify', {account:account, type:type});\n    }\n\n    async checkVerify(account:string, verify:string) {\n        return await this.post('check-verify', {account:account, verify:verify});\n    }\n\n    async isExists(account:string) {\n        return await this.get('is-exists', {account:account});\n    }\n\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\n        return await this.post('reset-password', {account:account, password, verify, type});\n    }\n    \n    async userSetProp(prop:string, value:any) {\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\n    }\n}\n\nconst userApi = new UserApi('tv/user/', undefined);\n\nexport default userApi;\n","import * as React from 'react';\nimport _ from 'lodash';\nimport {User} from '../user';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { isDevelopment } from '../net';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp((this as any) as C)).open(param);\n    }\n\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\n        return (new view((this as any) as C)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any):Promise<void>;\n    async start(param?:any):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call(param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param);\n        });\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this as any)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Controller call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if (this.isFirst===true && len>this.firstSize ||\n            this.isFirst===false && len>this.pageSize)\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import {observable, computed} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport {FormView, FormProps} from './formView';\n\nexport function tonvaDebug() {\n    let a = 0;\n}\n\nexport interface TonvaFormProps extends FormProps {\n    className?: string;\n    initValues?: any;\n}\n\n@observer \nexport class TonvaForm extends React.Component<TonvaFormProps, {}> {\n    formView: FormView;\n    constructor(props:TonvaFormProps) {\n        super(props);\n        this.formView = new FormView(this.props);\n    }\n    componentWillMount() {\n        this.formView.setInitValues(this.props.initValues);\n    }\n    debug() {\n        let s = null;\n    }\n    render() {\n        let {className, children, initValues} = this.props;\n        return <div className={className}>\n            {\n                children === undefined? \n                    this.formView.render() : \n                    <form onSubmit={this.formView.onSubmit}>{children}</form>\n            }\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Action {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: Action[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | string;\n}\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        let {date} = this.props;\n        if (!date) return null;\n        let d = (typeof date === 'string')? new Date(Date.parse(date)) : date;\n        let now = new Date();\n        let tick = now.getTime() - d.getTime();\n        let nDate=now.getDate();\n        let _date=d.getDate(), hour=d.getHours(), minute=d.getMinutes(), month=d.getMonth()+1;\n        let hm = hour + ((minute<10?':0':':') + minute);\n        if (tick < -24*3600*1000) return d.getFullYear()+'年'+month+'月'+_date+'日 ' + hm;\n        if (tick < 24*3600*1000) {\n            return _date!==nDate? \n                (tick < 0? '明天 ' : '昨天 ') + hm \n                : hm;\n        }\n        if (tick < 365*24*3600*1000) {\n            return month+'月'+_date+'日 ';\n        }\n        return d.getFullYear()+'年'+month+'月'+_date+'日';\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Image } from 'tonva-tools';\n\nexport interface MediaProps {\n    icon: string;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp:any;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let cn = classNames(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import * as React from 'react';\nimport _ from 'lodash';\nimport className from 'classnames';\nimport {FormProps, FormRow, SubmitResult, FormView, TonvaForm} from '../form';\n\nexport interface Step {\n    formRows: FormRow[];\n    next: undefined | string | ((values:any) => string);    // 返回下一步的step名称或者直接就是名称\n    ex?: any;                                   // 每一步额外的参数\n}\n\nexport interface MultiStepProps {\n    className?: string;\n    header?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    footer?: (step:Step, num:number) => JSX.Element; //name: step name, num: 第几步，1开始\n    steps: {[name:string]: Step};\n    first: string;         // 第一步的名字\n    onSubmit: (values:any) => Promise<SubmitResult|undefined>;\n    submitButton?: string|JSX.Element;\n}\n\nexport interface StepView {\n    stepName: string;\n    step: Step;\n    props: FormProps;\n    //view: JSX.Element;\n}\nexport interface MultiStepState {\n    //num: number;\n    //step: Step;\n    //formView: FormView;\n    topView: StepView;\n    stepViews: StepView[];\n}\n\nexport class MultiStep extends React.Component<MultiStepProps, MultiStepState> {\n    private values: any = {};\n    private stepViews: StepView[] = [];\n    private topView: StepView;\n    constructor(props) {\n        super(props);\n        this.state = {\n            topView: undefined,\n            stepViews: [],\n        }\n        this.onPrev = this.onPrev.bind(this);\n        this.onNext = this.onNext.bind(this);\n    }\n    \n    private setStep(stepName: string) {\n        let step = this.props.steps[stepName];\n        if (step === undefined) return; //throw new Error('Unknown step name: ' + stepName);\n        if (this.topView !== undefined) this.stepViews.push(this.topView);\n        let otherButton, onOther;\n        if (this.stepViews.length > 0) {\n            otherButton = <ButtonConten prefix=\"undo\" text=\"上一步\" />;\n            onOther = this.onPrev;\n        }\n        let {header, footer} = this.props;\n        let btnContent = step.next === undefined?\n            {prefix: 'cloud-upload', text: this.props.submitButton || '提交'} :\n            {suffix: 'arrow-right', text: '下一步'}\n        let formProps = {\n            formRows: step.formRows,\n            submitButton: <ButtonConten {...btnContent} />,\n            onSubmit: this.onNext,\n            otherButton: otherButton,\n            onOther: onOther,\n        };\n        let num = this.stepViews.length + 1;\n        this.topView = {\n            stepName: stepName,\n            step: step,\n            props: formProps,\n        };\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    componentWillMount() {\n        this.setStep(this.props.first);\n    }\n    private onPrev(values:any) {\n        _.assign(this.values, values);\n        this.topView = this.stepViews.pop();\n        this.setState({\n            topView: this.topView,\n            stepViews: this.stepViews\n        });\n    }\n    private onNext(values:any): Promise<SubmitResult|undefined> {\n        _.assign(this.values, values);\n        //let {num, step} = this.state;\n        let {next} = this.topView.step;\n        if (next === undefined) {\n            return this.props.onSubmit(this.values)\n        }\n        let nextStepName:string;\n        if (typeof next === 'string') {\n            nextStepName = next;\n        }\n        else {\n            nextStepName = next(this.values);\n        }\n        this.setStep(nextStepName);\n    }\n    render() {\n        let {className, header, footer} = this.props;\n        let {topView, stepViews} = this.state;\n        let {stepName, step} = topView;\n        let hidden = {visibility: 'hidden'};\n        let num = stepViews.length + 1;\n        return <div className={className}>\n            <div>\n                {header && header(step, num)}\n                <TonvaForm key={stepName} initValues={this.values} {...topView.props} />\n                {footer && footer(step, num)}\n            </div>\n        </div>;\n    }\n}\n\nconst ButtonConten = (props:{prefix?:string, text?:string|JSX.Element, suffix?:string}) => {\n    let {prefix, text, suffix} = props;\n    let pIcon, sIcon;\n    if (prefix !== undefined) pIcon = <i className={className('fa', 'fa-' + prefix)} />;\n    if (suffix !== undefined) sIcon = <i className={className('fa', 'fa-' + suffix)} />;\n    return <React.Fragment>{pIcon} {props.text} {sIcon}</React.Fragment>;\n}\n    \n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as classNames from 'classnames';\nimport '../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from 'tonva-tools';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return; }\n    updateProps(nextProps:any) {}\n    abstract render(item:any, index:number):JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport { uid } from '../uid';\n\nexport class Static extends ListBase {\n    render(item:any, index:number):JSX.Element {\n        let {className, key, render} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, computed, IObservableArray} from 'mobx';\nimport * as classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../uid';\nimport { PageItems } from 'tonva-tools';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    private _items: SelectableItem[];\n    private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private buildItems() {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            return this._items = undefined;\n        }\n        if (items === null) {\n            return this._items = null;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        this._selectedItems = selectedItems;\n        if (selectedItems === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:false, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        if (compare === undefined) {\n            return this._items = itemsArray.map(v => {\n                return {\n                    selected:selectedItems.find(si => si === v) !== undefined, \n                    item:v, \n                    labelId:uid()\n                };\n            });\n        }\n        return this._items = itemsArray.map(v => {\n            return {\n                selected:selectedItems.find(si => compare(v, si)) !== undefined, \n                item:v, \n                labelId:uid()\n            };\n        });\n    }\n    @computed get items() {\n        //if (this._items === undefined) \n        this.buildItems();\n        return this._items;\n    }\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render(item:SelectableItem, index:number):JSX.Element {\n        let {className, key, render, onSelect} = this.list.props.item;\n        let {labelId, selected} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(item.item, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from 'tonva-tools';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport \"../css/va-list.css\";\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string|number;\n    };\n    compare?:(item:any, selectItem)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    constructor(props:ListProps) {\n        super(props);\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        this.listBase.updateProps(nextProps);\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none, item, selectedItems} = this.props;\n        if (before === undefined) before = 'before';\n        if (loading === undefined) loading = 'loading';\n        if (none === undefined) none = 'none';        \n        //this.listBase.selectedItems = selectedItems;\n        let {isPaged, items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport * as className from 'classnames';\nimport {ListView} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"col-sm-12\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className=\"col-sm-2 col-form-label\">\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop as any;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = label===undefined? 'col-sm-12':'col-sm-10';\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n}\n\nexport class PropContainer extends PropRow {\n    render(key:string): JSX.Element {\n        return <div className=\"bg-white\">\n            <label className=\"col-sm-2 col-form-label\">\n                AAABBBCCC\n            </label>\n            <div className=\"col-sm-10\">\n                <div className=\"form-control-plaintext\">\n                    dsfasfa sdf asdf a\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import {ListViewProps} from '../listView';\nimport {PropGridProps} from './PropGrid';\nimport {PropRow, PropBorder, PropGap, PropContainer,\n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: ()=>void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top'|'bottom'|'center'|'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props:any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps:PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps:PropGridProps, props:Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap:boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\nimport {PropContainer, PropBorder, PropGap} from './row';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n/*\n    private propView: PropView;\n    constructor(props:PropGridProps) {\n        super(props);\n    }\n*/\n/*\n    componentWillMount() {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(this.props.values);\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<PropGridProps>, nextContext: any) {\n        this.propView = new PropView(this.props.rows);\n        this.propView.setValues(nextProps.values);\n        this.forceUpdate();\n    }\n*/\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun, isObservable} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context, RowContext } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    onEnter?: InputEnter;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    //private content: any;\n    //private formData: any;\n    private disposer: IReactionDisposer;\n    //@observable \n    readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, formData, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, res,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n\n        //this.formData = formData;\n        this.disposer = autorun(this.watch);\n        this.data = {};\n        // this.initRender();\n    }\n\n    private renderContent():any {\n        this.initData(this.props.formData);\n        let {children} = this.props;\n        if (children !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return <>{children}</>;\n        }\n\n        let Templet: TempletType;\n        if (this.uiSchema !== undefined) {\n            Templet = this.uiSchema.Templet;\n        }\n        if (Templet !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\n        }\n\n        this.formContext = new FormContext(this, false);\n        return <>{this.schema.map((v, index) => {\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n        })}</>;\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type !== 'arr') {\n            data[name] = formData[name];\n            return;\n        }\n\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\n        let {arr:arrItems} = arrItem;\n        if (arrItems === undefined) return;\n        let arrDict = arrItem.itemSchemas = {};\n        for (let item of arrItems) {\n            arrDict[item.name] = item;\n        }\n        let val:any[] = formData[name];\n        if (val === undefined) val = [];\n        else if (Array.isArray(val) === false) val = [val];\n        let arr:any[] = [];\n        for (let row of val) {\n            let {$isSelected, $isDeleted} = row;\n            let r = {\n                $source: row,\n                $isSelected: $isSelected,\n                $isDeleted: $isDeleted,\n            };\n            for (let item of arrItems) {\n                this.initDataItem(item, r, row);\n                /*\n                let {name:nm} = item;\n                let v = row[nm];\n                if (v === undefined) v = null;\n                r[nm] = v;\n                */\n            }\n            arr.push(r);\n        }\n        //data[name] = observable(arr);\n        data[name] = arr;\n        return;\n    }\n\n    private watch = () => {\n        let {formData} = this.props;\n        if (formData === undefined) return;\n        //this.initData(formData);\n        this.calcSelectOrDelete();\n    }\n    private calcSelectOrDelete() {\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        if (this.data === undefined) return;\n        let formArrVal = this.data[name];\n        if (formArrVal === undefined) return;\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        if (this.disposer !== undefined) this.disposer();\n    }\n\n    render() {\n        let content = this.renderContent();\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(content)}\n        </ContextContainer.Provider>;\n    }\n\n    async buttonClick(buttonName:string) {\n        this.formContext.checkRules()\n        if (this.formContext.hasError === true) return;\n\n        let {onButtonClick} = this.formContext.form.props;\n        if (onButtonClick === undefined) {\n            alert(`you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this.formContext);\n        if (ret === undefined) return;\n        this.formContext.setError(buttonName, ret);\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)}>\n            {content}\n        </form>;\n    }\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        //return <div className=\"row\">{content}</div>;\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class Field extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {Field} from './field';\nexport {Context, RowContext} from './context';\n","import * as React from 'react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue != preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve, reject} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.newValue)}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiTextItem } from '../schema';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = \"border-top edit-sep-light-gray\";\n    private defaultRowContainerClassName = \"d-flex px-3 py-2 cursor-pointer bg-white align-items-center\";\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            if (i>0) elItems.push(this.sep);\n            elItems.push(this.renderRow(schema[i]));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow(itemSchema: ItemSchema):JSX.Element {\n        let {name, type} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string = (uiItem && uiItem.label) || name;\n        let value:any = this.props.data[name];\n        switch (type) {\n            default:\n                divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\n                break;\n            case 'image':\n                divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                break;\n        }\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"w-6c\">{label}</div>\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\n            <div className=\"w-2c text-right\"><i className=\"fa fa-chevron-right\" /></div>\n        </div>;\n    }\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick} = this.props;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue != value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    else {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","export * from './edit';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {IObservableValue, IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport '../css/va-row.css';\n\nexport interface ListItem {\n    key?: string|number;\n    date?: Date;\n    icon?: string | JSX.Element;\n    main?: string;\n    vice?: string;\n    middle?: string | JSX.Element;\n    midSize?: number;\n    right?: string | JSX.Element;\n    onClick?: () => void;\n    unread?: number|IComputedValue<number>;         // <0 表示red dot\n}\n\nexport interface ListRowProps extends ListItem {\n    //onClick: () => void;\n}\n\nexport interface ListRowState {\n    pressed: boolean;\n}\n\n@observer\nexport class ListRow extends React.Component<ListRowProps, ListRowState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: false,\n        }\n    }\n    render() {\n        let {date, main, vice, middle, midSize, icon, unread, right, onClick} = this.props;\n        let header, isIcon:boolean, noteNum;\n        if (unread !== undefined) {\n            let uv:number;\n            if (typeof unread === 'number') uv = unread;\n            else uv = unread.get();\n                if (uv > 0)\n                noteNum = <b>{uv}</b>;\n            else if (uv < 0)\n                noteNum = <b className='dot' />;\n        }\n        switch (typeof icon) {\n            case 'object':\n                header = <header>{icon}{noteNum}</header>; \n                isIcon= false;\n                break;\n            case 'string': \n                header = <header className='icon'><img src={icon as string} />{noteNum}</header>;\n                isIcon= true; \n                break;\n        }\n        let mid;\n        if (middle !== undefined) {\n            switch (typeof middle) {\n                case 'string':\n                    mid = <div style={{flex:midSize}}>{middle}</div>;\n                    break;\n                default:\n                    mid = middle;\n                    break;\n            }\n        }\n        let footer;\n        if (right !== undefined) {\n            if (typeof right === 'string')\n                footer = <footer><small className=\"text-muted\">{right}</small></footer>;\n            else\n                footer = <footer>{right}</footer>;\n        }\n        let viceSpan;\n        if (vice !== undefined) viceSpan = <span>{vice}</span>;\n        let cn = classNames('va-row', {icon:isIcon, pressed: this.state.pressed}, {\"va-action\": onClick !== undefined});\n        return (\n        <li className={cn} onClick={onClick}>\n            {header}\n            <div>\n                <div>{main}</div>\n                {viceSpan}\n            </div>\n            {mid}\n            {footer}\n        </li>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {ListItem, ListRow} from './listRow';\n\nexport interface ListViewProps {\n    className?: string;\n    items?: any[];\n    renderRow?: (item:any, index:number, ex?:any) => JSX.Element;\n    ex?: any;\n    header?: string|JSX.Element;\n    beforeLoad?: string|JSX.Element;\n    none?: string|JSX.Element;\n    footer?: string|JSX.Element;\n    itemClick?: (item:any)=>void;\n    converter?: (item:any)=>ListItem;\n}\n\n@observer\nexport class ListView extends React.Component<ListViewProps, null> {\n    render() {\n        let {header, items, beforeLoad, none, renderRow, className, footer, itemClick, converter} = this.props;\n        let cn = classNames(className, 'va-list');\n        let content, elHeader;\n        if (items === undefined)\n            content = beforeLoad === null? null : <li className='empty'>\n                {beforeLoad || '...'}\n            </li>;\n        else if (items.length === 0) {\n            content = (\n            <li className='empty'>\n                {\n                    none || '[none]'\n                }\n            </li>);\n        }\n        else if (renderRow !== undefined) {\n            content = items.map((item, index) => renderRow(item, index, this.props.ex));\n        }\n        else {\n            content = items.map((item, index) => {\n                let onClick = item.onClick;\n                if (onClick === undefined && itemClick !== undefined) \n                    onClick = ()=>itemClick(item);\n                let listItem:ListItem;\n                if (converter !== undefined) {\n                    listItem = converter(item);\n                    if (listItem === undefined) return null;\n                }\n                else {\n                    listItem = {\n                        ...item\n                    }\n                }\n                if (listItem.key === undefined) listItem.key = listItem.main;\n                return <ListRow onClick={onClick} {...listItem} />;\n            });\n        }\n        if (header !== undefined) {\n            if (typeof header === 'string') {\n                elHeader = <div className='va-list-header'>{header}</div>;\n            }\n            else {\n                elHeader = header;\n            }\n        }\n\n        return (\n        <div className={cn}>\n            {elHeader}\n            <ul>\n                {content}\n            </ul>\n            {footer}\n        </div>\n        )\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n\n    private _content: JSX.Element;\n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[] = [];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        switch (size) {\n            default:\n            case 'md': this.size = '3.2rem'; break;\n            case 'sm': this.size = '4rem'; break;\n            case 'lg': this.size = '2.5rem'; break;\n        }\n        this.tabs.push(...tabs.map(v => {\n                let tab = new Tab();\n                tab.name = v.name;\n                tab.selected = false;\n                tab.caption = v.caption;\n                tab.contentBuilder = v.content;\n                tab.notify = v.notify;\n                return tab;\n            }\n        ));\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    private tabClick = (tab:Tab) => {\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    showTab(tabName: string) {\n        let tab = this.tabs.find(v => v.name === tabName);\n        if (tab === undefined) return;\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        return <div className=\"tab\">\n            <div className={this.contentBack} style={{height: 'calc(100% - ' + this.size + ')'}}>\n                {this.tabs.map((v,index) => {\n                    let style:React.CSSProperties={\n                        display: v.selected===true? undefined : 'none'};\n                    return <div key={index} style={style}>{v.content}</div>;\n                })}\n            </div>\n            <div className={classNames(this.tabBack, this.sep)} style={{height: this.size}}>\n                {this.tabs.map((v,index) => {\n                    let {selected, caption, notify} = v;\n                    let notifyCircle:any;\n                    if (notify !== undefined) {\n                        let num = notify.get();\n                        if (num !== undefined) {\n                            if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                            else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                        }\n                    }\n                    return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                        <div className=\"align-self-center\">\n                            {notifyCircle}\n                            {caption(selected)}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { VPage, Page, Form, ItemSchema, UiSchema, StringSchema, UiTextItem, UiPasswordItem, ButtonSchema, Edit, ImageSchema, nav, UiImageItem } from '../ui';\nimport userApi from './userApi';\n\nexport class EditMeInfo extends React.Component {\n    private schema:ItemSchema[] = [\n        {name:'nick', type:'string'} as StringSchema,\n        {name:'icon', type:'image'} as ImageSchema\n    ];\n    private uiSchema:UiSchema = {\n        items: {\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\n            icon: {widget:'image', label:'头像'} as UiImageItem,\n        }\n    }\n    @observable private data:any;\n\n    constructor(props:any) {\n        super(props);\n        let {nick, icon} = nav.user;\n        this.data = {\n            nick: nick,\n            icon: icon,\n        }\n    }\n\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\n        let {name} = itemSchema;\n        await userApi.userSetProp(name, newValue);\n        this.data[name] = newValue;\n        nav.user[name] = newValue;\n        nav.saveLocalUser();\n    }\n\n    render() {\n        return <Page header=\"个人信息\">\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\n                data={this.data}\n                onItemChanged={this.onItemChanged} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport {FetchError} from '../fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","import {User, Guest, Unit} from './user';\n\nexport interface ClearableData {\n    clear(): void;\n}\n\nexport class Data<T> implements ClearableData {\n    private name: string;\n    private value?: T;\n    constructor(name: string) {this.name = name; }\n    get(): T {\n        if (this.value !== undefined) return this.value;\n        let v = localStorage.getItem(this.name);\n        return this.value = v === null ? undefined : JSON.parse(v); \n    }\n    set(value: T) {\n        if (!value) { this.clear(); return; }\n        this.value = value;\n        localStorage.setItem(this.name, JSON.stringify(value));\n    }\n    clear() {\n        this.value = undefined;\n        localStorage.removeItem(this.name);\n    }\n}\n\nexport class LocalData {\n    user = new Data<User>('user');\n    guest = new Data<Guest>('guest');\n    unit = new Data<Unit>('unit');\n    homeTabCur = new Data<number>('homeTabCur');\n\n    logoutClear() {\n        [\n            this.user,\n            this.unit,\n            this.homeTabCur\n        ].map(d => d.clear());\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from 'tonva-tools';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva-tools';\nimport { CSCMApp } from 'CSCMApp';\nimport { observable } from 'mobx';\nimport { meTab } from '../me';\n\nexport const store = {\n    //homeCount: observable.box<number>(-1),\n    //cartCount: observable.box<number>(101),\n};\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CSCMApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined/*store.homeCount*/ },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { View, nav } from 'tonva-tools';\nimport { LMR, FA, SearchBox } from 'tonva-react-form';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CHome } from './CHome';\nimport { SearchBox } from 'tonva-react-form';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","import * as React from 'react';\nimport { VPage, Page, View } from 'tonva-tools';\nimport { observer } from 'mobx-react';\nimport { CHome } from './CHome';\nimport { observable } from 'mobx';\n\nconst LIGUOSHENG = 5;\n\ninterface CatItem {\n    title: string;\n    sub: string[];\n    img: string;\n}\n\ninterface Cat {\n    caption: string;\n    items?: CatItem[];\n}\n\nconst catItemStyle:React.CSSProperties = {\n    width:'12rem', \n    //height: '6rem', \n    overflow: 'hidden', \n};\nconst subStyle:React.CSSProperties = {\n    fontSize:'0.75rem',\n    overflow: 'hidden', \n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n};\nconst imgStyle:React.CSSProperties = {\n    //float:'left', clear:'both', \n    height:'1.5rem', width:'1.5rem', opacity:0.1, \n    marginRight: '0.5rem',\n};\n\nexport class VHome extends View<CHome> {\n\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private renderSection = (item: any, index: number) => {\n        return <section>\n            <h4>{item.title}<small className=\"text-muted\">{item.subtitle}</small></h4>\n            <p>{item.content}</p>\n        </section>\n    }\n\n    render(param: any): JSX.Element {\n        return <this.content />\n    }\n\n    private page = observer(() => {\n        let { openMetaView } = this.controller;\n        let viewMetaButton = <></>;\n        if (this.controller.isLogined && this.controller.user.id === LIGUOSHENG) {\n            viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n        }\n\n        return <Page header={false} footer={viewMetaButton}>\n            <this.content />\n        </Page>;\n    })\n\n    private content = observer(() => {\n        let siteHeader = this.controller.renderSiteHeader();\n        return <>\n            {siteHeader}\n            {this.controller.renderCategoryRootList()}\n        </>\n    });\n}","import * as React from 'react';\nimport { TuidMain } from 'tonva-react-uq';\nimport { VSiteHeader } from './VSiteHeader';\nimport { CSCMApp } from '../CSCMApp';\nimport { PageItems, Controller } from 'tonva-tools';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\n\nclass HomeSections extends PageItems<any> {\n\n    private sectionTuid: TuidMain;\n\n    constructor(sectionTuid: TuidMain) {\n        super();\n        this.firstSize = this.pageSize = 13;\n        this.sectionTuid = sectionTuid;\n    }\n\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n        if (pageStart === undefined) pageStart = 0;\n        let ret = await this.sectionTuid.search(\"\", pageStart, pageSize);\n        return ret;\n    }\n\n    protected setPageStart(item: any): any {\n        if (item === undefined) return 0;\n        return item.id;\n    }\n}\n\nexport class CHome extends Controller {\n\n    cApp: CSCMApp;\n    homeSections: HomeSections;\n    sectionTuid: TuidMain;\n\n    constructor(cApp: CSCMApp, res: any) {\n        super(res);\n\n        this.cApp = cApp;\n    }\n\n    async internalStart(param: any) {\n\n        let { cFunctionCategory } = this.cApp;\n        await cFunctionCategory.start();\n        this.openVPage(VHome);\n    }\n\n    renderSiteHeader = () => {\n        return this.renderView(VSiteHeader);\n    }\n\n    renderSearchHeader = (size?:string) => {\n        return this.renderView(VSearchHeader, size);\n    }\n\n    renderCategoryRootList = () => {\n        let { cFunctionCategory } = this.cApp;\n        return cFunctionCategory.renderRootList();\n    }\n\n    renderHome = () => {\n        return this.renderView(VHome);\n    }\n\n    openMetaView = () => {\n        this.cApp.startDebug();\n    }\n\n    tab = () => <this.renderHome />;\n}","import * as React from 'react';\nimport { View } from 'tonva-tools';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { consts } from '../home/consts';\nimport { FA } from 'tonva-react-form';\n\nconst imgStyle: React.CSSProperties = {\n  height: '1.5rem', width: '1.5rem',\n  marginLeft: '0.1rem',\n  marginRight: '0.3rem'\n}\n\nexport const titleTitle: React.CSSProperties = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport const subStyle: React.CSSProperties = {\n  fontSize: '0.75rem',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport class VRootCategory extends View<CFunctionCategory> {\n  private categoryClick = async (categoryWapper: any, parent: any) => {\n    await this.controller.openMainPage(categoryWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children === undefined ? '' : children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let {name, children} = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"py-2 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }} >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-circle-right\" className=\"text-info\" />\n            &nbsp; {name}\n          </span>\n        </div>\n        {children === undefined ? '' : renderThirdCategory(children)}\n      </div>\n    </div>;\n  }\n\n  render(param: any): JSX.Element {\n    let { categories } = this.controller;\n    return <>{categories.map(v => this.renderRootCategory(v, undefined))}</>;\n  }\n}\n\nexport function renderThirdCategory(items: any) {\n  return <div className=\"py-1 px-1 text-muted small\" style={subStyle}>\n      {items.length === 0 ? <>&nbsp;</> : items.map(v => v.name).join(' / ')}\n  </div>\n}","import * as React from 'react';\nimport { CFunctionCategory } from './CFunctionCategory';\nimport { VPage, Page } from 'tonva-tools';\nimport { List, FA } from 'tonva-react-form';\nimport { tv } from 'tonva-react-uq';\nimport { titleTitle, subStyle } from './VRootCategory';\n\nexport class VCategory extends VPage<CFunctionCategory> {\n\n  async open(categoryWaper: any) {\n    this.openPage(this.page, categoryWaper);\n  }\n\n  private renderChild = (childWapper: any) => {\n    return <div className=\"py-2\"><FA name=\"hand-o-right mr-2\"></FA>{childWapper.name}</div>\n  }\n\n  private categoryClick = async (childWapper: any, parent: any) => {\n    await this.controller.openMainPage(childWapper, parent);\n  }\n\n  private renderRootCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div className=\"bg-white mb-3\" key={name}>\n      <div className=\"py-2 px-3\">\n        <b>{name}</b>\n      </div>\n      <div className=\"\"\n        style={{ paddingRight: '1px' }}\n      >\n        <div className=\"row no-gutters\">\n          {children.map(v => this.renderSubCategory(v, item))}\n        </div>\n      </div>\n    </div>\n  }\n\n  private renderSubCategory = (item: any, parent: any) => {\n    let { name, children } = item;\n    return <div key={name}\n      className=\"col-6 col-md-4 col-lg-3 cursor-pointer\"\n      //style={{borderRight:'1px solid gray', borderBottom:'1px solid gray'}}\n      onClick={() => this.categoryClick(item, parent)}>\n      <div className=\"pt-1 pb-1 px-2\"\n        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\n      >\n        <div style={titleTitle}>\n          <span className=\"ml-1 align-middle\">\n            <FA name=\"chevron-right\" className=\"text-info small\" />\n            &nbsp; {name}\n          </span>\n        </div>\n      </div>\n    </div>;\n    // <img src={consts.appIcon} alt=\"structure\" style={imgStyle} />\n  }\n\n  private page = (categoryWaper: any) => {\n\n    let { cHome } = this.controller.cApp;\n    let header = cHome.renderSearchHeader();\n\n    let { categoryWaper: item, parent } = categoryWaper;\n    return <Page header={header} >\n      {this.renderRootCategory(item, parent)}\n    </Page>\n  }\n}","export const funcs = [\n  {\n    name: \"基础信息\",\n    id: 1,\n    children: [\n      { name:\"商品信息\",\n        id: 101,\n        pid: 1,\n        page: \"product\" }, \n      { name: \"供应商信息\",\n        id: 102,\n        pid: 1,\n        page: \"供应商信息\" },\n      { name: \"客户信息\",\n        id: 103,\n        pid: 1,\n        page: \"客户信息\" },\n      { name: \"部门信息\",\n        id: 104,\n        pid: 1,\n        page: \"部门信息\" },\n      { name: \"职员信息\",\n        id: 105,\n        pid: 1,\n        page: \"职员信息\" },\n      { name: \"物流中心（自建、委托）\",\n        id: 106,\n        pid: 1,\n        page: \"物流中心\" },\n      { name: \"库区信息（自建）\",\n        id: 107,\n        pid: 1,\n        page: \"库区信息\" },\n      { name: \"货位信息（自建）\",\n        id: 108,\n        pid: 1,\n        page: \"货位信息\" }\n    ]\n  },\n  {\n    name: \"采购管理\",\n    id: 2,\n    children: [\n      { name:\"采购订单\",\n        id: 201,\n        pid: 2,\n        page: \"采购订单\" }, \n      { name: \"采购收货（自建）\",\n        id: 202,\n        pid: 2,\n        page: \"采购收货\" }, \n      { name: \"采购验收（自建）\",\n        id: 203,\n        pid: 2 }, \n      { name: \"采购入库（自建）\",\n        id: 204,\n        pid: 2 }, \n      { name: \"采购记账\",\n        id: 205,\n        pid: 2 }, \n      { name: \"采购退货\",\n        id: 206,\n        pid: 2 }, \n      { name: \"采退出库（自建）\",\n        id: 207,\n        pid: 2 }, \n      { name: \"采退复核（自建）\",\n        id: 208,\n        pid: 2 }, \n      { name: \"采退记账\",\n        id: 209,\n        pid: 2 }\n    ]\n  },\n  {\n    name: \"采购结算管理\",\n    id: 3,\n    children: [\n      { name: \"采购发票\",\n        id: 301,\n        pid: 3 }, \n      { name: \"采购组票\",\n        id: 302,\n        pid: 3 }, \n      { name: \"采购结算\",\n        id: 303,\n        pid: 3 }, \n      { name: \"采价调整\",\n        id: 304,\n        pid: 3 }, \n      { name: \"采购冲差\",\n        id: 305,\n        pid: 3 }\n    ]\n  },\n  {\n    name: \"销售管理\",\n    id: 4,\n    children: [\n      { name:\"销售订单\",\n        id: 401,\n        pid: 4,\n        page: \"销售订单\" }, \n      { name: \"销售出库（自建）\",\n        id: 402,\n        pid: 4 }, \n      { name: \"出库复核（自建）\",\n        id: 403,\n        pid: 4 }, \n      { name: \"销售记账（自建、委托）\",\n        id: 404,\n        pid: 4 }, \n      { name: \"销售退货\",\n        id: 405,\n        pid: 4 }, \n      { name: \"销售退货验收（自建）\",\n        id: 406,\n        pid: 4 }, \n      { name: \"销售退货入库（自建）\",\n        id: 407,\n        pid: 4 }, \n      { name: \"销售退货记账（自建、委托）\",\n        id: 408,\n        pid: 4 }\n    ]\n  },\n  {\n    name: \"销售结算管理\",\n    id: 5,\n    children: [\n      { name:\"销售换票\",\n        id: 501,\n        pid: 5 }, \n      { name: \"销售结算\",\n        id: 502,\n        pid: 5 }, \n      { name: \"销价调整\",\n        id: 503,\n        pid: 5 }, \n      { name: \"销售冲差\",\n        id: 504,\n        pid: 5 }, \n    ]\n  },\n  {\n    name: \"期初管理\",\n    id: 6,\n    children: [\n      { name:\"商品库存期初\",\n        id: 601,\n        pid: 6 }, \n      { name: \"供应商期初\",\n        id: 602,\n        pid: 6 }, \n      { name: \"客商期初\",\n        id: 603,\n        pid: 6 }, \n    ]\n  },\n  {\n    name: \"价格管理\",\n    id: 7,\n    children: [\n      { name:\"商品定价\",\n        id: 701,\n        pid: 7 }, \n      { name: \"客商定价\",\n        id: 702,\n        pid: 7 }, \n    ]\n  },\n  {\n    name: \"查询报表\",\n    id: 8,\n    children: [\n      { name: \"库存相关\",\n        id: 801,\n        pid: 8, \n        children: [\n          { name: \"库存查询\",\n            id: 80101,\n            pid: 801 },\n          { name: \"进销存查询\",\n            id: 80102,\n            pid: 801 },\n        ]\n      }, \n      { name: \"销售相关\",\n        id: 802,\n        pid: 8, \n        children: [\n          { name: \"客商销售汇总查询\",\n            id: 80201,\n            pid: 802 },\n          { name: \"客商销售明细查询\",\n            id: 80202,\n            pid: 802 }\n        ]\n      }, \n      { name: \"采购相关\",\n        id: 803,\n        pid: 8,\n        children: []\n      }, \n      { name: \"应收应付相关\",\n        id: 804,\n        pid: 8,\n        children: [\n          { name: \"客商应收账款汇总查询\",\n            id: 80401,\n            pid: 804 },\n          { name: \"客商应收账款明细查询\",\n            id: 80402,\n            pid: 804 },\n          { name: \"供应商应付账款汇总查询\",\n            id: 80403,\n            pid: 804 },\n          { name: \"供应商应付账款明细查询\",\n            id: 80404,\n            pid: 804 }\n        ]\n      }, \n    ]\n  },\n  {\n    name: \"测试\",\n    id: 9,\n    children: [\n      { name:\"全部测试\",\n        id: 901,\n        pid: 9,\n        page: \"testAllTab\" }\n    ]\n  }\n]\n","import React from 'react';\nimport { nav, VPage, Page, appInFrame, Controller } from 'tonva-tools';\nimport {AppUI, CApp, VTuidEdit, VTuidMain, CLink} from 'tonva-react-uq';\nimport { FA } from 'tonva-react-form';\nimport {CSCMApp} from 'CSCMApp'\nimport { consts } from 'home/consts';\nimport uui from \"ui\";\n\nexport class TestPage2 extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    public appPage = () => {\n        let {cUqArr: cUsqArr} = this.controller;\n        let content;\n        if (cUsqArr.length === 0) {\n            content = <div className=\"p-3 text-info\">\n                <FA name=\"minus-circle\" className=\"text-danger\" size=\"lg\" /> &nbsp; 此APP没有绑定任何的USQ\n            </div>;\n        }\n        else {\n            content = cUsqArr.map((v,i) => \n            <div key={i}>{v.render()}</div>);\n        }\n        return <Page header={'全部功能'}\n          logout={async ()=>{appInFrame.unit = undefined}}>\n            <div className=\"p-3\">-------</div>\n            {content}\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { CSCMApp } from 'CSCMApp';\nimport { nav, Page, VPage, Controller } from 'tonva-tools';\nimport { AppUI, CApp, VTuidEdit, VTuidMain, CLink } from 'tonva-react-uq';\nimport { consts } from 'home/consts';\nimport {TestPage2} from './testpage2'\nimport { CarouselControlProps } from 'reactstrap';\n\nconst baseInfoNames : string[] = [\n  \"product\", \"packtype\", \"供应商信息\", \"客户信息\", \"部门信息\", \"职员信息\", \"库区信息\",\n   \"货位信息\", \"物流中心\", \"生产厂商\"\n]\n\nconst sheetNames : string[] = [\n  \"采购订单\", \"采购收货\",\"销售订单\"\n]\n\nclass NavTuidMainPage extends VPage<CApp> {\n  async open(param?: any) {\n    if (param !== undefined) {\n      let cuq = this.controller.getCUq(consts.uqBasedata);\n      let mid = cuq.tuid(param);\n      if (mid !== undefined) {\n        await cuq.cTuidMain(mid).start();\n      }\n    }\n  }\n}\n\nclass NavTuidEditPage extends VPage<CApp> {\n  async open(param?: any) {\n    if (param !== undefined) {\n      let cuq = this.controller.getCUq(consts.uqBasedata);\n      let mid = cuq.tuid(param);\n      if (mid !== undefined) {\n        await cuq.cTuidEdit(mid).start();\n      }\n    }\n  }\n}\n\nclass NavSheetPage extends VPage<CApp> {\n  async open(param?: any) {\n    if (param !== undefined) {\n      let cuq = this.controller.getCUq(consts.uqBasedata);\n      let mid = cuq.sheet(param);\n      if (mid !== undefined) {\n        await cuq.cSheet(mid).start();\n      }\n    }\n  }\n}\n\nconst showOneVPage = async(cApp:Controller, vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> => {\n  await (new vp(cApp)).open(param);\n}\n\nexport const navToPage = (name : string, cApp : Controller) => {\n  if (baseInfoNames.includes(name)) {\n    showOneVPage(cApp, NavTuidMainPage, name);\n  }\n  else if (sheetNames.includes(name)) {\n    showOneVPage(cApp, NavSheetPage, name);\n  }\n  else if (name === \"testAllTab\")\n  {\n    showOneVPage(cApp, TestPage2, \"testAllTab\")\n  }\n}\n\nexport const navToEditPage = (name : string, cApp : Controller) => {\n  if (baseInfoNames.includes(name)) {\n    showOneVPage(cApp, NavTuidEditPage, name);\n  }\n}","import * as React from 'react';\nimport { Query } from 'tonva-react-uq';\nimport { observable } from 'mobx';\nimport { VRootCategory } from './VRootCategory';\nimport { VCategory } from './VCategory';\nimport { CSCMApp } from 'CSCMApp';\nimport { nav, Page, Loading, Controller } from 'tonva-tools';\nimport { funcs } from './funcCategories';\nimport { navToPage } from 'pages'\n\nexport class CFunctionCategory extends Controller {\n\n  cApp: CSCMApp;\n  // categories: any[];\n  @observable categories: any[] = [];\n\n  constructor(cApp: CSCMApp, res: any) {\n    super(res);\n\n    this.cApp = cApp;\n  }\n\n  async internalStart(param: any) {\n    this.categories = funcs;\n  }\n\n  renderRootList = () => {\n    return this.renderView(VRootCategory);\n  };\n\n  async openMainPage(categoryWaper: any, parent: any) {\n    if (categoryWaper === undefined)\n      return;\n    let { children, page, name } = categoryWaper;\n    if (children === undefined || children.length == 0) {\n      \n      if (page !== undefined) {\n        navToPage(page, this.cApp);\n      }\n    }\n    else {\n      this.openVPage(VCategory, { categoryWaper, parent });\n    }\n  }\n}","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class CTuidMainProduct extends CTuidMain {\n  protected get VTuidMain():typeof VTuidMain {return VTuidMainProduct}\n}\n\nclass VTuidMainProduct extends VTuidMain {\n  onPackType = async () => {\n    navToPage('packtype', this.controller.cUq.cApp);\n  }\n  protected get view() {\n      let {label, proxyLinks} = this.controller;\n      return () => <Page header={label}>\n          {proxyLinks === undefined ?\n          <>\n              <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\n              <div className='my-3'>\n                  <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\n                  <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\n              </div>\n          </> :\n          <List className=\"my-2\"\n              header={<Muted>{label} 代理下列Tuid</Muted>}\n              items={proxyLinks}\n              item={{render: this.entityRender, onClick:this.entityClick}} />\n          }\n      </Page>;\n  }\n}\n\nexport class CTuidEditProduct extends CTuidEdit {\n  protected get VTuidEditC():typeof VTuidEditProduct {return VTuidEditProduct}\n\n  protected async edit(values:any) {\n    await this.openVPage(this.VTuidEditC, values);\n  }\n\n  pickManufactor = async (context: Context, name: string, value: number): Promise<number> => {\n    //let cAddress = new CAddress(this.cApp, undefined);\n    //return await cAddress.call<number>();\n    let uq = this.cUq.cTuidSelectFromName('生产厂商');\n    let r= await uq.call();\n    return r.id;\n  }\n}\n\nconst schemaProduct : Schema = [\n  {name: 'id', type: 'id', required: false},\n  {name: '名称', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '编码', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '查询码', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '通用名称', type: 'string', maxLength: 100} as StringSchema,\n  {name: '生产厂商', type: 'id', required: false, maxLength: 100} as IdSchema,\n  {name: '商品分类', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '生产日期', type: 'date', required: false } as DateSchema,\n  {name: '有效期', type: 'date', required: false} as DateSchema,\n  {name: 'submit', type: 'submit'}\n];\n\nconst schemaProduct2 : Schema = [\n  {name: 'product', type: 'id', required: false},\n  {name: '图片', type: 'string', required: true, maxLength: 200} as StringSchema,\n  {name: '商品条形码', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '规格型号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '单位', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '计量单位类型', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '中包装', type: 'string', maxLength: 100} as StringSchema,\n  {name: '默认包装', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '件长', type: 'string', maxLength: 100} as StringSchema,\n  {name: '件宽', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '件高', type: 'string', maxLength: 100} as StringSchema,\n  {name: '堆码层数极限', type: 'integer'} as IntSchema,\n  {name: '小包装长', type: 'string', maxLength: 100} as StringSchema,\n  {name: '小包装宽', type: 'string', maxLength: 100} as StringSchema,\n  {name: '小包装高', type: 'string', maxLength: 100} as StringSchema,\n  {name: '上架拆中包装', type: 'string', maxLength: 100} as StringSchema,\n  {name: '单位体积', type: 'string', maxLength: 100} as StringSchema,\n  {name: 'submit', type: 'submit'}\n];\n\nconst schemaProduct3 : Schema = [\n  {name: 'product', type: 'id', required: false},\n  {name: '零售价', type: 'number', required: true} as NumSchema,\n  {name: '批发价', type: 'number', required: false} as NumSchema,\n  {name: '税率', type: 'number', required: false} as NumSchema,\n  {name: '销项税率', type: 'number', required: false} as NumSchema,\n  {name: '折扣分类', type: 'number', required: false} as NumSchema,\n  {name: '折扣率', type: 'number', required: false} as NumSchema,\n  {name: 'submit', type: 'submit'}\n];\n\nclass VTuidEditProduct extends VEntity<Tuid, TuidUI, CTuidEditProduct> {\n  private form2: Form;\n  private form3: Form;\n  private cid: number;\n\n  protected uiSchema : UiSchema = {\n    items : {\n      id: { widget: 'id', visible: false } as UiIdItem,\n      名称: { widget: 'text', label: '名称'} as UiTextItem,\n      编码: { widget: 'text'} as UiTextItem, \n      查询码: { widget: 'text'} as UiTextItem,\n      通用名称: { widget: 'text'} as UiTextItem,\n      生产厂商: { \n        widget: 'id',\n        pickId: async (context: Context, name: string, value: number) => {\n          return await this.controller.pickManufactor(context, name, value);\n        }\n      } as UiIdItem,\n      商品分类: { widget: 'text'} as UiTextItem,\n      生产日期: { widget: 'date'} as UiItem,\n      有效期: { widget: 'date'} as UiItem,\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</>},\n    }\n  }\n\n  protected uiSchema2 : UiSchema = {\n    items : {\n      product: { widget: 'id', visible: false } as UiIdItem,\n      商品条形码: { widget: 'text'} as UiTextItem,\n      规格型号: { widget: 'text'} as UiTextItem,\n      单位: { widget: 'text'} as UiTextItem,\n      计量单位类型: { widget: 'text'} as UiTextItem,\n      中包装: { widget: 'text'} as UiTextItem,\n      默认包装: { widget: 'text'} as UiTextItem,\n      件长: { widget: 'text'} as UiTextItem,\n      件宽: { widget: 'text'} as UiTextItem,\n      件高: { widget: 'text'} as UiTextItem,\n      堆码层数极限: { widget: 'updown', min: 1, max: 100, step: 1 } as UiInputItem,\n      小包装长: { widget: 'text'} as UiTextItem,\n      小包装宽: { widget: 'text'} as UiTextItem,\n      小包装高: { widget: 'text'} as UiTextItem,\n      上架拆中包装: { widget: 'text'} as UiTextItem,\n      单位体积: { widget: 'text'} as UiTextItem,\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</>},\n    }\n  }\n\n  protected uiSchema3 : UiSchema = {\n    items : {\n      product: { widget: 'id', visible: false } as UiIdItem,\n      零售价: { widget: 'text'} as UiTextItem,\n      批发价: { widget: 'text'} as UiTextItem,\n      税率: { widget: 'text'} as UiTextItem,\n      销项税率: { widget: 'text'} as UiTextItem,\n      折扣分类: { widget: 'text'} as UiTextItem,\n      折扣率: { widget: 'text'} as UiTextItem,\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</>},\n    }\n  }\n\n  formData = {\n    id: undefined,\n  }\n\n  formData2 = {\n    product: undefined,\n  }\n\n  formData3 = {\n    product: undefined,\n  }\n\n  async loadMap2():Promise<any> {\n    let mapc2 = this.controller.cUq.map(\"ProductInfo\");\n    let qm2 = {product:this.cid};\n    let qr2 = await mapc2.query(qm2);\n    if (qr2 !== undefined) {\n      let {ret} = qr2 as {ret:any[]};\n      if (ret && ret.length > 0){\n        let fd = ret[0];\n        fd.product = this.cid;\n        this.formData2 = fd;\n      }\n    }\n  }\n\n  async loadMap3():Promise<any> {\n    let mapc3 = this.controller.cUq.map(\"ProductPrice\");\n    let qm3 = {product:this.cid};\n    let qr3 = await mapc3.query(qm3);\n    if (qr3 !== undefined) {\n      let {ret} = qr3 as {ret:any[]};\n      if (ret && ret.length > 0){\n        let fd = ret[0];\n        fd.客户 = this.cid;\n        this.formData3 = fd;\n      }\n    }\n  }\n\n  async open(param?:any):Promise<void> {\n    if (param !== undefined) {\n      let dataF = param;\n      dataF.生产厂商 = param.生产厂商.id;\n      this.formData = dataF;\n\n      this.cid = this.formData.id;\n      this.formData2.product = this.cid;\n      this.formData3.product = this.cid;\n      let promises:PromiseLike<any>[] = [];\n      promises.push(this.loadMap2());\n      promises.push(this.loadMap3());\n      await Promise.all(promises);\n    }\n    this.openPage(this.view, param);\n  }\n\n  onFormButtonNextClick = async (name:string, context:Context) => {\n    if (name === 'submit') {\n      this.formData = context.data;\n      this.openPage(this.view2);\n      this.controller.regConfirmClose(async () => {\n        this.formData2 = this.form2.data;\n        return true;\n      })    \n    }\n  }\n\n  onFormButtonNextClick2 = async (name:string, context:Context) => {\n    if (name === 'submit') {\n      this.formData2 = context.data;\n      this.openPage(this.view3);    \n      this.controller.regConfirmClose(async () => {\n        this.formData3 = this.form3.data;\n        return true;\n      })    \n    }\n  }\n\n  onFormButtonNextClick3 = async (name:string, context:Context) => {\n    if (name === 'submit') {\n      this.formData3 = context.data;\n      this.cid = this.formData.id;\n      let mapc2 = this.controller.cUq.map(\"ProductInfo\");\n      let mapc3 = this.controller.cUq.map(\"ProductPrice\");\n      let ret = await this.controller.entity.save(this.cid, this.formData);\n      let {id, inId} = ret;\n      if (inId < 0  && id < 0) {\n        return;\n      }\n      if (inId > 0)\n        id = inId;\n      this.formData2.product = id;\n      this.formData3.product = id;\n      let promises:PromiseLike<any>[] = [];\n      promises.push(mapc2.add(this.formData2));\n      promises.push(mapc3.add(this.formData3));\n      await Promise.all(promises);\n      this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n    }\n  }\n\n  reset() {\n    this.formData = { id: undefined }\n  \n    this.formData2 = { product: undefined }\n  \n    this.formData3 = { product: undefined }\n  }\n\n  protected next = async () => {\n    this.reset();\n    this.closePage(4);\n    await this.open();\n  }\n\n  protected finish = () => {\n    this.closePage(4);\n  }\n\n  protected get view() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form className=\"p-3\" schema={schemaProduct} uiSchema={this.uiSchema} formData={this.formData}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick}\n      />\n    </Page>;\n  }\n\n  protected get view2() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form ref={v => this.form2 = v} className=\"p-3\" schema={schemaProduct2} uiSchema={this.uiSchema2} formData={this.formData2}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick2}\n      />\n    </Page>;\n  }\n\n  protected get view3() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form ref={v => this.form3 = v} className=\"p-3\" schema={schemaProduct3} uiSchema={this.uiSchema3} formData={this.formData3}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick3}\n      />\n    </Page>;\n  }\n}\n\nexport class CTuidSelectProduct extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectProduct}\n\n}\n\nclass VTuidSelectProduct extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('商品信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n    await this.showM(param);\n  }\n\n  protected async showM(param) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n      initKey={''}\n      onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择商品\" right={rbutton} back=\"close\">\n      {header}\n      <List\n        items={this.controller.PageItems.items}\n        item={{render: this.renderMainRow, onClick: this.clickRow}}\n        before={'搜索'+this.label+'资料'} />\n      </Page>;\n  });\n\n  protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择商品\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n\nexport class CTuidListProduct extends CTuidList {\n  protected get VTuidList():typeof VTuidMainList {return VTuidMainListProduct}\n\n}\n\nexport class VTuidMainListProduct extends VTuidMainList {\n\n}\n","import * as React from 'react';\nimport { CTuidMain, VTuidMain, CTuidSelect, VTuidSelect, Field, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { Page } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\n\nexport class CTuidMainPackType extends CTuidMain {\n  protected get VTuidMain():typeof VTuidMain {return VTuidMainPackType}\n}\n\nclass VTuidMainPackType extends VTuidMain {\n  protected get view() {\n      let {label, proxyLinks} = this.controller;\n      return () => <Page header={label}>\n          {proxyLinks === undefined ?\n          <>\n              <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\n              <div className='my-3'>\n                  <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\n                  <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\n              </div>\n          </> :\n          <List className=\"my-2\"\n              header={<Muted>{label} 代理下列Tuid</Muted>}\n              items={proxyLinks}\n              item={{render: this.entityRender, onClick:this.entityClick}} />\n          }\n      </Page>;\n  }\n}\n\nexport class CTuidSelectPackType extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectPackType}\n}\n\nclass VTuidSelectPackType extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('packtype', this.controller.cUq.cApp);\n  }\n  protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择计量单位\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { observable } from 'mobx';\nimport { CTuidMain, VTuidMain, CTuidEdit, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class CTuidMainCustomer extends CTuidMain {\n  protected get VTuidMain():typeof VTuidMain {return VTuidMainCustomer}\n}\n\nclass VTuidMainCustomer extends VTuidMain {\n  protected get view() {\n      let {label, proxyLinks} = this.controller;\n      return () => <Page header={label}>\n          {proxyLinks === undefined ?\n          <>\n              <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索'+label} />\n              <div className='my-3'>\n                  <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\n                  <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\n              </div>\n          </> :\n          <List className=\"my-2\"\n              header={<Muted>{label} 代理下列Tuid</Muted>}\n              items={proxyLinks}\n              item={{render: this.entityRender, onClick:this.entityClick}} />\n          }\n      </Page>;\n  }\n}\n\nexport class CTuidEditCustomer extends CTuidEdit {\n  protected get VTuidEdit():typeof VTuidEdit {return VTuidEditCustomer}\n\n}\n\nconst schemaCustomer : Schema = [\n  {name: 'id', type: 'id', required: false},\n  {name: '名称', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '编码', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '查询码', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '法人代表', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '收货地址', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '调拨类型', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '运输方式', type: 'string', maxLength: 100} as StringSchema,\n  {name: '联系人', type: 'string', maxLength: 100} as StringSchema,\n  {name: 'submit', type: 'submit'}\n];\n\nconst schemaCustomer2 : Schema = [\n  {name: '客户', type: 'id', required: false},\n  {name: '图片', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '企业类型', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '许可证号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '发证日期', type: 'date', required: false } as DateSchema,\n  {name: '有效期至', type: 'date', required: false} as DateSchema,\n  {name: '经营范围', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '范围显示', type: 'string', maxLength: 100} as StringSchema,\n  {name: '营业执照', type: 'string', maxLength: 100} as StringSchema,\n  {name: '营业执照发证日期', type: 'date'} as DateSchema,\n  {name: '营业执照有效期至', type: 'date'} as DateSchema,\n  {name: '营业执照年检证明', type: 'string', maxLength: 100} as StringSchema,\n  {name: '组织机构代码证号', type: 'string', maxLength: 100} as StringSchema,\n  {name: '代码证发证日期', type: 'date'} as DateSchema,\n  {name: '代码证有效期至', type: 'date'} as DateSchema,\n  {name: '代码证年检证明', type: 'string', maxLength: 100} as StringSchema,\n  {name: 'GMP', type: 'string', maxLength: 100} as StringSchema,\n  {name: 'GMP发证日期', type: 'date'} as DateSchema,\n  {name: 'submit', type: 'submit'}\n];\n\nconst schemaCustomer3 : Schema = [\n  {name: '客户', type: 'id', required: false},\n  {name: '税号', type: 'string', required: true, maxLength: 100} as StringSchema,\n  {name: '开户行', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '账号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '记账方式', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '换票方式', type: 'string', maxLength: 100} as StringSchema,\n  {name: '换票类型', type: 'string', maxLength: 100} as StringSchema,\n  {name: 'submit', type: 'submit'}\n];\n\nclass VTuidEditCustomer extends VTuidEdit {\n  private form2: Form;\n  private form3: Form;\n  private cid: number;\n\n  protected uiSchema : UiSchema = {\n    items : {\n      id: { widget: 'id', visible: false } as UiIdItem,\n      名称: { widget: 'text'} as UiTextItem,\n      编码: { widget: 'text'} as UiTextItem,\n      查询码: { widget: 'text'} as UiTextItem,\n      法人代表: { widget: 'text'} as UiTextItem,\n      收货地址: { widget: 'text'} as UiTextItem,\n      调拨类型: { widget: 'text'} as UiTextItem,\n      运输方式: { widget: 'text'} as UiTextItem,\n      联系人: { widget: 'text'} as UiTextItem,\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</>},\n    }\n  }\n\n  protected uiSchema2 : UiSchema = {\n    items : {\n      客户: { widget: 'id', visible: false } as UiIdItem,\n      图片: { widget: 'text'} as UiTextItem,\n      企业类型: { widget: 'text'} as UiTextItem,\n      许可证号: { widget: 'text'} as UiTextItem,\n      发证日期: { widget: 'date'} as UiItem,\n      有效期至: { widget: 'date'} as UiItem,\n      经营范围: { widget: 'text'} as UiTextItem,\n      范围显示: { widget: 'text'} as UiTextItem,\n      营业执照: { widget: 'text'} as UiTextItem,\n      营业执照发证日期: { widget: 'date', label: '发证日期'} as UiItem,\n      营业执照有效期至: { widget: 'date', label: '有效期至'} as UiItem,\n      营业执照年检证明: { widget: 'text'} as UiTextItem,\n      组织机构代码证号: { widget: 'text'} as UiTextItem,\n      代码证发证日期: { widget: 'date', label: '发证日期'} as UiItem,\n      代码证有效期至: { widget: 'date', label: '有效期至'} as UiItem,\n      代码证年检证明: { widget: 'text'} as UiTextItem,\n      GMP: { widget: 'text'} as UiTextItem,\n      GMP发证日期: { widget: 'date', label: '发证日期'} as UiItem,\n      prev: {widget: 'button', className: 'btn', Templet: <><i className=\"fa\" />&nbsp;上一步&nbsp;</>},\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</>},\n    }\n  }\n\n  protected uiSchema3 : UiSchema = {\n    items : {\n      客户: { widget: 'id', visible: false } as UiIdItem,\n      税号: { widget: 'text'} as UiTextItem,\n      开户行: { widget: 'text'} as UiTextItem,\n      账号: { widget: 'text'} as UiTextItem,\n      记账方式: { widget: 'text'} as UiTextItem,\n      换票方式: { widget: 'text'} as UiTextItem,\n      换票类型: { widget: 'text'} as UiTextItem,\n      prev: {widget: 'button', className: 'btn', Templet: <><i className=\"fa\" />&nbsp;上一步&nbsp;</>},\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</>},\n    }\n  }\n\n  formData = {\n    id: undefined,\n  }\n\n  formData2 = {\n    客户: undefined,\n  }\n\n  formData3 = {\n    客户: undefined,\n  }\n\n  async loadMap2():Promise<any> {\n    let mapc2 = this.controller.cUq.map(\"客户证照信息\");\n    let qm2 = {客户:this.cid};\n    let qr2 = await mapc2.query(qm2);\n    if (qr2 !== undefined) {\n      let {ret} = qr2 as {ret:any[]};\n      if (ret && ret.length > 0){\n        let fd = ret[0];\n        fd.客户 = this.cid;\n        this.formData2 = fd;\n      }\n    }\n  }\n\n  async loadMap3():Promise<any> {\n    let mapc3 = this.controller.cUq.map(\"客户财务信息\");\n    let qm3 = {客户:this.cid};\n    let qr3 = await mapc3.query(qm3);\n    if (qr3 !== undefined) {\n      let {ret} = qr3 as {ret:any[]};\n      if (ret && ret.length > 0){\n        let fd = ret[0];\n        fd.客户 = this.cid;\n        this.formData3 = fd;\n      }\n    }\n  }\n\n  async open(param?:any):Promise<void> {\n    if (param !== undefined) {\n      this.formData = param;\n\n      this.cid = this.formData.id;\n      this.formData2.客户 = this.cid;\n      this.formData3.客户 = this.cid;\n      let promises:PromiseLike<any>[] = [];\n      promises.push(this.loadMap2());\n      promises.push(this.loadMap3());\n      await Promise.all(promises);\n    }\n    this.openPage(this.view, param);\n  }\n\n  onFormButtonNextClick = async (name:string, context:Context) => {\n    if (name === 'submit') {\n      this.formData = context.data;\n      this.openPage(this.view2);\n      this.controller.regConfirmClose(async () => {\n        this.formData2 = this.form2.data;\n        return true;\n      })    \n    }\n  }\n\n  onFormButtonNextClick2 = async (name:string, context:Context) => {\n    if (name === 'submit') {\n      this.formData2 = context.data;\n      this.openPage(this.view3);    \n      this.controller.regConfirmClose(async () => {\n        this.formData3 = this.form3.data;\n        return true;\n      })    \n    }\n  }\n\n  onFormButtonNextClick3 = async (name:string, context:Context) => {\n    if (name === 'submit') {\n      this.formData3 = context.data;\n      this.cid = this.formData.id;\n      let mapc2 = this.controller.cUq.map(\"客户证照信息\");\n      let mapc3 = this.controller.cUq.map(\"客户财务信息\");\n      let ret = await this.controller.entity.save(this.cid, this.formData);\n      let {id, inId} = ret;\n      if (inId < 0  && id < 0) {\n        return;\n      }\n      if (inId > 0)\n        id = inId;\n      this.formData2.客户 = id;\n      this.formData3.客户 = id;\n      let promises:PromiseLike<any>[] = [];\n      promises.push(mapc2.add(this.formData2));\n      promises.push(mapc3.add(this.formData3));\n      await Promise.all(promises);\n      this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n    }\n  }\n\n  reset() {\n    this.formData = { id: undefined }\n  \n    this.formData2 = { 客户: undefined }\n  \n    this.formData3 = { 客户: undefined }\n  }\n\n  protected next = async () => {\n    this.reset();\n    this.closePage(4);\n    await this.open();\n  }\n\n  protected finish = () => {\n    this.closePage(4);\n  }\n\n  protected get view() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form className=\"p-3\" schema={schemaCustomer} uiSchema={this.uiSchema} formData={this.formData}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick}\n      />\n    </Page>;\n  }\n\n  protected get view2() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form ref={v => this.form2 = v} className=\"p-3\" schema={schemaCustomer2} uiSchema={this.uiSchema2} formData={this.formData2}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick2}\n      />\n    </Page>;\n  }\n\n  protected get view3() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form ref={v => this.form3 = v} className=\"p-3\" schema={schemaCustomer3} uiSchema={this.uiSchema3} formData={this.formData3}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick3}\n      />\n    </Page>;\n  }\n}\n\nexport class CTuidSelectCustomer extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectCustomer}\n\n}\n\nclass VTuidSelectCustomer extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('客户信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n    await this.showM(param);\n  }\n\n  protected async showM(param) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n      initKey={''}\n      onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择客户\" right={rbutton} back=\"close\">\n      {header}\n      <List\n        items={this.controller.PageItems.items}\n        item={{render: this.renderMainRow, onClick: this.clickRow}}\n        before={'搜索'+this.label+'资料'} />\n      </Page>;\n  });\n\n  protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择客户\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n\nexport class CTuidListCustomer extends CTuidList {\n  protected get VTuidList():typeof VTuidMainList {return VTuidMainListCustomer}\n\n}\n\nexport class VTuidMainListCustomer extends VTuidMainList {\n\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { observable } from 'mobx';\nimport { CTuidMain, VTuidMain, CTuidEdit, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect } from 'tonva-react-uq'\nimport { Page } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class CTuidMainSupplier extends CTuidMain {\n  protected get VTuidMain(): typeof VTuidMain { return VTuidMainSupplier }\n}\n\nclass VTuidMainSupplier extends VTuidMain {\n  protected get view() {\n    let { label, proxyLinks } = this.controller;\n    return () => <Page header={label}>\n      {proxyLinks === undefined ?\n        <>\n          <SearchBox className=\"w-100\" onSearch={this.onSearch} placeholder={'搜索' + label} />\n          <div className='my-3'>\n            <Button className=\"ml-3\" color=\"primary\" onClick={this.onNew}>新增</Button>\n            <Button className=\"ml-3\" color=\"primary\" onClick={this.onList}>列表</Button>\n          </div>\n        </> :\n        <List className=\"my-2\"\n          header={<Muted>{label} 代理下列Tuid</Muted>}\n          items={proxyLinks}\n          item={{ render: this.entityRender, onClick: this.entityClick }} />\n      }\n    </Page>;\n  }\n}\n\nexport class CTuidEditSupplier extends CTuidEdit {\n  protected get VTuidEdit(): typeof VTuidEdit { return VTuidEditSupplier }\n\n}\n\nconst schemaSupplier: Schema = [\n  { name: 'id', type: 'id', required: false },\n  { name: '名称', type: 'string', required: true, maxLength: 100 } as StringSchema,\n  { name: '编码', type: 'string', required: true, maxLength: 100 } as StringSchema,\n  { name: '查询码', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '法人代表', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '注册地址', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '退货地址', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '企业性质', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '联系人', type: 'string', maxLength: 100 } as StringSchema,\n  { name: 'submit', type: 'submit' }\n];\n\nconst schemaSupplier2: Schema = [\n  { name: '供应商', type: 'id', required: false },\n  { name: '图片', type: 'string', required: true, maxLength: 100 } as StringSchema,\n  { name: '企业类型', type: 'string', required: true, maxLength: 100 } as StringSchema,\n  { name: '许可证号', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '许可证发证日期', type: 'date', required: false } as DateSchema,\n  { name: '许可证有效期至', type: 'date', required: false } as DateSchema,\n  { name: '经营范围', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '范围显示', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '营业执照号', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '营业执照发证日期', type: 'date' } as DateSchema,\n  { name: '营业执照有效期至', type: 'date' } as DateSchema,\n  { name: '营业执照年检证明', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '组织机构代码证号', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '组织代码发证日期', type: 'date' } as DateSchema,\n  { name: '组织代码有效期至', type: 'date' } as DateSchema,\n  { name: '组织代码年检证明', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '税务登记证号', type: 'string', maxLength: 100 } as StringSchema,\n  { name: '税务登记证发证日期', type: 'date' } as DateSchema,\n  { name: 'submit', type: 'submit' }\n];\n\nconst schemaSupplier3: Schema = [\n  { name: '供应商', type: 'id', required: false },\n  { name: '认证', type: 'string', required: true, maxLength: 100 } as StringSchema,\n  { name: '证书号', type: 'string', required: false, maxLength: 100 } as StringSchema,\n  { name: '发证日期', type: 'date' } as DateSchema,\n  { name: '证书有效期启', type: 'date' } as DateSchema,\n  { name: '证书有效期至', type: 'date' } as DateSchema,\n  { name: '认证范围', type: 'string', maxLength: 100 } as StringSchema,\n  { name: 'submit', type: 'submit' }\n];\n\nclass VTuidEditSupplier extends VTuidEdit {\n  private form2: Form;\n  private form3: Form;\n  private cid: number;\n\n  protected uiSchema: UiSchema = {\n    items: {\n      id: { widget: 'id', visible: false } as UiIdItem,\n      名称: { widget: 'text' } as UiTextItem,\n      编码: { widget: 'text' } as UiTextItem,\n      查询码: { widget: 'text' } as UiTextItem,\n      法人代表: { widget: 'text' } as UiTextItem,\n      注册地址: { widget: 'text' } as UiTextItem,\n      退货地址: { widget: 'text' } as UiTextItem,\n      企业性质: { widget: 'text' } as UiTextItem,\n      联系人: { widget: 'text' } as UiTextItem,\n      submit: { widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</> },\n    }\n  }\n\n  protected uiSchema2: UiSchema = {\n    items: {\n      供应商: { widget: 'id', visible: false } as UiIdItem,\n      图片: { widget: 'text' } as UiTextItem,\n      企业类型: { widget: 'text' } as UiTextItem,\n      许可证号: { widget: 'text' } as UiTextItem,\n      许可证发证日期: { widget: 'date', label: '发证日期' } as UiItem,\n      许可证有效期至: { widget: 'date', label: '有效期至' } as UiItem,\n      经营范围: { widget: 'text' } as UiTextItem,\n      范围显示: { widget: 'text' } as UiTextItem,\n      营业执照号: { widget: 'text' } as UiTextItem,\n      营业执照发证日期: { widget: 'date', label: '发证日期' } as UiItem,\n      营业执照有效期至: { widget: 'date', label: '有效期至' } as UiItem,\n      营业执照年检证明: { widget: 'text' } as UiTextItem,\n      组织机构代码证号: { widget: 'text' } as UiTextItem,\n      组织代码发证日期: { widget: 'date', label: '发证日期' } as UiItem,\n      组织代码有效期至: { widget: 'date', label: '有效期至' } as UiItem,\n      组织代码年检证明: { widget: 'text' } as UiTextItem,\n      税务登记证号: { widget: 'text' } as UiTextItem,\n      税务登记证发证日期: { widget: 'date', label: '发证日期' } as UiItem,\n      submit: { widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</> },\n    }\n  }\n\n  protected uiSchema3: UiSchema = {\n    items: {\n      供应商: { widget: 'id', visible: false } as UiIdItem,\n      认证: { widget: 'text' } as UiTextItem,\n      证书号: { widget: 'text' } as UiTextItem,\n      发证日期: { widget: 'date', label: '发证日期' } as UiItem,\n      证书有效期启: { widget: 'date', label: '有效期启' } as UiItem,\n      证书有效期至: { widget: 'date', label: '有效期至' } as UiItem,\n      认证范围: { widget: 'text' } as UiTextItem,\n      submit: { widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;下一步&nbsp;</> },\n    }\n  }\n\n  formData = {\n    id: undefined,\n  }\n\n  formData2 = {\n    供应商: undefined,\n  }\n\n  formData3 = {\n    供应商: undefined,\n  }\n\n  async loadMap2(): Promise<any> {\n    let mapc2 = this.controller.cUq.map(\"供应商证照信息\");\n    let qm2 = { 供应商: this.cid };\n    let qr2 = await mapc2.query(qm2);\n    if (qr2 !== undefined) {\n      let { ret } = qr2 as { ret: any[] };\n      if (ret && ret.length > 0) {\n        let fd = ret[0];\n        fd.供应商 = this.cid;\n        this.formData2 = fd;\n      }\n    }\n  }\n\n  async loadMap3(): Promise<any> {\n    let mapc3 = this.controller.cUq.map(\"供应商认证信息\");\n    let qm3 = { 供应商: this.cid };\n    let qr3 = await mapc3.query(qm3);\n    if (qr3 !== undefined) {\n      let { ret } = qr3 as { ret: any[] };\n      if (ret && ret.length > 0) {\n        let fd = ret[0];\n        fd.供应商 = this.cid;\n        this.formData3 = fd;\n      }\n    }\n  }\n\n  async open(param?: any): Promise<void> {\n    if (param !== undefined) {\n      this.formData = param;\n\n      this.cid = this.formData.id;\n      this.formData2.供应商 = this.cid;\n      this.formData3.供应商 = this.cid;\n      let promises: PromiseLike<any>[] = [];\n      promises.push(this.loadMap2());\n      promises.push(this.loadMap3());\n      await Promise.all(promises);\n    }\n    this.openPage(this.view, param);\n  }\n\n  onFormButtonNextClick = async (name: string, context: Context) => {\n    if (name === 'submit') {\n      this.formData = context.data;\n      this.openPage(this.view2);\n      this.controller.regConfirmClose(async () => {\n        this.formData2 = this.form2.data;\n        return true;\n      })\n    }\n  }\n\n  onFormButtonNextClick2 = async (name: string, context: Context) => {\n    if (name === 'submit') {\n      this.formData2 = context.data;\n      this.openPage(this.view3);\n      this.controller.regConfirmClose(async () => {\n        this.formData3 = this.form3.data;\n        return true;\n      })\n    }\n  }\n\n  onFormButtonNextClick3 = async (name: string, context: Context) => {\n    if (name === 'submit') {\n      this.formData3 = context.data;\n      this.cid = this.formData.id;\n      let mapc2 = this.controller.cUq.map(\"供应商证照信息\");\n      let mapc3 = this.controller.cUq.map(\"供应商认证信息\");\n      let ret = await this.controller.entity.save(this.cid, this.formData);\n      let { id, inId } = ret;\n      if (inId < 0 && id < 0) {\n        return;\n      }\n      if (inId > 0)\n        id = inId;\n      this.formData2.供应商 = id;\n      this.formData3.供应商 = id;\n      let promises: PromiseLike<any>[] = [];\n      promises.push(mapc2.add(this.formData2));\n      promises.push(mapc3.add(this.formData3));\n      await Promise.all(promises);\n      this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n        <div className='m-3'>\n          <span className=\"text-success\">\n            <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n          <div className='mt-5'>\n            <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n            <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n          </div>\n        </div>\n      </Page>);\n    }\n  }\n\n  reset() {\n    this.formData = { id: undefined }\n\n    this.formData2 = { 供应商: undefined }\n\n    this.formData3 = { 供应商: undefined }\n  }\n\n  protected next = async () => {\n    this.reset();\n    this.closePage(4);\n    await this.open();\n  }\n\n  protected finish = () => {\n    this.closePage(4);\n  }\n\n  protected get view() {\n    let { label } = this.controller;\n    return () => <Page header={label}>\n      <Form className=\"p-3\" schema={schemaSupplier} uiSchema={this.uiSchema} formData={this.formData}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick}\n      />\n    </Page>;\n  }\n\n  protected get view2() {\n    let { label } = this.controller;\n    return () => <Page header={label}>\n      <Form ref={v => this.form2 = v} className=\"p-3\" schema={schemaSupplier2} uiSchema={this.uiSchema2} formData={this.formData2}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick2}\n      />\n    </Page>;\n  }\n\n  protected get view3() {\n    let { label } = this.controller;\n    return () => <Page header={label}>\n      <Form ref={v => this.form3 = v} className=\"p-3\" schema={schemaSupplier3} uiSchema={this.uiSchema3} formData={this.formData3}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick3}\n      />\n    </Page>;\n  }\n}\n\nexport class CTuidSelectSupplier extends CTuidSelect {\n  protected get VTuidSelect(): typeof VTuidSelect { return VTuidSelectSupplier }\n\n}\n\nclass VTuidSelectSupplier extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('供应商信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?: any): Promise<void> {\n    await this.showM(param);\n  }\n\n  protected async showM(param?: any) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item: any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n      initKey={''}\n      onSearch={this.onSearchMain} placeholder={'搜索' + this.label} />;\n    return <Page header=\"选择供应商\" right={rbutton} back=\"close\">\n      {header}\n      <List\n        items={this.controller.PageItems.items}\n        item={{ render: this.renderMainRow, onClick: this.clickRow }}\n        before={'搜索' + this.label + '资料'} />\n    </Page>;\n  });\n\n  protected divView = (param: any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择供应商\" right={rbutton}>\n      <List\n        items={param.items}\n        item={{ render: this.renderDivRow, onClick: this.clickDivRow }} />\n    </Page>;\n  }\n}\n\nexport class CTuidListSupplier extends CTuidList {\n  protected get VTuidList(): typeof VTuidMainList { return VTuidMainListSupplier }\n\n}\n\nexport class VTuidMainListSupplier extends VTuidMainList {\n\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\n\n\nexport class CTuidSelectManufactor extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectManufactor}\n\n}\n\nclass VTuidSelectManufactor extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('生产厂商', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n        await this.showM(param);\n  }\n\n  protected async showM(param) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n        initKey={''}\n        onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择生产厂商\" right={rbutton} back=\"close\">\n        {header}\n        <List\n            items={this.controller.PageItems.items}\n            item={{render: this.renderMainRow, onClick: this.clickRow}}\n            before={'搜索'+this.label+'资料'} />\n    </Page>;\n  });\n\n protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择生产厂商\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\n\n\nexport class CTuidSelectStaff extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectStaff}\n\n}\n\nclass VTuidSelectStaff extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('职员信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n        await this.showM(param);\n  }\n\n  protected async showM(param?:any) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n        initKey={''}\n        onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择职员\" right={rbutton} back=\"close\">\n        {header}\n        <List\n            items={this.controller.PageItems.items}\n            item={{render: this.renderMainRow, onClick: this.clickRow}}\n            before={'搜索'+this.label+'资料'} />\n    </Page>;\n  });\n\n protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择职员\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\n\n\nexport class CTuidSelectDepartment extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectDepartment}\n\n}\n\nclass VTuidSelectDepartment extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('部门信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n        await this.showM(param);\n  }\n\n  protected async showM(param?:any) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n        initKey={''}\n        onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择部门\" right={rbutton} back=\"close\">\n        {header}\n        <List\n            items={this.controller.PageItems.items}\n            item={{render: this.renderMainRow, onClick: this.clickRow}}\n            before={'搜索'+this.label+'资料'} />\n    </Page>;\n  });\n\n protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择部门\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\n\n\nexport class CTuidSelectGoodslocation extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectGoodslocation}\n\n}\n\nclass VTuidSelectGoodslocation extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('货位信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n        await this.showM(param);\n  }\n\n  protected async showM(param?:any) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n        initKey={''}\n        onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择货位\" right={rbutton} back=\"close\">\n        {header}\n        <List\n            items={this.controller.PageItems.items}\n            item={{render: this.renderMainRow, onClick: this.clickRow}}\n            before={'搜索'+this.label+'资料'} />\n    </Page>;\n  });\n\n protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择货位\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\n\n\nexport class CTuidSelectWarehouse extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectWarehouse}\n\n}\n\nclass VTuidSelectWarehouse extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('库区信息', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n        await this.showM(param);\n  }\n\n  protected async showM(param?:any) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n        initKey={''}\n        onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择库区\" right={rbutton} back=\"close\">\n        {header}\n        <List\n            items={this.controller.PageItems.items}\n            item={{render: this.renderMainRow, onClick: this.clickRow}}\n            before={'搜索'+this.label+'资料'} />\n    </Page>;\n  });\n\n protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择库区\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { FA } from 'tonva-react-form';\nimport { CTuidMain, VTuidMain, CTuidEdit, VEntity, Tuid, TuidUI, VTuidEdit, FieldCall, VForm, TuidMain, FieldTuidUI } from \"tonva-react-uq\";\nimport { CTuidList, VTuidMainList, CTuidSelect, VTuidSelect} from 'tonva-react-uq'\nimport { Page, UiInputItem } from 'tonva-tools';\nimport { Form, Field, UiSchema, Schema, Context, ArrSchema, UiArr, IntSchema, IdSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, UiRange, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { SearchBox, List, Muted } from 'tonva-react-form';\nimport { Button } from 'reactstrap';\nimport { navToPage, navToEditPage } from 'pages'\nimport { UiItem } from 'tonva-tools/ui/form/uiSchema';\nimport { RowContent } from 'tonva-react-uq/controllers/form/viewModel';\n\n\nexport class CTuidSelectLogisticscentre extends CTuidSelect {\n  protected get VTuidSelect():typeof VTuidSelect {return VTuidSelectLogisticscentre}\n\n}\n\nclass VTuidSelectLogisticscentre extends VTuidSelect {\n  onNew = async () => {\n    navToEditPage('物流中心', this.controller.cUq.cApp);\n  }\n\n  async open(param?:any): Promise<void> {\n        await this.showM(param);\n  }\n\n  protected async showM(param?:any) {\n    this.mainRowContent = this.ui.rowContent || RowContent;\n    await this.controller.searchMain('');\n    this.openPage(this.mainView);\n  }\n\n  clickRow = (item:any) => {\n    this.backPage();\n    this.returnCall(item);\n  }\n\n\n  protected mainView = observer(() => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    let header = <SearchBox className=\"mx-1 w-100\"\n        initKey={''}\n        onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n    return <Page header=\"选择物流中心\" right={rbutton} back=\"close\">\n        {header}\n        <List\n            items={this.controller.PageItems.items}\n            item={{render: this.renderMainRow, onClick: this.clickRow}}\n            before={'搜索'+this.label+'资料'} />\n    </Page>;\n  });\n\n protected divView = (param:any) => {\n    let rbutton = <Button className=\"ml-2\" color=\"primary\" onClick={this.onNew}>新增</Button>;\n    return <Page header=\"选择物流中心\" right={rbutton}>\n        <List\n            items={param.items}\n            item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n    </Page>;\n  }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { LMR, Muted } from 'tonva-react-form';\nimport { tv, TuidUI, FieldTuidUI } from 'tonva-react-uq';\nimport { CTuidMainProduct, CTuidEditProduct, CTuidSelectProduct, CTuidListProduct } from './productuid'\nimport { CTuidMainPackType, CTuidSelectPackType} from './packtype'\nimport { CTuidMainCustomer, CTuidSelectCustomer, CTuidEditCustomer, CTuidListCustomer } from './customertuid'\nimport { CTuidMainSupplier, CTuidSelectSupplier, CTuidEditSupplier, CTuidListSupplier } from './suppllier'\nimport { CTuidSelectManufactor} from './manufactor'\nimport { CTuidSelectStaff} from './staff'\nimport { CTuidSelectDepartment} from './department'\nimport { CTuidSelectGoodslocation} from './goodslocation'\nimport { CTuidSelectWarehouse} from './warehouse'\nimport { CTuidSelectLogisticscentre} from './logisticscentre'\n\nconst productPackRowContent = observer((values) => {\n    let {id, ratio, name, $owner} = values;\n    let content, rText = String(ratio);\n    if ($owner !== undefined) {\n        let packType = $owner.valueFromFieldName('packType');\n        if (packType !== undefined) {\n            let packName = packType.valueFromFieldName? packType.valueFromFieldName('name') : packType['name'];\n            if (packName) {\n                if (name) content = name + ' = ' + (rText + packName);\n                else content = (rText + packName);\n            }\n        }\n    }\n    if (content === undefined) content = (name? name + ' ' + rText : rText) + ' err: no $owner in values';\n    return <div className=\"px-3 py-2\">{content}</div>;\n});\n\nconst product:TuidUI = {\n    CTuidMain: CTuidMainProduct,\n    CTuidEdit: CTuidEditProduct,\n    CTuidSelect: CTuidSelectProduct,\n    CTuidList: CTuidListProduct,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ...'}</>;\n    },\n    rowContent: observer((row):JSX.Element => {\n        let {id, 名称, 编码, packType} = row;\n        let right;\n        let mid = 'id ' + id;\n        if (packType && packType.content) {\n            right = <Muted>{tv(packType)}</Muted>;\n        }\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={mid}/>\n    }),\n    divs: {\n        packtype: {\n            content: observer((values) => {\n                let {id, ratio, name, $owner} = values;\n                if ($owner === undefined)\n                    return <>{name || ratio || 'id' + id + ' ...'}</>;\n                let packType = $owner.valueFromFieldName('packType');\n                return <>{name || (ratio + (packType && packType.name)) || 'id' + id + ' ...'}</>;\n            }),\n            rowContent: productPackRowContent,\n        }\n    },\n    form: {\n        items: {\n            packType: {\n                autoList: true,\n            } as FieldTuidUI,\n            pack: {\n                rowContent: productPackRowContent,\n            }\n        }\n    }\n};\n\nconst packType:TuidUI = {\n    CTuidMain : CTuidMainPackType,\n    CTuidSelect : CTuidSelectPackType,\n    content: (values) => {\n        let {id, name, discription} = values;\n        return <>{name || discription || 'id ' + id + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {name, discription} = row;\n        let right = <Muted>{discription}</Muted>;\n        return <LMR className=\"px-3 py-2\" left={name} right={right}/>\n    },\n    divs: {\n        packtype: {\n            content: (values) => {\n                let {id, name, discription} = values;\n                return <>{name || discription || 'id ' + id + ' ...'}</>;\n            },\n            rowContent: (row):JSX.Element => {\n                let {name, discription} = row;\n                let right = <Muted>{discription}</Muted>;\n                return <LMR className=\"px-3 py-2\" left={name} right={right}/>\n            },\n        }\n    }\n};\n\nconst customer:TuidUI = {\n    CTuidMain: CTuidMainCustomer,\n    CTuidSelect: CTuidSelectCustomer,\n    CTuidEdit: CTuidEditCustomer,\n    CTuidList: CTuidListCustomer,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {id, 名称, 编码} = row;\n        let right = <Muted>{'id ' + id}</Muted>;\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={right}/>\n    },\n};\n\nconst supplier:TuidUI = {\n    CTuidMain: CTuidMainSupplier,\n    CTuidSelect: CTuidSelectSupplier,\n    CTuidEdit: CTuidEditSupplier,\n    CTuidList: CTuidListSupplier,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {id, 名称, 编码} = row;\n        let right = <Muted>{'id ' + id}</Muted>;\n        return <LMR className=\"px-3 py-2\" left={名称+ ' ' + 编码} right={right}/>\n    },\n};\n\nconst manufactor:TuidUI = {\n    CTuidSelect: CTuidSelectManufactor,\n    content: (values) => {\n        let {id, 名称} = values;\n        return <>{名称 || 'id ' + id + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {名称, id} = row;\n        let right = <Muted>{}</Muted>;\n        let mid = <>{'id ' + id}</>;\n        return <LMR className=\"px-3 py-2\" left={名称} right={mid}/>\n    },\n}\n\nconst staff:TuidUI = {\n    CTuidSelect: CTuidSelectStaff,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {名称, 编码, id} = row;\n        let right = <Muted>{}</Muted>;\n        let mid = <>{'id ' + id}</>;\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={mid}/>\n    },\n}\n\nconst department:TuidUI = {\n    CTuidSelect: CTuidSelectDepartment,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {id, 名称, 编码} = row;\n        let right = <Muted>{}</Muted>;\n        let mid = <>{'id ' + id}</>;\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={mid}/>\n    },\n}\n\nconst logisticscentre:TuidUI = {\n    CTuidSelect: CTuidSelectLogisticscentre,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {名称, 编码, id} = row;\n        let right = <Muted>{}</Muted>;\n        let mid = <>{'id ' + id}</>;\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={mid}/>\n    },\n}\n\nconst warehouse:TuidUI = {\n    CTuidSelect: CTuidSelectWarehouse,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {id, 名称, 编码} = row;\n        let right = <Muted>{}</Muted>;\n        let mid = <>{'id ' + id}</>;\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={mid}/>\n    },\n}\n\nconst goodslocation:TuidUI = {\n    CTuidSelect: CTuidSelectGoodslocation,\n    content: (values) => {\n        let {id, 名称, 编码} = values;\n        return <>{名称 || ('id ' + id) + ' ' + 编码 + ' ...'}</>;\n    },\n    rowContent: (row):JSX.Element => {\n        let {id, 名称, 编码} = row;\n        let right = <Muted>{}</Muted>;\n        let mid = <>{'id ' + id}</>;\n        return <LMR className=\"px-3 py-2\" left={名称 + ' ' + 编码} right={mid}/>\n    },\n}\n\nexport default {\n    product: product,\n    packType: packType,\n    生产厂商: manufactor,\n    客户信息: customer,\n    供应商信息: supplier,\n    职员信息:staff,\n    部门信息: department,\n    物流中心:logisticscentre,\n    货位信息:goodslocation,\n    库区信息:warehouse,\n}\n","import CN from './zh/CN';\n\nconst res = {\n    zh: {\n        CN: CN\n    }\n};\n\nexport default res;\n","import React from 'react';\nimport _ from 'lodash';\n\nexport default {\n  x: {\n    no: '编号',\n    team: '部门',\n    staff: '员工',\n    noStaff: '无员工',\n    post: '职位',\n    noPost: '无职位',\n    a: 'aaa',\n    b: {\n      s: 'sss',\n      d: () => <span className=\"text-success\">ddd</span>,\n    },\n    c: () => <span className=\"text-danger\">ccc</span>,\n  },\n  none: \"无\",\n  usq: 'scmbasedata',\n  tuid: '基础档案',\n  map: '对照表',\n  tuidPlaceHolder: '选择',\n  sheet: '单据',\n  history: '流水账',\n  submit: '提交',\n  arrNew: '新增',\n  arrEdit: '保存',\n  entity: {\n    product: {\n      label: '商品信息',\n      fields: {\n        discription: '名称',\n        packType: '计量类型',\n      },\n      arrs: {\n        pack: {\n          label: '包装单位',\n          fields: {\n            ratio: '换算率(相对基本单位)',\n            name: '名称'\n          }\n        }\n      }\n    },\n    packtype: {\n      label: '计量类型',\n      fields: {\n        name: '计量单位(如 g,ml,台,个)',\n        discription: '计量类型(如 重量，长度,单体)',\n      },\n    },\n    price: {\n      label: '价格表',\n    },\n    message: {\n      label: '消息-message',\n      arrNew: '新增消息',\n      arrEdit: '保存消息',\n      fields: {\n        fromUser: '发送人',\n        fromUnit: '发送部门',\n        type: '类型',\n        date: '日期',\n        subject: '主题',\n        discription: '描述',\n        content: '内容'\n      },\n    },\n    getMessage: {\n      label: '获取Message',\n      submit: '获取消息',\n      fields: {\n        msg: '消息'\n      }\n    },\n    newMessage: {\n      label: '新建消息',\n      fields: {\n        type: '类型',\n        subject: '主题',\n      },\n      arrs: {\n        to: {\n          label: '发送',\n          newSubmit: '新增to',\n          editSumbit: '保存to',\n        },\n        cc: {\n          label: '抄送',\n          newSubmit: '新增cc',\n          editSumbit: '保存cc',\n        }\n      }\n    },\n    teamPerson: {\n      label: '部门员工职位',\n      fields: {\n      },\n      confirmDelete: _.template('真的要删除${label}吗'),\n    },\n    user: {\n      label: '用户'\n    }\n  }\n}\n","import * as React from 'react';\nimport { FA } from 'tonva-react-form';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport classNames from 'classnames';\nimport { List, Muted, LMR, EasyDate } from 'tonva-react-form';\nimport { Page } from 'tonva-tools';\nimport { VEntity, Sheet, SheetUI, VForm } from \"tonva-react-uq\";\nimport { CSheet, VSheetMain, VSheetNew } from \"tonva-react-uq\";\nimport { Form, Field, UiSchema, Schema, UiItem, Context, ArrSchema, UiArr, IntSchema, StringSchema, DateSchema, UiTextAreaItem, UiIdItem, ButtonSchema, UiTextItem, NumSchema, UiCustom, nav } from 'tonva-tools';\nimport { NumberWidget } from 'tonva-tools/ui/form/widgets';\n\nexport class CSheetReceive extends CSheet {\n}\n\nexport class VSheetMainReceive extends VEntity<Sheet, SheetUI, CSheetReceive> {\n  async open() {\n    this.openPage(this.view);\n  }\n\n  newClick = () => this.event('new');\n  schemaClick = () => this.event('schema');\n  archivesClick = () => this.event('archives');\n  sheetStateClick = (state) => this.event('state', state);\n\n  renderState = (item: any, index: number) => {\n    let { state, count } = item;\n    if (count === 0) return null;\n    let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n    return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n  }\n\n  protected view = observer(() => {\n    let list = this.controller.statesCount.filter(row => row.count);\n    let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n    let templet: any;\n    if (this.isDev === true) {\n      templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n    }\n    return <Page header={this.label}>\n      <LMR\n        className=\"mx-3 my-2\"\n        right={right}>\n        <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n        {templet}\n      </LMR>\n      <List className=\"my-2\"\n        header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n        none=\"[ 无 ]\"\n        items={list}\n        item={{ render: this.renderState, onClick: this.sheetStateClick }} />\n    </Page>;\n  });\n}\n\nconst schemaPurchase : Schema = [\n  {name: '供货者', type: 'id', required: true},\n  {name: '公司机构', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '合同单号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '日期', type: 'date', required: false} as DateSchema,\n  {name: '物流中心', type: 'id', required: false},\n  {name: '送货人', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '是否空入', type: 'string', maxLength: 10} as StringSchema,\n  {name: '单号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '随货同行单号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '承运方式', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '委托运输单号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '发运地点', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '运输单位', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '运输方式', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '运输工具', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '运输状态', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '运输车牌号', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '温控方式', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '温控状态', type: 'string', required: false, maxLength: 100} as StringSchema,\n  {name: '启运温度', type: 'number'},\n  {name: '到货温度', type: 'number'},\n  {name: '启运时间', type: 'date', required: false} as DateSchema,\n  {name: '预到货时间', type: 'date', required: false} as DateSchema,\n  {name: '到货时间', type: 'date', required: false} as DateSchema,\n  {\n    name: 'products',\n    type: 'arr',\n    arr: [\n      {name: 'product', type:'id', required:true},\n      {name: '价格', type: 'number', required:true},\n      {name: '数量', type: 'number', required:true},\n      {name: '金额', type: 'number', required:true},\n    ]\n  } as ArrSchema,\n  {name: 'submit', type: 'submit'},\n];\n\nexport class VSheetNewReceive extends VEntity<Sheet, SheetUI, CSheetReceive> {\n  vForm: VForm;\n  formData = {\n    单号: undefined,\n  }\n\n  ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n    return <div>\n        <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n        {content}\n    </div>;\n  }\n\n\n  protected uiSchema : UiSchema = {\n    items : {\n      供货者: { widget: 'id'} as UiIdItem,\n      公司机构: { widget: 'text'} as UiTextItem,\n      合同单号: { widget: 'text'} as UiTextItem,\n      日期: { widget: 'text'} as UiTextItem,\n      物流中心: { widget: 'id'} as UiIdItem,\n      送货人: { widget: 'text'} as UiTextItem,\n      是否空入: { widget: 'text'} as UiTextItem,\n      单号: { widget: 'text'} as UiTextItem,\n      随货同行单号: { widget: 'text'} as UiItem,\n      承运方式: { widget: 'text'} as UiTextItem,\n      委托运输单号: { widget: 'text'} as UiTextItem,\n      发运地点: { widget: 'text'} as UiTextItem,\n      运输单位: { widget: 'text'} as UiTextItem,\n      运输方式: { widget: 'text'} as UiTextItem,\n      运输工具: { widget: 'text'} as UiTextItem,\n      运输状态: { widget: 'text'} as UiTextItem,\n      运输车牌号: { widget: 'text'} as UiTextItem,\n      温控方式: { widget: 'text'} as UiTextItem,\n      温控状态: { widget: 'text'} as UiTextItem,\n      启运温度: { widget: 'custom', WidgetClass: NumberWidget} as UiCustom,\n      到货温度: { widget: 'custom', WidgetClass: NumberWidget} as UiCustom,\n      启运时间: { widget: 'date'} as UiItem,\n      到货时间: { widget: 'date'} as UiItem,\n      submit: {widget: 'button', className: 'btn btn-primary', Templet: <><i className=\"fa\" />&nbsp;确定&nbsp;</>},\n      products: {\n        widget: 'arr',\n        items: {\n          product: { widget: 'id', readOnly:true} as UiIdItem,\n          价格: { widget: 'custom', readOnly:true, WidgetClass: NumberWidget},\n          数量: { widget: 'custom', readOnly:true, WidgetClass: NumberWidget},\n          金额: { widget: 'custom', readOnly:true, WidgetClass: NumberWidget},\n        },\n        label: '商品',\n        Templet: () => {\n          return <div className=\"form-inline\">\n          <Field name=\"product\" />\n          <Field name=\"价格\" />\n          <Field name=\"数量\" />\n          <Field name=\"金额\" />\n        </div>\n        },\n        ArrContainer: this.ArrContainer,\n      } as UiArr,\n    },\n  }\n\n  \n  //protected get arrView\n\n  async open(param?: any) {\n    // if (param !== undefined) {\n    //   this.formData = param;\n    // }\n\n    // this.openPage(this.viewGetSheetNo, param);\n    this.row = this.rowContentSelectPurchase;\n    this.stateName = '$'\n    this.controllerPurchase = this.controller.cUq.cSheetFromName('采购订单');\n    this.stateLabel = this.controllerPurchase.getStateLabel(this.stateName);\n    this.controllerPurchase.pageStateItems = this.controllerPurchase.entity.createPageStateItems();\n    await this.controllerPurchase.pageStateItems.first(this.stateName);\n    this.openPage(this.viewSelectPurchase);\n  }\n\n  onFormButtonNextClick = async (name:string, context:Context) => {\n    if (name === 'submit') {\n    }\n  }\n\n  protected get view() {\n    let {label} = this.controller;\n    return () => <Page header={label}>\n      <Form className=\"p-3\" schema={schemaPurchase} uiSchema={this.uiSchema} formData={this.formData}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick}\n      />\n    </Page>;\n  }\n\n  protected get viewGetSheetNo() {\n    let label = '采购收货 新开';\n    return () => <Page header={label}>\n      <Form className=\"p-3\" schema={schemaPurchase} uiSchema={this.uiSchema} formData={this.formData}\n        fieldLabelSize={2}\n        onButtonClick={this.onFormButtonNextClick}\n      />\n    </Page>;\n  }\n\n  //for selectPurchase\n  protected controllerPurchase: CSheet;\n  protected row: (values) => JSX.Element;\n  stateName: string;\n  stateLabel: string;\n\n  async openSelectPurchase(item:any) {\n    this.row = this.rowContentSelectPurchase;\n    this.stateName = '$';\n    this.controllerPurchase = this.controller.cUq.cSheetFromName('采购订单');\n    this.stateLabel = this.controllerPurchase.getStateLabel(this.stateName);\n    await this.controllerPurchase.pageStateItems.first(this.stateName);\n    this.openPage(this.viewSelectPurchase);\n  }\n\n  rowPurchaseClick = async (brief:any) => {\n    let sheetData = await this.controllerPurchase.getSheetData(brief.id);\n    let data = sheetData.data;\n    this.formData.单号 = brief.no;\n    this.formData['供货者'] = data.供货者.id;\n    this.formData['合同单号'] = data.合同号;\n    let products = [];\n    if (data.products) {\n      data.products.forEach((value,index)=>{\n        let v1 = value;\n        v1['product'] = value.product.id;\n        products.push(v1);\n      })\n    }\n    this.formData['products'] = products;\n    this.openPage(this.view);\n  }\n\n  private onScrollBottomSelectPurchase = () => {\n    console.log('onScrollBottom');\n    this.controllerPurchase.pageStateItems.more();\n  }\n\n  protected rowContentSelectPurchase = (row:any):JSX.Element => {\n    let {id, no, discription, date, processing} = row;\n      let left = <>            \n          {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n  private renderRowSelectPurchase = (row:any, index:number) => <this.row {...row} />\n\n  protected viewSelectPurchase = () => {\n    //let sheets = this.controller.stateSheets;\n    let {pageStateItems} = this.controllerPurchase;\n    return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottomSelectPurchase}>\n          <>选择采购订单\n          </>\n            <List items={pageStateItems} item={{render:this.renderRowSelectPurchase, onClick:this.rowPurchaseClick}} />\n        </Page>;\n  }\n}\n","import { AppUI, CApp } from \"tonva-react-uq\";\nimport { VHome } from './main';\nimport { CSCMApp } from '../CSCMApp';\nimport scmbaseUI from './scmbase';\n\nconst ui: AppUI = {\n    appName: \"bruce/SCMBase\",\n    CApp: CSCMApp,\n    main: VHome,\n    uqs: {\n        'bruce/scmbasedata': scmbaseUI\n    }\n}\n\nexport default ui;\n","import * as React from 'react';\n\nimport { CApp, CUq } from 'tonva-react-uq';\nimport { CHome } from './home/CHome';\nimport { CFunctionCategory } from 'functionCategory/CFunctionCategory';\nimport { consts } from './home/consts';\nimport { WebUser } from 'CurrentUser';\nimport { Controller, VPage } from 'tonva-tools'\n\nexport class CSCMApp extends CApp {\n\n  currentUser: WebUser;\n  currentSalesRegion: any;\n  currentLanguage: any;\n\n  cHome: CHome;\n  cFunctionCategory: CFunctionCategory;\n\n  protected async internalStart() {\n    if (this.isLogined) {\n      //this.currentUser.user = this.user;\n    }\n\n    this.cFunctionCategory = new CFunctionCategory(this, undefined);\n    this.cHome = new CHome(this, undefined);\n\n    let promises: PromiseLike<void>[] = [];\n    promises.push(this.cFunctionCategory.start());\n    await Promise.all(promises);\n    this.showMain();\n  }\n\n  showMain(initTabName?: string) {\n    this.openVPage(this.VAppMain, initTabName);\n  }\n\n  public async showOneVPage(vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> {\n    await (new vp(this)).open(param);\n  }\n\n  protected onDispose() {\n  }\n}\n","import { UqUI } from 'tonva-react-uq';\nimport tuid from './tuid';\nimport res from './res';\nimport sheet from './sheet';\n//import map from './map';\n\nconst uqUI:UqUI = {\n    //CTuidMain: MyCTuid,\n    tuid: tuid,\n    sheet: sheet,\n    res: res\n}\n\n\nconst uqUIs = uqUI;\n/*\n{\n    $: uqUI,\n    \"aa-bb\": aa_BB_UsqUI,\n}\n*/\nexport default uqUIs;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { LMR, Muted } from 'tonva-react-form';\nimport * as Purchase from './purchase'\nimport * as Receive from './receive'\nimport {SheetUI} from 'tonva-react-uq'\n\nconst purchase: SheetUI = {\n  CSheet: Purchase.CSheetPurchase,\n  main: Purchase.VSheetMainPurchase,\n  sheetNew: Purchase.VSheetNewPurchase\n}\n\nconst receive: SheetUI = {\n  CSheet: Receive.CSheetReceive,\n  main: Receive.VSheetMainReceive,\n  sheetNew: Receive.VSheetNewReceive\n}\n\nexport default {\n  //采购订单: purchase,\n  采购收货: receive,\n}","import * as React from 'react';\nimport './App.css';\nimport { NavView, nav, Page, Tabs } from 'tonva-tools';\nimport { startApp } from 'tonva-react-uq';\nimport ui from './ui';\n//import { faceTabs } from 'facetabs';\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await startApp(ui);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}